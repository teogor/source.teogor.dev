{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#why-gleam","title":"Why Gleam?","text":"<p>Tired of the same old, generic bottom sheets that stifle your innovative Compose app? Enter Gleam, the modern and customizable bottom sheet library designed to empower your creativity and elevate your user experience.</p>"},{"location":"#jump-to-download","title":"Jump to Download","text":"<p>Here's why Gleam should be your go-to choice:</p> <p>\ud83c\udfa8 Modern &amp; Customizable:</p> <ul> <li>Design stunning bottom sheets that seamlessly match your app's aesthetic with Gleam's wide range   of customization options. Say goodbye to generic, cookie-cutter designs!</li> <li>Shape, color, elevation, animations, and more are all easily configurable to create a unique and   immersive user experience.</li> </ul> <p>\ud83d\ude80 Effortless Integration:</p> <ul> <li>Integrate Gleam into your Compose codebase in a snap. No complex setups or boilerplate code. Just   focus on building amazing features!</li> <li>Gleam plays nicely with other Compose components and tools, making it the perfect addition to your   existing workflow.</li> </ul> <p>\ud83d\udcca Powerful &amp; Flexible:</p> <ul> <li>Handle long lists of actions, detailed information with icons, or confirmations confidently with   Gleam's ability to adapt to various content types.</li> <li>Whether you need a simple confirmation dialog or a complex configuration sheet, Gleam has you   covered.</li> </ul> <p>\ud83e\udd39\u200d\u2642\ufe0f Easy Interaction:</p> <ul> <li>Enable user interaction with intuitive gestures and actions for a more engaging and delightful   experience.</li> <li>Make your bottom sheets interactive and responsive, adding a dynamic touch to your app.</li> </ul> <p>\u2728 Polished &amp; Refined:</p> <ul> <li>Ensure a smooth and seamless user experience with Gleam's polished animations and intuitive   interactions.</li> <li>Gleam takes care of the details so you can focus on delivering top-notch value to your users.</li> </ul> <p>Description:</p> <p>Gleam brings beautiful, interactive bottom sheets to your Kotlin Compose app. Design with ease, seamlessly integrate, and elevate your user experience.</p>"},{"location":"#download","title":"Download","text":""},{"location":"#gradle","title":"Gradle","text":"<p>Add the dependency below into your module's <code>build.gradle</code> file:</p> KotlinGroovy <pre><code>dependencies {\n  implementation(\"dev.teogor.gleam:gleam:1.0.0-alpha01\")\n}\n</code></pre> <pre><code>dependencies {\n  implementation \"dev.teogor.gleam:gleam:1.0.0-alpha01\"\n}\n</code></pre>"},{"location":"#documentation","title":"Documentation","text":"<p>For comprehensive details about Gleam, please refer to the complete documentation available here.</p>"},{"location":"#implementation","title":"Implementation","text":""},{"location":"#implementing-gleam","title":"Implementing Gleam","text":"<p>This section provides a step-by-step guide to using <code>Gleam</code> in your Compose app:</p> <p>1. Create a State Variable:</p> <pre><code>var showGleam by remember { mutableStateOf(false) }\n</code></pre> <p>This state variable controls the visibility of the Gleam bottom sheet. Initially, it's set to <code>false</code>, keeping the sheet hidden.</p> <p>2. Render the Button:</p> <pre><code>Button(\n  modifier = Modifier.fillMaxWidth(), // Fill the available width\n  onClick = { showGleam = true },\n) {\n  Text(text = \"Show Gleam\")\n}\n</code></pre> <p>This creates a button with the text \"Show Gleam\". When clicked, it sets <code>showGleam</code> to <code>true</code>, triggering the bottom sheet to appear. You can customize the button's appearance and position as needed.</p> <p>3. Conditionally Render Gleam:</p> <pre><code>if (showGleam) {\n  Gleam(\n    onDismissRequest = { showGleam = false }, // Hide sheet on dismissal\n    windowInsets = WindowInsets.none, // Remove default insets\n    properties = GleamDefaults.properties(\n      // Customize appearance\n      animateCorners = true,\n      animateHorizontalEdge = true,\n      maxHorizontalEdge = 14.dp,\n    ),\n  ) {\n    // Your bottom sheet content goes here\n    Text(text = \"This is the Gleam content!\")\n    Button(\n      onClick = { // Add an action button\n        showGleam = false // Hide sheet on action\n        // Perform other actions here\n      },\n    ) {\n      Text(text = \"Perform Action\")\n    }\n  }\n}\n</code></pre> <p>This part is crucial:</p> <ul> <li>The <code>if</code> block ensures the Gleam sheet only renders when <code>showGleam</code> is <code>true</code>.</li> <li>The <code>Gleam</code> composable configures the sheet's behavior and appearance:</li> <li><code>onDismissRequest</code>: Hides the sheet when the user swipes down or taps outside.</li> <li><code>windowInsets</code>: Adjusts padding based on system elements.</li> <li><code>properties</code>: Defines customization options like animation and corner radius.</li> <li>The content inside the <code>{}</code> block defines what appears inside the sheet. For this example, a text   message and an action button are included.</li> </ul> <p>View implementation in demo</p>"},{"location":"#implementing-gleam-with-scaffolding-gleamscaffold","title":"Implementing Gleam with Scaffolding (GleamScaffold)","text":"<p>This section provides a step-by-step guide to using <code>GleamScaffold</code> in your Compose app:</p> <p>1. Create State Variable:</p> <pre><code>var showGleam by remember { mutableStateOf(false) }\n</code></pre> <p>This state variable controls the visibility of the Gleam bottom sheet. Initially, it's set to <code>false</code>, keeping the sheet hidden.</p> <p>2. Implement GleamScaffold:</p> <pre><code>GleamScaffold(\n  isVisible = showGleam,\n  gleamContent = {\n    // Your Gleam sheet content here\n    Column(modifier = Modifier.padding(16.dp)) {\n      Text(\"This is the Gleam content!\")\n      Button(\n        onClick = { showGleam = false },\n        modifier = Modifier.align(Alignment.CenterHorizontally)\n      ) {\n        Text(\"Close\")\n      }\n    }\n  },\n) {\n  // Your main app content (repeated for clarity)\n  Text(\"This is the main app content\")\n  Button(\n    onClick = { showGleam = true },\n    modifier = Modifier.fillMaxWidth()\n  ) {\n    Text(\"Show Gleam\")\n  }\n}\n</code></pre> <p>Wrap your main app content with <code>GleamScaffold</code></p> <p>Key Points:</p> <ul> <li><code>GleamScaffold</code> simplifies sheet creation and management.</li> <li>Consistent structure reduces boilerplate code.</li> <li>Customizable appearance enhances app design.</li> </ul> <p>By following these steps and adapting them to your specific needs, you can effectively use <code>GleamScaffold</code> to create engaging and well-designed bottom sheets in your Compose apps.</p>"},{"location":"#implementing-gleam-with-navigation","title":"Implementing Gleam with Navigation","text":"<p>[!NOTE] Ensure you have added the <code>dev.teogor.gleam:gleam-navigation</code> dependency</p> <p>This guide will walk you through integrating GleamScaffold with navigation using the <code>GleamScaffold</code> composable:</p> <p>1. Initialize GleamNavigator:</p> <p>Use <code>rememberGleamNavigator</code> to create a navigation manager and associate it with the current composition:</p> <pre><code>val navigator = rememberGleamNavigator()\n</code></pre> <p>2. Connect GleamNavigator to NavController (Required):</p> <p>If you use a separate compose navigation controller (<code>NavController</code>), link it to the <code>GleamNavigator</code>:</p> <pre><code>val navController = rememberNavController()\nnavigator.provideNavController(navController)\n</code></pre> <p>3. Use GleamScaffold:</p> <p>Wrap your app's content with <code>GleamScaffold</code>, providing the <code>navigator</code> and configuring other desired options:</p> <pre><code>GleamScaffold(\n  navigator = navigator, // Connect the initialized navigator\n  modifier = Modifier.fillMaxSize(), // Optional modifiers\n  shape = sheetShape, // Customize sheet shape (optional)\n  containerColor = sheetBackgroundColor, // Set sheet background color (optional)\n  windowInsets = WindowInsets.navigationBars, // Optional insets adjustment\n  properties = GleamDefaults.properties(\n    // Customize sheet behavior (optional)\n    animateCorners = true,\n    animateHorizontalEdge = true,\n    maxHorizontalEdge = 14.dp,\n  ),\n  content = content, // Your main app content goes here\n)\n</code></pre>"},{"location":"#components","title":"Components","text":"<p>This section introduces the core building blocks of our UI library: <code>Gleam</code> and <code>GleamScaffold</code>. They offer powerful and flexible ways to display content, interact with users, and enhance your app's user experience.</p>"},{"location":"#gleam","title":"<code>Gleam</code>","text":"<p>Purpose:</p> <ul> <li>Represents the actual bottom sheet content that slides up from the screen.</li> <li>Offers an alternative to inline menus or simple dialogs for mobile apps.</li> </ul> <p>Parameters:</p> <ul> <li><code>onDismissRequest</code>: Called when the user dismisses the <code>Gleam</code> by clicking outside.</li> <li><code>modifier</code>: Optional modifiers for the <code>Gleam</code>.</li> <li><code>gleamState</code>: The state object managing the <code>Gleam</code>'s visibility and animation (   usually <code>rememberGleamState()</code>).</li> <li><code>gleamMaxWidth</code>: Maximum width of the <code>Gleam</code> in <code>Dp</code> (use <code>Dp.Unspecified</code> for full width).</li> <li><code>shape</code>: Defines the shape of the <code>Gleam</code>'s container (e.g., rounded corners).</li> <li><code>containerColor</code>: The background color of the <code>Gleam</code> container.</li> <li><code>contentColor</code>: Preferred color for content inside the <code>Gleam</code> (defaults based   on <code>containerColor</code>).</li> <li><code>tonalElevation</code>: The shadow level of the <code>Gleam</code> (in <code>Dp</code>).</li> <li><code>scrimColor</code>: The color of the overlay behind the <code>Gleam</code> when open.</li> <li><code>dragHandle</code>: Optional composable for a visual swipe handle.</li> <li><code>windowInsets</code>: Insets for proper layout and positioning.</li> <li><code>properties</code>: Additional customization options through <code>GleamProperties</code>.</li> <li><code>content</code>: The content displayed inside the <code>Gleam</code>, defined as a composable function.</li> </ul>"},{"location":"#gleamscaffold","title":"<code>GleamScaffold</code>","text":"<p>Purpose:</p> <ul> <li>Displays a <code>Gleam</code> modal window that slides up from the bottom of the screen.</li> <li>Suitable for presenting long action lists, detailed information with icons, or confirmations.</li> <li>Temporarily disables other app content and remains visible until dismissed or an action is taken.</li> </ul> <p>Parameters:</p> <ul> <li><code>gleamContent</code>: The content displayed inside the <code>Gleam</code>, defined as a composable function.</li> <li><code>isVisible</code>: Boolean, determines if the <code>Gleam</code> is visible (<code>true</code>) or hidden (<code>false</code>).</li> <li><code>modifier</code>: Optional modifiers to apply to the <code>Gleam</code>.</li> <li><code>gleamState</code>: The state object managing the <code>Gleam</code>'s visibility and animation (   usually <code>rememberGleamState()</code>).</li> <li><code>gleamMaxWidth</code>: Maximum width of the <code>Gleam</code> in <code>Dp</code> (use <code>Dp.Unspecified</code> for full width).</li> <li><code>shape</code>: Defines the shape of the <code>Gleam</code>'s container (e.g., rounded corners).</li> <li><code>containerColor</code>: The background color of the <code>Gleam</code> container.</li> <li><code>contentColor</code>: Preferred color for content inside the <code>Gleam</code> (defaults based   on <code>containerColor</code>).</li> <li><code>tonalElevation</code>: The shadow level of the <code>Gleam</code> (in <code>Dp</code>).</li> <li><code>scrimColor</code>: The color of the overlay behind the <code>Gleam</code> when open.</li> <li><code>dragHandle</code>: Optional composable for a visual swipe handle.</li> <li><code>windowInsets</code>: Insets for proper layout and positioning.</li> <li><code>properties</code>: Additional customization options through <code>GleamProperties</code>.</li> <li><code>content</code>: The content displayed beneath the <code>Gleam</code>.</li> </ul>"},{"location":"#find-this-repository-useful","title":"Find this repository useful? \ud83e\ude77","text":"<ul> <li>Support it by joining stargazers for this   repository. \ud83d\udcc1</li> <li>Get notified about my new projects by following me on GitHub. \ud83d\udcbb</li> <li>Interested in sponsoring me? Support me on GitHub! \ud83e\udd1d</li> </ul>"},{"location":"#license","title":"License","text":"<pre><code>  Designed and developed by 2024 teogor (Teodor Grigor)\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");you may not use this file except in compliance with the License.You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, softwaredistributed under the License is distributed on an \"AS IS\" BASIS,WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.See the License for the specific language governing permissions andlimitations under the License.\n</code></pre>"},{"location":"reference/","title":"Reference","text":""},{"location":"reference/#reference","title":"Reference","text":"<p>Welcome to the comprehensive API documentation for our project, meticulously crafted to empower you to effectively utilize its capabilities. This guide provides detailed information about the project's structure, API, and usage, enabling you to navigate the project with ease and unlock its full potential.</p>"},{"location":"reference/#project-overview","title":"Project Overview","text":"<p>Our project encompasses a suite of modules, each designed to address specific functionalities and enhance the overall developer experience. To delve into the intricacies of each module, refer to the dedicated documentation pages:</p>"},{"location":"reference/#api-reference","title":"API Reference","text":"<ul> <li><code>dev.teogor.gleam</code></li> <li><code>dev.teogor.gleam:gleam</code></li> <li><code>dev.teogor.gleam:gleam-navigation</code></li> </ul>"},{"location":"reference/#contributions-and-support","title":"Contributions and Support","text":"<p>We welcome your valuable feedback and contributions to the project. Your insights are crucial for shaping the project's future and ensuring it continues to meet the needs of our community. If you encounter any issues or have questions, please feel free to raise them on the GitHub Issues \ud83d\udd17 page. Our team is dedicated to assisting you and continuously improving the project's overall quality.</p>"},{"location":"reference/#embark-on-your-coding-journey","title":"Embark on Your Coding Journey","text":"<p>With this extensive documentation as your guide, you are now well-equipped to embark on your coding journey with our project. We hope you find the documentation informative and helpful as you explore the project's capabilities and bring your ideas to life.</p> <p>Happy coding!</p>"},{"location":"releases/","title":"Gleam","text":"<p>Gleam effortlessly integrates modern, customizable bottom sheets into your Kotlin Compose app for a polished user experience.</p>"},{"location":"releases/#api-reference","title":"API Reference","text":"<ul> <li><code>dev.teogor.gleam</code></li> <li><code>dev.teogor.gleam:gleam</code></li> <li><code>dev.teogor.gleam:gleam-navigation</code></li> </ul>"},{"location":"releases/#release","title":"Release","text":"Latest Update Stable Release Beta Release Alpha Release February 10, 2024 - - 1.0.0-alpha01"},{"location":"releases/#declaring-dependencies","title":"Declaring dependencies","text":"<p>To add a dependency on Gleam, you must add the Maven repository to your project. Read Maven's repository for more information.</p> <p>Add the dependencies for the artifacts you need in the <code>build.gradle</code> file for your app or module:</p> KotlinGroovy <pre><code>plugins {\n  id(\"dev.teogor.gleam\") version \"1.0.0-alpha01\"\n}\n</code></pre> <pre><code>plugins {\n  id 'dev.teogor.gleam' version '1.0.0-alpha01'\n}\n</code></pre>"},{"location":"releases/#feedback","title":"Feedback","text":"<p>Your feedback helps make Gleam better. We want to know if you discover new issues or have ideas for improving this library. Before creating a new issue, please take a look at the existing ones in this library. You can add your vote to an existing issue by clicking the star button.</p> <p>Create a new issue</p>"},{"location":"releases/#version-100","title":"Version 1.0.0","text":""},{"location":"releases/#version-100-alpha01","title":"Version 1.0.0-alpha01","text":"<p>February 06, 2024</p> <p><code>dev.teogor.gleam:gleam-*:1.0.0-alpha01</code> is released. Version 1.0.0-alpha01 contains these commits.</p> <p>Initial Release \ud83c\udf8a</p>"},{"location":"security/","title":"Security Policy","text":""},{"location":"security/#supported-versions","title":"Supported Versions","text":"<p>Please refer to this table to see which versions of the project are currently receiving security updates:</p> Version Supported STABLE \u2705 ALPHA \u274c BETA \u274c"},{"location":"security/#reporting-a-vulnerability","title":"Reporting a Vulnerability","text":"<p>If you discover a security vulnerability within this project, please follow these steps:</p> <ol> <li> <p>Do Not Disclose Publicly: Do not publicly disclose the vulnerability until it has been    addressed and a security release is available.</p> </li> <li> <p>Contact Us: Report the vulnerability to us by sending an email    to open-source@teogor.dev. You can encrypt sensitive information    using our PGP key to ensure the confidentiality of    the report.</p> </li> <li> <p>Provide Details: Please provide us with detailed information about the vulnerability,    including steps to reproduce, affected versions, and potential impact.</p> </li> <li> <p>Acknowledgment: We will acknowledge your report within 48 hours to confirm that we have    received it and are investigating.</p> </li> <li> <p>Resolution: Our security team will work to validate and address the vulnerability. We will    keep you informed about our progress and expected timelines for resolution.</p> </li> <li> <p>Disclosure: Once the vulnerability is fixed and a release is available, we will work with you    to determine an appropriate timeline for public disclosure. We appreciate your patience during    this process.</p> </li> </ol> <p>Thank you for helping us improve the security of our project.</p> <p>PGP key</p>"},{"location":"sponsor/","title":"Sponsor \ud83e\ude77","text":""},{"location":"sponsor/#about-teodor-grigor","title":"About Teodor Grigor","text":"<p>As an active open-source developer, Teodor Grigor (also known as Teogor) has made significant contributions to the developer community by creating and maintaining an extensive portfolio of open-source projects and libraries, primarily focused on Android and Kotlin development. His work has had a profound impact on the development landscape, with his projects being adopted by millions of projects, software engineers, and end-users worldwide.</p>"},{"location":"sponsor/#impact-of-teodor-grigors-work","title":"Impact of Teodor Grigor's Work","text":"<p>Teodor Grigor's open-source contributions have had a significant impact on the developer community. His projects have been used by millions of developers around the world to build high-quality Android and Kotlin applications.</p>"},{"location":"sponsor/#expressing-gratitude-and-supporting-development","title":"Expressing Gratitude and Supporting Development","text":"<p>Has this library helped you streamline your development process and reduce costs? If so, consider expressing your gratitude and supporting the developer's efforts through the provided sponsorship links below.</p> <ul> <li>GitHub Sponsor</li> <li>PayPal</li> </ul> <p>Your support is crucial for the ongoing development and enhancement of this library, ensuring it remains a valuable asset for the community. By contributing, you not only express your appreciation but also actively participate in the growth and success of open-source projects like this one. Join us in making a positive impact on the developer's efforts and the future of this project.</p>"},{"location":"sponsor/#contact-teodor-grigor","title":"Contact Teodor Grigor","text":"<p>If you have suggestions for feature requests or would like to explore sponsorship opportunities, please contact the author using the following details:</p> <ul> <li>open-source@teogor.dev</li> <li>LinkedIn</li> <li>Instagram</li> <li>X (formerly known as Twitter)</li> </ul>"},{"location":"sponsor/#sponsors","title":"Sponsors","text":"<p>Show your support by being the first sponsor of this library!</p>"},{"location":"sponsor/#become-a-sponsor","title":"Become a Sponsor","text":"<p>Your support is crucial for the ongoing development and enhancement of this library. By becoming a sponsor, you can help us:</p> <ul> <li>Continue developing new features and improvements</li> <li>Maintain and update the library for compatibility with the latest technologies</li> <li>Provide timely support to users</li> </ul> <p>Show your appreciation for this valuable library and become a sponsor. Your support makes a real difference!</p> <p>Thank you for your consideration!</p>"},{"location":"releases/implementation/","title":"Implementation","text":""},{"location":"releases/implementation/#implementation","title":"Implementation","text":""},{"location":"releases/implementation/#latest-version","title":"Latest Version","text":"<p>The latest release is <code>1.0.0-alpha01</code></p>"},{"location":"releases/implementation/#plugin-releases","title":"Plugin Releases","text":"<p>Here's a summary of the latest versions:</p> Version Release Notes Release Date 1.0.0-alpha01 changelog \ud83d\udd17 10 Feb 2024"},{"location":"releases/implementation/#using-version-catalog","title":"Using Version Catalog","text":""},{"location":"releases/implementation/#declare-components","title":"Declare Components","text":"<p>This catalog provides the implementation details of Gleam libraries and individual libraries, in TOML format.</p> Default gradle/libs.versions.toml<pre><code>[versions]\ngleam = \"1.0.0-alpha01\"\n\n[libraries]\ngleam = { id = \"dev.teogor.gleam\", name = \"gleam\", version.ref = \"gleam\" }\ngleam-navigation = { id = \"dev.teogor.gleam\", name = \"gleam-navigation\", version.ref = \"gleam\" }\n</code></pre>"},{"location":"releases/implementation/#dependencies-implementation","title":"Dependencies Implementation","text":"KotlinGroovy build.gradle.kts<pre><code>dependencies {\n  // Gleam Libraries\n  implementation(libs.gleam)\n  implementation(libs.gleam.navigation)\n}\n</code></pre> build.gradle<pre><code>dependencies {\n  // Gleam Libraries\n  implementation libs.gleam\n  implementation libs.gleam.navigation\n}\n</code></pre>"},{"location":"releases/changelog/1.0.0-alpha01/","title":"Version 1.0.0-alpha01","text":""},{"location":"releases/changelog/1.0.0-alpha01/#latest-sdk-versions","title":"Latest SDK versions","text":"Status Service or Product Gradle dependency Latest version \ud83e\uddea Gleam dev.teogor.gleam:gleam 1.0.0-alpha01 \ud83e\uddea Gleam Navigation dev.teogor.gleam:gleam-navigation 1.0.0-alpha01"},{"location":"blog/","title":"Blog","text":""}]}