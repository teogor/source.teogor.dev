{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":""},{"location":"#sudoklify","title":"\ud83e\udde9 Sudoklify \ud83e\udde9","text":""},{"location":"#overview","title":"Overview","text":""},{"location":"#a-powerful-sudoku-puzzle-generation-library","title":"A Powerful Sudoku Puzzle Generation Library","text":"<p>\ud83e\udde9 Sudoklify is a versatile and intuitive Sudoku puzzle generation library written in Kotlin. It provides a comprehensive set of tools and algorithms for generating Sudoku puzzles of various grid sizes and difficulty levels.</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>Efficient and customizable Sudoku puzzle generation algorithms \u2728</li> <li>Support for different grid sizes, including 4x4, 9x9, 16x16, and more \ud83d\udcd0</li> <li>Multiple difficulty levels - Easy, Medium, Hard, and Expert \ud83c\udf1f</li> <li>Flexible token mapping system for personalized puzzle representation \ud83c\udfa8</li> <li>Intuitive API for puzzle generation, population, and solution retrieval \ud83e\udde9</li> <li>Randomization techniques for puzzle layout and digit placement \ud83d\udd00</li> </ul>"},{"location":"#sudoklify-redefining-puzzle-generation","title":"Sudoklify: Redefining Puzzle Generation","text":"<p>Sudoklify reimagines the way Sudoku puzzles are generated, delivering a lightning-fast experience without compromising quality. Here's a glimpse into what makes Sudoklify stand out:</p>"},{"location":"#innovative-puzzle-creation","title":"Innovative Puzzle Creation","text":"<p>Traditional Sudoku generators rely on gradually removing numbers from a solved grid, often requiring extensive time and backend resources. Sudoklify, however, operates differently. It starts with a solvable \"seed\" puzzle and applies a series of ingenious transformations to craft new puzzles. This approach ensures rapid puzzle creation without the need for a complex backend infrastructure.</p>"},{"location":"#unparalleled-puzzle-diversity","title":"Unparalleled Puzzle Diversity","text":"<p>Every seed used by Sudoklify unlocks a staggering number of unique puzzles\u2014over 2.4 trillion! To put this into perspective, if you were to solve a puzzle every 3 minutes, it would take more than 13 million lifetimes to exhaust a single seed. \ud83c\udf89</p>"},{"location":"#transformative-algorithms-at-play","title":"Transformative Algorithms at Play","text":"<p>Sudoklify leverages a diverse set of transformations to create distinctive puzzles:</p> <ul> <li>Board Rotation: Incorporates four permutations (0\u00b0, 90\u00b0, 180\u00b0, 270\u00b0).</li> <li>Column Stacks Shuffle: Features six permutations (3!).</li> <li>Row Bands Shuffle: Offers another six permutations (3!).</li> <li>Column Shuffle: Provides a whopping 216 permutations (3! x 3! x 3!).</li> <li>Row Shuffle: Adds another 216 permutations (3! x 3! x 3!).</li> <li>Number Swapping: Introduces an incredible 362,880 permutations (9!).</li> </ul> <p>Combining these transformations results in a staggering number of permutations per seed\u20142,437,996,216,320. This extensive variety guarantees that each puzzle is a uniquely captivating challenge. \ud83e\udde0\ud83e\udde9\ud83d\ude80</p>"},{"location":"#usage","title":"Usage","text":""},{"location":"#generating-sudoku-puzzles","title":"Generating Sudoku Puzzles","text":"<p>To generate Sudoku puzzles using Sudoklify, follow these steps:</p> <ol> <li> <p>Add Sudoklify as a dependency in your project.</p> </li> <li> <p>Create a <code>ParamsBuilder</code> to configure the puzzle generation parameters.</p> </li> </ol> <pre><code>import dev.teogor.sudoklify.sudokuParamsBuilder\nimport dev.teogor.sudoklify.model.Difficulty\nimport dev.teogor.sudoklify.model.GameType\n\n// Configure puzzle generation parameters\nval sudokuParams = sudokuParamsBuilder {\n  difficulty { Difficulty.MEDIUM }\n  seed { createSeed(2024) }\n  type { GameType.ThreeByThree }\n}\n</code></pre> <ol> <li>Generate the Sudoku puzzle using the <code>generateSudoku</code> extension function.</li> </ol> <pre><code>import dev.teogor.sudoklify.extensions.generateSudoku\n\nval sudoku = sudokuParams.generateSudoku()\n</code></pre>"},{"location":"#accessing-generated-sudoku","title":"Accessing Generated Sudoku","text":"<p>The <code>generatedSudoku</code> instance contains the puzzle and solution strings, difficulty level, and grid type. You can access these properties as follows:</p> <pre><code>val puzzleBoard = sudoku.puzzle\nval solutionBoard = sudoku.solution\nval difficulty = sudoku.difficulty\nval gameType = sudoku.gameType\n\n// Print the properties\nprintln(\"Puzzle Board: $puzzleBoard\")\nprintln(\"Solution Board: $solutionBoard\")\nprintln(\"Difficulty: $difficulty\")\nprintln(\"Grid Type: $gameType\")\n</code></pre> <p>Getting Started</p> <p>To get started with Sudoklify, refer to the comprehensive documentation available at source.teogor.dev/sudoklify. The documentation provides detailed explanations, examples, and best practices for using the library effectively.</p>"},{"location":"#find-this-repository-useful","title":"Find this repository useful? \ud83e\ude77","text":"<ul> <li>Support it by joining stargazers for this   repository. \ud83d\udcc1</li> <li>Get notified about my new projects by following me on GitHub. \ud83d\udcbb</li> <li>Interested in sponsoring me? Support me on GitHub! \ud83e\udd1d</li> </ul>"},{"location":"#license","title":"License","text":"<pre><code>Designed and developed by 2023 teogor (Teodor Grigor)\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n</code></pre>"},{"location":"reference/","title":"Reference","text":""},{"location":"reference/#reference","title":"Reference","text":"<p>Welcome to the comprehensive API documentation for our project, meticulously crafted to empower you to effectively utilize its capabilities. This guide provides detailed information about the project's structure, API, and usage, enabling you to navigate the project with ease and unlock its full potential.</p>"},{"location":"reference/#project-overview","title":"Project Overview","text":"<p>Our project encompasses a suite of modules, each designed to address specific functionalities and enhance the overall developer experience. To delve into the intricacies of each module, refer to the dedicated documentation pages:</p> <ul> <li> <p>Sudoklify \ud83d\udd17: Discover the heart of our project.</p> </li> <li> <p>Sudoklify \ud83d\udd17: Navigate directly to the code-specific documentation for the project's <code>:sudoklify</code> module</p> </li> </ul>"},{"location":"reference/#contributions-and-support","title":"Contributions and Support","text":"<p>We welcome your valuable feedback and contributions to the project. Your insights are crucial for shaping the project's future and ensuring it continues to meet the needs of our community. If you encounter any issues or have questions, please feel free to raise them on the GitHub Issues \ud83d\udd17 page. Our team is dedicated to assisting you and continuously improving the project's overall quality.</p>"},{"location":"reference/#embark-on-your-coding-journey","title":"Embark on Your Coding Journey","text":"<p>With this extensive documentation as your guide, you are now well-equipped to embark on your coding journey with our project. We hope you find the documentation informative and helpful as you explore the project's capabilities and bring your ideas to life.</p> <p>Happy coding!</p>"},{"location":"releases/","title":"Sudoklify","text":"<p>Sudoklify is a versatile and intuitive Sudoku puzzle generation library written in Kotlin. It provides a comprehensive set of tools and algorithms for generating Sudoku puzzles of various grid sizes and difficulty levels.</p>"},{"location":"releases/#api-reference","title":"API Reference","text":"<ul> <li><code>dev.teogor.sudoklify</code></li> <li><code>dev.teogor.sudoklify:sudoklify</code></li> </ul>"},{"location":"releases/#release","title":"Release","text":"Latest Update Stable Release Beta Release Alpha Release February 08, 2024 - - 1.0.0-alpha04"},{"location":"releases/#declaring-dependencies","title":"Declaring dependencies","text":"<p>To add a dependency on Sudoklify, you must add the Maven repository to your project. Read Maven's repository for more information.</p> <p>Add the dependencies for the artifacts you need in the <code>build.gradle</code> file for your app or module:</p> KotlinGroovy <pre><code>dependencies {\n  val sudoklify_version = \"1.0.0-alpha04\"\n\n  implementation(\"dev.teogor.sudoklify:sudoklify:sudoklify_version\")\n}\n</code></pre> <pre><code>dependencies {\n  def sudoklify_version = \"1.0.0-alpha04\"\n\n  implementation(\"dev.teogor.sudoklify:sudoklify:${sudoklify_version}\")\n}\n</code></pre>"},{"location":"releases/#feedback","title":"Feedback","text":"<p>Your feedback helps make Sudoklify better. We want to know if you discover new issues or have ideas for improving this library. Before creating a new issue, please take a look at the existing ones in this library. You can add your vote to an existing issue by clicking the star button.</p> <p>Create a new issue</p>"},{"location":"releases/#version-100","title":"Version 1.0.0","text":""},{"location":"releases/#version-100-alpha04","title":"Version 1.0.0-alpha04","text":"<p>February 08, 2024</p> <p><code>dev.teogor.sudoklify:sudoklify-*:1.0.0-alpha04</code> is released. Version 1.0.0-alpha04 contains these commits.</p> <p>Enhancement</p> <ul> <li>Introduce more descriptive Cell type and board   serialization (#40)   by @teogor</li> <li>Add <code>supportsDifficulty</code> function for GameType   compatibility (#39)   by @teogor</li> <li>Enhance Sudoku seed generation for smaller puzzle   sizes (#38) by @teogor</li> <li>Implement Sudoku puzzle parsing and decoding (#37)   by @teogor</li> <li>Enhance Sudoku Solver with Thorough Test   Suite (#34) by @teogor</li> <li>Enable Sudoku puzzle parsing and conversion with   SudokuParser (#33)   by @teogor</li> <li>Enhance Sudoku Seeds with Additional Game Types and   Difficulties (#32)   by @teogor</li> <li>Enhance Difficulty Representation with Stars and Text   Options (#31)   by @teogor</li> <li>Refactor GameType enum for improved readability and   clarity (30)   by @teogor</li> <li>Improve Difficulty Enum with Percentages and   Documentation (#29)   by @teogor</li> </ul> <p>Bug Fixes</p> <ul> <li>Enhance Sudoku seed generation for smaller puzzle   sizes (#38) by @teogor</li> </ul>"},{"location":"releases/#version-100-alpha03","title":"Version 1.0.0-alpha03","text":"<p>September 21, 2023</p> <p><code>dev.teogor.sudoklify:sudoklify-*:1.0.0-alpha03</code> is released. Version 1.0.0-alpha03 contains these commits.</p> <p>Enhancement</p> <ul> <li>Refactor GameType Enum and Add Utility   Functions (#26)   by @teogor</li> </ul> <p>Bug Fixes</p> <ul> <li>Refactor GameType Enum and Add Utility   Functions (#26)   by @teogor</li> <li>Fix Inconsistency in Sudoku Puzzle Patterns and   Solutions (#24)   by @teogor</li> </ul>"},{"location":"releases/#version-100-alpha02","title":"Version 1.0.0-alpha02","text":"<p>August 25, 2023</p> <p><code>dev.teogor.sudoklify:sudoklify-*:1.0.0-alpha02</code> is released. Version 1.0.0-alpha02 contains these commits.</p> <p>Bug Fixes</p> <ul> <li>Corrected Data Types in \"Accessing Generated   Sudoku\" (#21)   by @teogor</li> <li>Update Package Name from \"exntensions\" to \"   extensions\" (#20)   by @teogor</li> </ul>"},{"location":"releases/#version-100-alpha01","title":"Version 1.0.0-alpha01","text":"<p>August 24, 2023</p> <p><code>dev.teogor.sudoklify:sudoklify-*:1.0.0-alpha01</code> is released. Version 1.0.0-alpha01 contains these commits.</p> <p>Initial Release \ud83c\udf8a</p>"},{"location":"security/","title":"Security Policy","text":""},{"location":"security/#supported-versions","title":"Supported Versions","text":"<p>Please refer to this table to see which versions of the project are currently receiving security updates:</p> Version Supported STABLE \u2705 ALPHA \u274c BETA \u274c"},{"location":"security/#reporting-a-vulnerability","title":"Reporting a Vulnerability","text":"<p>If you discover a security vulnerability within this project, please follow these steps:</p> <ol> <li> <p>Do Not Disclose Publicly: Do not publicly disclose the vulnerability until it has been    addressed and a security release is available.</p> </li> <li> <p>Contact Us: Report the vulnerability to us by sending an email    to open-source@teogor.dev. You can encrypt sensitive information    using our PGP key to ensure the confidentiality of    the report.</p> </li> <li> <p>Provide Details: Please provide us with detailed information about the vulnerability,    including steps to reproduce, affected versions, and potential impact.</p> </li> <li> <p>Acknowledgment: We will acknowledge your report within 48 hours to confirm that we have    received it and are investigating.</p> </li> <li> <p>Resolution: Our security team will work to validate and address the vulnerability. We will    keep you informed about our progress and expected timelines for resolution.</p> </li> <li> <p>Disclosure: Once the vulnerability is fixed and a release is available, we will work with you    to determine an appropriate timeline for public disclosure. We appreciate your patience during    this process.</p> </li> </ol> <p>Thank you for helping us improve the security of our project.</p> <p>PGP key</p>"},{"location":"seed/","title":"Seed","text":""},{"location":"seed/#managing-randomness-for-sudoku-generation","title":"Managing Randomness for Sudoku Generation","text":"<p>This documentation explores the <code>Seed</code> class in the <code>sudoklify</code> library, a powerful tool for controlling and customizing the randomness of your Sudoku puzzles. <code>Seed</code> offers a safe and structured way to handle different types of seeds, ensuring reproducible and consistent puzzle generation while providing flexibility and control.</p>"},{"location":"seed/#key-benefits","title":"Key Benefits:","text":"<ul> <li>Type Safety and Validation: Guarantees valid seed values, preventing errors and unexpected   behavior.</li> <li>Random vs. Explicit Seeds: Choose between randomly generated seeds for variety or specific   values for controlled puzzle creation.</li> <li>Intuitive Functions: Easily create, manipulate, and access seeds with clear and convenient   functions.</li> <li>Reproducible Puzzles: Generate consistent Sudoku grids using the same seed for sharing or   testing purposes.</li> </ul>"},{"location":"seed/#understanding-seed-types","title":"Understanding Seed Types:","text":"<ul> <li><code>Random</code>: Generates a new seed based on the system's random number generator, ensuring   different puzzles each time.</li> <li><code>Explicit</code>: Allows you to specify a specific long value as the seed, enabling precise control   over the generated puzzle.</li> </ul>"},{"location":"seed/#example-generating-a-sudoku-with-a-specific-seed","title":"Example: Generating a Sudoku with a Specific Seed:","text":"<pre><code>// Create an explicit seed with value 42\nval puzzleSeed = 42.toSeed()\n\n// Use the seed to generate a Sudoku puzzle\nval sudoku = generateSudoku(puzzleSeed)\n\n// Solve the generated Sudoku\nsolveSudoku(sudoku)\n\n// Share or test the puzzle using the seed for reproducibility\n</code></pre> <p>This revised documentation focuses on the specific context of Sudoku generation within the <code>sudoklify</code> library, providing clearer explanations and specific examples relevant to its intended use. Remember to replace the placeholder functions <code>generateSudoku</code> and <code>solveSudoku</code> with the actual functions from your library.</p> <p>I hope this enhanced documentation better serves your needs and informs users effectively about the <code>Seed</code> class in the <code>sudoklify</code> library.</p>"},{"location":"seed/#overview","title":"Overview:","text":"<p>The <code>Seed</code> class is a sealed class with two subclasses:</p> <ul> <li><code>Random</code>: Represents a seed generated using the system's random number generator.</li> <li><code>Explicit</code>: Represents a seed with a specific long value provided by the user.</li> </ul>"},{"location":"seed/#key-features","title":"Key features:","text":"<ul> <li><code>toRandom()</code> function: Converts a <code>Seed</code> object to a <code>kotlin.random.Random</code> instance.</li> <li><code>Explicit</code> constructor: Allows creation of explicit seeds with custom values.</li> <li><code>nextSeed()</code> function: Generates a new <code>Seed</code> object with an incremented value (if   applicable).</li> <li><code>copy()</code> function: Creates a copy of the <code>Seed</code> object with an optional new value.</li> <li><code>toString()</code> function: Provides a human-readable representation of the <code>Seed</code> object.</li> </ul>"},{"location":"seed/#working-with-seeds","title":"Working with Seeds","text":""},{"location":"seed/#creating-seeds","title":"Creating Seeds","text":""},{"location":"seed/#1-creating-a-random-seed","title":"1. Creating a <code>Random</code> seed","text":"<pre><code>val randomSeed: Seed = Seed.Random()\nprintln(randomSeed) // Output: RandomSeed(-7367563790280219005)\n</code></pre>"},{"location":"seed/#2-creating-an-explicit-seed","title":"2. Creating an <code>Explicit</code> seed","text":"<p>There are two ways to create an <code>Explicit</code> object:</p>"},{"location":"seed/#21-using-toseed","title":"2.1 Using <code>toSeed()</code>","text":"<p>The <code>toSeed()</code> extension function directly converts the <code>Long</code> value to an <code>ExplicitSeed</code>:</p> <pre><code>val longSeed: Long = 123\nval seedFromLong = longSeed.toSeed()\n\nprintln(seedFromLong) // Output: ExplicitSeed(123)\n</code></pre>"},{"location":"seed/#22-using-createseed","title":"2.2 Using <code>createSeed()</code>","text":"<p>The <code>createSeed()</code> function offers a more explicit way to create a <code>Seed</code>:</p> <pre><code>val longSeed: Long = 123\nval seedFromCreate = createSeed(longSeed)\n\nprintln(seedFromCreate) // Output: ExplicitSeed(123)\n</code></pre> <p>Choosing the right method:</p> <p>Both methods achieve the same outcome, so the choice depends on your preference and coding style.</p> <ul> <li><code>toSeed()</code>: More concise and convenient for direct conversion.</li> <li><code>createSeed()</code>: More explicit and readable, especially if you need additional parameters or   logic in the future.</li> </ul> <p>Additional notes:</p> <ul> <li>Remember that any negative <code>Long</code> values will trigger an exception with both methods.</li> </ul>"},{"location":"seed/#utilizing-seeds","title":"Utilizing Seeds","text":""},{"location":"seed/#1-getting-the-next-seed","title":"1. Getting the next seed","text":"<pre><code>val nextSeed = explicitSeed.nextSeed()\nprintln(nextSeed) // Output: ExplicitSeed(43)\n</code></pre>"},{"location":"seed/#2-copying-a-seed","title":"2. Copying a seed","text":"<pre><code>val copiedSeed = explicitSeed.copy(seed = 50)\nprintln(copiedSeed) // Output: ExplicitSeed(50)\n</code></pre>"},{"location":"seed/#3-creating-a-kotlinrandomrandom-instance","title":"3. Creating a <code>kotlin.random.Random</code> instance","text":"<pre><code>val randomInstance = explicitSeed.toRandom()\n</code></pre>"},{"location":"seed/#additional-notes","title":"Additional notes:","text":"<ul> <li>You can use the <code>toRandom()</code> function to access the actual random number generator instance.</li> <li>Refer to the source code for further details on specific functionalities and potential exceptions.</li> </ul>"},{"location":"seed/#references","title":"References","text":"<ul> <li>Source code for <code>Seed</code> class</li> <li>API documentation for <code>Seed</code> class</li> <li>Source code for <code>SeedExtensions</code></li> <li>API documentation for <code>SeedExtensions</code></li> <li>Full <code>sudoklify</code> library documentation</li> </ul>"},{"location":"sponsor/","title":"Sponsor \ud83e\ude77","text":""},{"location":"sponsor/#about-teodor-grigor","title":"About Teodor Grigor","text":"<p>As an active open-source developer, Teodor Grigor (also known as Teogor) has made significant contributions to the developer community by creating and maintaining an extensive portfolio of open-source projects and libraries, primarily focused on Android and Kotlin development. His work has had a profound impact on the development landscape, with his projects being adopted by millions of projects, software engineers, and end-users worldwide.</p>"},{"location":"sponsor/#impact-of-teodor-grigors-work","title":"Impact of Teodor Grigor's Work","text":"<p>Teodor Grigor's open-source contributions have had a significant impact on the developer community. His projects have been used by millions of developers around the world to build high-quality Android and Kotlin applications.</p>"},{"location":"sponsor/#expressing-gratitude-and-supporting-development","title":"Expressing Gratitude and Supporting Development","text":"<p>Has this library helped you streamline your development process and reduce costs? If so, consider expressing your gratitude and supporting the developer's efforts through the provided sponsorship links below.</p> <ul> <li>GitHub Sponsor</li> <li>PayPal</li> </ul> <p>Your support is crucial for the ongoing development and enhancement of this library, ensuring it remains a valuable asset for the community. By contributing, you not only express your appreciation but also actively participate in the growth and success of open-source projects like this one. Join us in making a positive impact on the developer's efforts and the future of this project.</p>"},{"location":"sponsor/#contact-teodor-grigor","title":"Contact Teodor Grigor","text":"<p>If you have suggestions for feature requests or would like to explore sponsorship opportunities, please contact the author using the following details:</p> <ul> <li>open-source@teogor.dev</li> <li>LinkedIn</li> <li>Instagram</li> <li>X (formerly known as Twitter)</li> </ul>"},{"location":"sponsor/#sponsors","title":"Sponsors","text":"<p>Show your support by being the first sponsor of this library!</p>"},{"location":"sponsor/#become-a-sponsor","title":"Become a Sponsor","text":"<p>Your support is crucial for the ongoing development and enhancement of this library. By becoming a sponsor, you can help us:</p> <ul> <li>Continue developing new features and improvements</li> <li>Maintain and update the library for compatibility with the latest technologies</li> <li>Provide timely support to users</li> </ul> <p>Show your appreciation for this valuable library and become a sponsor. Your support makes a real difference!</p> <p>Thank you for your consideration!</p>"},{"location":"releases/implementation/","title":"Implementation","text":""},{"location":"releases/implementation/#implementation","title":"Implementation","text":""},{"location":"releases/implementation/#latest-version","title":"Latest Version","text":"<p>The latest release is <code>1.0.0-alpha04</code></p>"},{"location":"releases/implementation/#releases","title":"Releases","text":"<p>Here's a summary of the latest versions:</p> Version Release Notes Release Date 1.0.0-alpha04 changelog \ud83d\udd17 08 Feb 2024 1.0.0-alpha03 changelog \ud83d\udd17 21 Sep 2023 1.0.0-alpha02 changelog \ud83d\udd17 25 Aug 2023 1.0.0-alpha01 changelog \ud83d\udd17 24 Aug 2023"},{"location":"releases/implementation/#using-version-catalog","title":"Using Version Catalog","text":""},{"location":"releases/implementation/#declare-components","title":"Declare Components","text":"<p>This catalog provides the implementation details of Sudoklify libraries, including and individual libraries, in TOML format.</p> Default gradle/libs.versions.toml<pre><code>[versions]\nsudoklify = \"1.0.0-alpha04\"\n\n[libraries]\nsudoklify = { group = \"dev.teogor.sudoklify\", name = \"sudoklify\", version.ref = \"sudoklify\" }\n</code></pre>"},{"location":"releases/implementation/#dependencies-implementation","title":"Dependencies Implementation","text":"KotlinGroovy build.gradle.kts<pre><code>dependencies {\n  // Sudoklify Library\n  implementation(libs.sudoklify)\n}\n</code></pre> build.gradle<pre><code>dependencies {\n  // Sudoklify Library\n  implementation(libs.sudoklify)\n}\n</code></pre>"},{"location":"releases/changelog/1.0.0-alpha01/","title":"Version 1.0.0-alpha01","text":""},{"location":"releases/changelog/1.0.0-alpha01/#latest-sdk-versions","title":"Latest SDK versions","text":"Status Service or Product Gradle dependency Latest version \ud83e\uddea Sudoklify dev.teogor.sudoklify:sudoklify 1.0.0-alpha01"},{"location":"releases/changelog/1.0.0-alpha02/","title":"Version 1.0.0-alpha02","text":""},{"location":"releases/changelog/1.0.0-alpha02/#latest-sdk-versions","title":"Latest SDK versions","text":"Status Service or Product Gradle dependency Latest version \ud83e\uddea Sudoklify dev.teogor.sudoklify:sudoklify 1.0.0-alpha02"},{"location":"releases/changelog/1.0.0-alpha03/","title":"Version 1.0.0-alpha03","text":""},{"location":"releases/changelog/1.0.0-alpha03/#latest-sdk-versions","title":"Latest SDK versions","text":"Status Service or Product Gradle dependency Latest version \ud83e\uddea Sudoklify dev.teogor.sudoklify:sudoklify 1.0.0-alpha03"},{"location":"releases/changelog/1.0.0-alpha04/","title":"Version 1.0.0-alpha04","text":""},{"location":"releases/changelog/1.0.0-alpha04/#latest-sdk-versions","title":"Latest SDK versions","text":"Status Service or Product Gradle dependency Latest version \ud83e\uddea Sudoklify dev.teogor.sudoklify:sudoklify 1.0.0-alpha04"},{"location":"blog/","title":"Blog","text":""}]}