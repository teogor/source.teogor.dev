{
  "config": {
    "lang": ["en"],
    "separator": "[\\s\\-]+",
    "pipeline": ["stopWordFilter"]
  },
  "docs": [
    { "location": "", "title": "Overview", "text": "" },
    {
      "location": "#querent",
      "title": "Querent \ud83c\udfd7\ufe0f",
      "text": "<p>Querent lays the groundwork for your project's resource management, fostering consistency and efficiency across your development workflow. It automates the generation of resource files based on your project's configuration, saving you time and effort while ensuring that your resources are always up-to-date.</p>"
    },
    {
      "location": "#existing-implementations",
      "title": "Existing Implementations",
      "text": "<p>Querent currently provides three built-in plugins for generating resource files:</p> <ol> <li> <p>BuildProfile: Generates code for build profiles, which are sets of properties that define how a project is built.</p> </li> <li> <p>XmlResources: Generates XML resource files for various Android resources, such as strings, layouts, and drawables.</p> </li> <li> <p>LanguagesSchema: Generates code for languages schemas, which define the supported languages for your project and the rules for generating localized resources.</p> </li> </ol>"
    },
    {
      "location": "#creating-custom-plugins",
      "title": "Creating Custom Plugins",
      "text": "<p>Querent's extensible architecture allows you to create your own custom plugins for generating any type of resource file you need. To create a custom plugin, you'll need to follow these steps:</p> <ol> <li> <p>Create a Blueprint class: Define a class that extends the <code>Blueprint</code> class and implements the <code>onCreate()</code> method. The <code>onCreate()</code> method is where you'll write the code for generating your custom resource files.</p> </li> <li> <p>Register your plugin: Use the <code>initializePlugin()</code> extension method to register your plugin with Querent. This will make your plugin available for use in your project's build configuration.</p> </li> </ol>"
    },
    {
      "location": "#example-usage",
      "title": "Example Usage",
      "text": "<p>Here's a step-by-step guide on how to apply the Querent plugin to your project:</p> <p>1. Add the Querent Plugin to Your Project's Build.gradle File</p> <p>In your project's build.gradle.kts file, add the following line to the <code>plugins</code> block:</p> Groovy <pre><code>plugins {\n  id 'dev.teogor.querent' apply false\n}\n</code></pre> KTS <pre><code>plugins {\n  id(\"dev.teogor.querent\") apply false\n}\n</code></pre> <p>This line tells Gradle to apply the Querent plugin to your project.</p> <p>2. Apply the Querent Plugin to Your Build Configuration</p> <p>In your project's build.gradle.kts file, apply the Querent plugin to your build configuration. For example, if you're building an Android app, you would add the following line to the <code>android</code> block:</p> <pre><code>plugins {\n  id(\"dev.teogor.querent\")\n}\n</code></pre> <p>3. Configure Querent</p> <p>You can configure Querent by adding a <code>querent</code> block to your build configuration. For example, the following code enables all three of the built-in plugins and configures the languages schema plugin to support several languages:</p> <pre><code>querent {\n  buildFeatures {\n    buildProfile = true\n    xmlResources = true\n    languagesSchema = true\n  }\n\n  languagesSchemaOptions {\n    unqualifiedResLocale = Language.English territorialize Country.UnitedStates\n    addSupportedLanguages {\n      +(Language.Romanian territorialize Country.Romania)\n      +(Language.English territorialize Country.UnitedKingdom)\n      +(Language.Korean territorialize Country.SouthKorea)\n      +(Language.Dutch territorialize Country.Netherlands)\n      +(Language.German territorialize Country.Germany)\n      +(Language.Chinese territorialize Country.China)\n      +Language.Japanese\n      +Language.Spanish\n      +Language.Hindi\n      +Language.Arabic\n    }\n  }\n}\n</code></pre> <p>This configuration will generate build profiles, XML resource files, and code for the supported languages.</p>"
    },
    {
      "location": "#building-with-querent",
      "title": "Building with Querent",
      "text": "<p>To build your project with Querent, simply apply the plugin to your project and run the <code>gradle build</code> command. Querent will automatically generate the resource files for your project.</p>"
    },
    {
      "location": "#benefits-of-using-querent",
      "title": "Benefits of Using Querent",
      "text": "<p>Querent offers several benefits for developers, including:</p> <ul> <li> <p>Saves time and effort: Querent automates the generation of resource files, saving you time and effort that you can spend on other development tasks.</p> </li> <li> <p>Ensures consistency: Querent generates resource files based on your project's configuration, ensuring that your resources are always consistent.</p> </li> <li> <p>Reduces manual errors: Querent eliminates the need for manual resource file creation, reducing the risk of errors.</p> </li> <li> <p>Extensible architecture: Querent's extensible architecture allows you to create your own custom plugins for generating any type of resource file you need.</p> </li> <li> <p>Improved developer experience: Querent makes it easier to manage and maintain your project's resources, improving the overall developer experience.</p> </li> </ul> <p>Whether you're building a new project or maintaining an existing one, Querent can help you streamline your resource management process and save you time and effort.</p>"
    },
    {
      "location": "api-documentation/",
      "title": "API Documentation",
      "text": ""
    },
    {
      "location": "api-documentation/#api-documentation",
      "title": "API Documentation",
      "text": "<p>Welcome to the comprehensive API documentation for our project. This guide provides detailed information about the project's structure, API, and usage, empowering you to effectively utilize its capabilities.</p>"
    },
    {
      "location": "api-documentation/#project-overview",
      "title": "Project Overview",
      "text": "<p>The project encompasses three primary modules: Querent, API, and Plugin. Each module plays a crucial role in the project's overall functionality.</p>"
    },
    {
      "location": "api-documentation/#project-documentation",
      "title": "Project Documentation",
      "text": "<ul> <li>Querent: Discover the comprehensive API reference for the project.</li> </ul> <p>For in-depth exploration of each module, refer to the dedicated documentation pages:</p> <ul> <li> <p>API: Discover the comprehensive API reference for the project's <code>:api</code> module.</p> </li> <li> <p>Plugin: Discover the comprehensive API reference for the project's <code>:gradle-plugin</code> module.</p> </li> </ul>"
    },
    {
      "location": "api-documentation/#contributions-and-support",
      "title": "Contributions and Support",
      "text": "<p>We encourage your valuable feedback and contributions to the project. If you encounter any issues or have questions, please feel free to raise them on the GitHub Issues page. Our team is committed to assisting you and improving the project's overall quality.</p>"
    },
    {
      "location": "api-documentation/#embark-on-your-coding-journey",
      "title": "Embark on Your Coding Journey",
      "text": "<p>With this extensive documentation at your fingertips, you are now well-equipped to embark on your coding journey with our project. We hope you find the documentation informative and helpful in your endeavors.</p> <p>Happy coding!</p>"
    },
    {
      "location": "sponsor/",
      "title": "Sponsor \ud83e\ude77",
      "text": "<p>As an active open-source developer, Teodor Grigor (also known as Teogor) has made significant contributions to the developer community by creating and maintaining an extensive portfolio of open-source projects and libraries, primarily focused on Android and Kotlin development. His work has had a profound impact on the development landscape, with his projects being adopted by millions of projects, software engineers, and end-users worldwide.</p> <p>This rephrased version provides more context about Teodor Grigor's contributions to open-source development and highlights the impact of his work on the developer community and prominent organizations.</p> <p>Has this library helped you streamline your development process and reduce costs? If so, consider expressing your gratitude and supporting the developer's efforts through the provided sponsorship links below.</p> <ul> <li>GitHub Sponsor</li> <li>PayPal</li> </ul> <p>Your support is crucial for the ongoing development and enhancement of this library, ensuring it remains a valuable asset for the community. By contributing, you not only express your appreciation but also actively participate in the growth and success of open-source projects like this one. Join us in making a positive impact on the developer's efforts and the future of this project.</p> <p>If you have suggestions for feature requests or would like to explore sponsorship opportunities, please contact the author using the following details:</p> <ul> <li>open-source@teogor.dev</li> <li>LinkedIn</li> <li>Instagram</li> <li>X (formerly known as Twitter)</li> </ul>"
    },
    {
      "location": "sponsor/#sponsors",
      "title": "Sponsors",
      "text": "<p>Show your support by being the first sponsor of this library!</p>"
    },
    {
      "location": "sponsor/#sponsors_1",
      "title": "Sponsors",
      "text": "<p>We are incredibly grateful for the generous support of our sponsors. Their contributions help us continue developing and improving this library.</p>"
    },
    {
      "location": "sponsor/#gold-sponsors",
      "title": "Gold Sponsors",
      "text": "<ul> <li>Sponsor Name</li> <li>Sponsor Name</li> </ul>"
    },
    {
      "location": "sponsor/#silver-sponsors",
      "title": "Silver Sponsors",
      "text": "<ul> <li>Sponsor Name</li> <li>Sponsor Name</li> </ul>"
    },
    {
      "location": "sponsor/#bronze-sponsors",
      "title": "Bronze Sponsors",
      "text": "<ul> <li>Sponsor Name</li> <li>Sponsor Name</li> </ul>"
    },
    {
      "location": "sponsor/#become-a-sponsor",
      "title": "Become a Sponsor",
      "text": "<p>Your support is crucial for the ongoing development and enhancement of this library. By becoming a sponsor, you can help us:</p> <ul> <li>Continue developing new features and improvements</li> <li>Maintain and update the library for compatibility with the latest technologies</li> <li>Provide timely support to users</li> </ul> <p>If you are interested in becoming a sponsor, please contact us at [email protected]</p> <p>Thank you for your consideration!</p>"
    }
  ]
}
