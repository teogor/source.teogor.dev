[{"name":"abstract val errorId: Int","description":"dev.teogor.winds.common.ErrorId.errorId","location":"common/dev.teogor.winds.common/-error-id/error-id.html","searchKeys":["errorId","abstract val errorId: Int","dev.teogor.winds.common.ErrorId.errorId"]},{"name":"class DependencyCollector(includePlatform: Boolean = true, filterVariants: Array<String> = emptyArray())","description":"dev.teogor.winds.common.dependencies.DependencyCollector","location":"common/dev.teogor.winds.common.dependencies/-dependency-collector/index.html","searchKeys":["DependencyCollector","class DependencyCollector(includePlatform: Boolean = true, filterVariants: Array<String> = emptyArray())","dev.teogor.winds.common.dependencies.DependencyCollector"]},{"name":"class MarkdownTable(columnTitles: List<String>)","description":"dev.teogor.winds.common.MarkdownTable","location":"common/dev.teogor.winds.common/-markdown-table/index.html","searchKeys":["MarkdownTable","class MarkdownTable(columnTitles: List<String>)","dev.teogor.winds.common.MarkdownTable"]},{"name":"constructor(columnTitles: List<String>)","description":"dev.teogor.winds.common.MarkdownTable.MarkdownTable","location":"common/dev.teogor.winds.common/-markdown-table/-markdown-table.html","searchKeys":["MarkdownTable","constructor(columnTitles: List<String>)","dev.teogor.winds.common.MarkdownTable.MarkdownTable"]},{"name":"constructor(dependencies: Map<String, Map<String, Set<DependencyDefinition>>>)","description":"dev.teogor.winds.common.dependencies.CollectedContainer.CollectedContainer","location":"common/dev.teogor.winds.common.dependencies/-collected-container/-collected-container.html","searchKeys":["CollectedContainer","constructor(dependencies: Map<String, Map<String, Set<DependencyDefinition>>>)","dev.teogor.winds.common.dependencies.CollectedContainer.CollectedContainer"]},{"name":"constructor(includePlatform: Boolean = true, filterVariants: Array<String> = emptyArray())","description":"dev.teogor.winds.common.dependencies.DependencyCollector.DependencyCollector","location":"common/dev.teogor.winds.common.dependencies/-dependency-collector/-dependency-collector.html","searchKeys":["DependencyCollector","constructor(includePlatform: Boolean = true, filterVariants: Array<String> = emptyArray())","dev.teogor.winds.common.dependencies.DependencyCollector.DependencyCollector"]},{"name":"data class CollectedContainer(val dependencies: Map<String, Map<String, Set<DependencyDefinition>>>) : Serializable","description":"dev.teogor.winds.common.dependencies.CollectedContainer","location":"common/dev.teogor.winds.common.dependencies/-collected-container/index.html","searchKeys":["CollectedContainer","data class CollectedContainer(val dependencies: Map<String, Map<String, Set<DependencyDefinition>>>) : Serializable","dev.teogor.winds.common.dependencies.CollectedContainer"]},{"name":"fun Project.configureMavenPublishing(winds: Winds, configureAction: MavenPublishBaseExtension.() -> Unit = {})","description":"dev.teogor.winds.common.maven.configureMavenPublishing","location":"common/dev.teogor.winds.common.maven/configure-maven-publishing.html","searchKeys":["configureMavenPublishing","fun Project.configureMavenPublishing(winds: Winds, configureAction: MavenPublishBaseExtension.() -> Unit = {})","dev.teogor.winds.common.maven.configureMavenPublishing"]},{"name":"fun Project.getVanniktechMavenPlugin(): MavenPublishPlugin","description":"dev.teogor.winds.common.ktx.getVanniktechMavenPlugin","location":"common/dev.teogor.winds.common.ktx/get-vanniktech-maven-plugin.html","searchKeys":["getVanniktechMavenPlugin","fun Project.getVanniktechMavenPlugin(): MavenPublishPlugin","dev.teogor.winds.common.ktx.getVanniktechMavenPlugin"]},{"name":"fun Project.hasAndroidLibraryPlugin(): Boolean","description":"dev.teogor.winds.common.utils.hasAndroidLibraryPlugin","location":"common/dev.teogor.winds.common.utils/has-android-library-plugin.html","searchKeys":["hasAndroidLibraryPlugin","fun Project.hasAndroidLibraryPlugin(): Boolean","dev.teogor.winds.common.utils.hasAndroidLibraryPlugin"]},{"name":"fun Project.hasKotlinDslPlugin(): Boolean","description":"dev.teogor.winds.common.utils.hasKotlinDslPlugin","location":"common/dev.teogor.winds.common.utils/has-kotlin-dsl-plugin.html","searchKeys":["hasKotlinDslPlugin","fun Project.hasKotlinDslPlugin(): Boolean","dev.teogor.winds.common.utils.hasKotlinDslPlugin"]},{"name":"fun Project.hasPublishPlugin(): Boolean","description":"dev.teogor.winds.common.utils.hasPublishPlugin","location":"common/dev.teogor.winds.common.utils/has-publish-plugin.html","searchKeys":["hasPublishPlugin","fun Project.hasPublishPlugin(): Boolean","dev.teogor.winds.common.utils.hasPublishPlugin"]},{"name":"fun Project.hasVanniktechMavenPlugin(): Boolean","description":"dev.teogor.winds.common.ktx.hasVanniktechMavenPlugin","location":"common/dev.teogor.winds.common.ktx/has-vanniktech-maven-plugin.html","searchKeys":["hasVanniktechMavenPlugin","fun Project.hasVanniktechMavenPlugin(): Boolean","dev.teogor.winds.common.ktx.hasVanniktechMavenPlugin"]},{"name":"fun Project.hasWindsPlugin(): Boolean","description":"dev.teogor.winds.common.utils.hasWindsPlugin","location":"common/dev.teogor.winds.common.utils/has-winds-plugin.html","searchKeys":["hasWindsPlugin","fun Project.hasWindsPlugin(): Boolean","dev.teogor.winds.common.utils.hasWindsPlugin"]},{"name":"fun addRow(row: List<String>)","description":"dev.teogor.winds.common.MarkdownTable.addRow","location":"common/dev.teogor.winds.common/-markdown-table/add-row.html","searchKeys":["addRow","fun addRow(row: List<String>)","dev.teogor.winds.common.MarkdownTable.addRow"]},{"name":"fun addRows(vararg rows: List<String>)","description":"dev.teogor.winds.common.MarkdownTable.addRows","location":"common/dev.teogor.winds.common/-markdown-table/add-rows.html","searchKeys":["addRows","fun addRows(vararg rows: List<String>)","dev.teogor.winds.common.MarkdownTable.addRows"]},{"name":"fun attachMavenData(pom: MavenPom, mavenPublish: MavenPublish)","description":"dev.teogor.winds.common.utils.attachMavenData","location":"common/dev.teogor.winds.common.utils/attach-maven-data.html","searchKeys":["attachMavenData","fun attachMavenData(pom: MavenPom, mavenPublish: MavenPublish)","dev.teogor.winds.common.utils.attachMavenData"]},{"name":"fun attachMavenData(pom: MavenPom, metadata: ModuleMetadata)","description":"dev.teogor.winds.common.ktx.attachMavenData","location":"common/dev.teogor.winds.common.ktx/attach-maven-data.html","searchKeys":["attachMavenData","fun attachMavenData(pom: MavenPom, metadata: ModuleMetadata)","dev.teogor.winds.common.ktx.attachMavenData"]},{"name":"fun build(): String","description":"dev.teogor.winds.common.MarkdownTable.build","location":"common/dev.teogor.winds.common/-markdown-table/build.html","searchKeys":["build","fun build(): String","dev.teogor.winds.common.MarkdownTable.build"]},{"name":"fun collect(project: Project): CollectedContainer","description":"dev.teogor.winds.common.dependencies.DependencyCollector.collect","location":"common/dev.teogor.winds.common.dependencies/-dependency-collector/collect.html","searchKeys":["collect","fun collect(project: Project): CollectedContainer","dev.teogor.winds.common.dependencies.DependencyCollector.collect"]},{"name":"fun flattenDependencies(): List<DependencyDefinition>","description":"dev.teogor.winds.common.dependencies.CollectedContainer.flattenDependencies","location":"common/dev.teogor.winds.common.dependencies/-collected-container/flatten-dependencies.html","searchKeys":["flattenDependencies","fun flattenDependencies(): List<DependencyDefinition>","dev.teogor.winds.common.dependencies.CollectedContainer.flattenDependencies"]},{"name":"fun withTitles(vararg titles: String): MarkdownTable","description":"dev.teogor.winds.common.MarkdownTable.Companion.withTitles","location":"common/dev.teogor.winds.common/-markdown-table/-companion/with-titles.html","searchKeys":["withTitles","fun withTitles(vararg titles: String): MarkdownTable","dev.teogor.winds.common.MarkdownTable.Companion.withTitles"]},{"name":"infix fun <T : Person> List<T>.toContributorsSpec(pom: MavenPom)","description":"dev.teogor.winds.common.ktx.toContributorsSpec","location":"common/dev.teogor.winds.common.ktx/to-contributors-spec.html","searchKeys":["toContributorsSpec","infix fun <T : Person> List<T>.toContributorsSpec(pom: MavenPom)","dev.teogor.winds.common.ktx.toContributorsSpec"]},{"name":"infix fun <T : Person> List<T>.toDevelopersSpec(pom: MavenPom)","description":"dev.teogor.winds.common.ktx.toDevelopersSpec","location":"common/dev.teogor.winds.common.ktx/to-developers-spec.html","searchKeys":["toDevelopersSpec","infix fun <T : Person> List<T>.toDevelopersSpec(pom: MavenPom)","dev.teogor.winds.common.ktx.toDevelopersSpec"]},{"name":"infix fun ModuleMetadata.toLicensesSpec(pom: MavenPom)","description":"dev.teogor.winds.common.ktx.toLicensesSpec","location":"common/dev.teogor.winds.common.ktx/to-licenses-spec.html","searchKeys":["toLicensesSpec","infix fun ModuleMetadata.toLicensesSpec(pom: MavenPom)","dev.teogor.winds.common.ktx.toLicensesSpec"]},{"name":"infix fun ModuleMetadata.toPom(pom: MavenPom)","description":"dev.teogor.winds.common.ktx.toPom","location":"common/dev.teogor.winds.common.ktx/to-pom.html","searchKeys":["toPom","infix fun ModuleMetadata.toPom(pom: MavenPom)","dev.teogor.winds.common.ktx.toPom"]},{"name":"inline fun <T : Task> TaskContainer.register(name: String, crossinline block: T.() -> Unit)","description":"dev.teogor.winds.common.ktx.register","location":"common/dev.teogor.winds.common.ktx/register.html","searchKeys":["register","inline fun <T : Task> TaskContainer.register(name: String, crossinline block: T.() -> Unit)","dev.teogor.winds.common.ktx.register"]},{"name":"inline fun Project.processWindsChildProjects(crossinline action: Project.() -> Unit)","description":"dev.teogor.winds.common.utils.processWindsChildProjects","location":"common/dev.teogor.winds.common.utils/process-winds-child-projects.html","searchKeys":["processWindsChildProjects","inline fun Project.processWindsChildProjects(crossinline action: Project.() -> Unit)","dev.teogor.winds.common.utils.processWindsChildProjects"]},{"name":"interface ErrorId","description":"dev.teogor.winds.common.ErrorId","location":"common/dev.teogor.winds.common/-error-id/index.html","searchKeys":["ErrorId","interface ErrorId","dev.teogor.winds.common.ErrorId"]},{"name":"object BomLibraryError : ErrorId","description":"dev.teogor.winds.common.ErrorId.BomLibraryError","location":"common/dev.teogor.winds.common/-error-id/-bom-library-error/index.html","searchKeys":["BomLibraryError","object BomLibraryError : ErrorId","dev.teogor.winds.common.ErrorId.BomLibraryError"]},{"name":"object BomOptionsError : ErrorId","description":"dev.teogor.winds.common.ErrorId.BomOptionsError","location":"common/dev.teogor.winds.common/-error-id/-bom-options-error/index.html","searchKeys":["BomOptionsError","object BomOptionsError : ErrorId","dev.teogor.winds.common.ErrorId.BomOptionsError"]},{"name":"object Companion","description":"dev.teogor.winds.common.MarkdownTable.Companion","location":"common/dev.teogor.winds.common/-markdown-table/-companion/index.html","searchKeys":["Companion","object Companion","dev.teogor.winds.common.MarkdownTable.Companion"]},{"name":"object GenericError : ErrorId","description":"dev.teogor.winds.common.ErrorId.GenericError","location":"common/dev.teogor.winds.common/-error-id/-generic-error/index.html","searchKeys":["GenericError","object GenericError : ErrorId","dev.teogor.winds.common.ErrorId.GenericError"]},{"name":"object PomContributorError : ErrorId","description":"dev.teogor.winds.common.ErrorId.PomContributorError","location":"common/dev.teogor.winds.common/-error-id/-pom-contributor-error/index.html","searchKeys":["PomContributorError","object PomContributorError : ErrorId","dev.teogor.winds.common.ErrorId.PomContributorError"]},{"name":"object PomDeveloperError : ErrorId","description":"dev.teogor.winds.common.ErrorId.PomDeveloperError","location":"common/dev.teogor.winds.common/-error-id/-pom-developer-error/index.html","searchKeys":["PomDeveloperError","object PomDeveloperError : ErrorId","dev.teogor.winds.common.ErrorId.PomDeveloperError"]},{"name":"object PomLicenseError : ErrorId","description":"dev.teogor.winds.common.ErrorId.PomLicenseError","location":"common/dev.teogor.winds.common/-error-id/-pom-license-error/index.html","searchKeys":["PomLicenseError","object PomLicenseError : ErrorId","dev.teogor.winds.common.ErrorId.PomLicenseError"]},{"name":"open fun getErrorIdString(): String","description":"dev.teogor.winds.common.ErrorId.getErrorIdString","location":"common/dev.teogor.winds.common/-error-id/get-error-id-string.html","searchKeys":["getErrorIdString","open fun getErrorIdString(): String","dev.teogor.winds.common.ErrorId.getErrorIdString"]},{"name":"open override val errorId: Int = 1000","description":"dev.teogor.winds.common.ErrorId.GenericError.errorId","location":"common/dev.teogor.winds.common/-error-id/-generic-error/error-id.html","searchKeys":["errorId","open override val errorId: Int = 1000","dev.teogor.winds.common.ErrorId.GenericError.errorId"]},{"name":"open override val errorId: Int = 1001","description":"dev.teogor.winds.common.ErrorId.BomOptionsError.errorId","location":"common/dev.teogor.winds.common/-error-id/-bom-options-error/error-id.html","searchKeys":["errorId","open override val errorId: Int = 1001","dev.teogor.winds.common.ErrorId.BomOptionsError.errorId"]},{"name":"open override val errorId: Int = 1002","description":"dev.teogor.winds.common.ErrorId.BomLibraryError.errorId","location":"common/dev.teogor.winds.common/-error-id/-bom-library-error/error-id.html","searchKeys":["errorId","open override val errorId: Int = 1002","dev.teogor.winds.common.ErrorId.BomLibraryError.errorId"]},{"name":"open override val errorId: Int = 1003","description":"dev.teogor.winds.common.ErrorId.PomLicenseError.errorId","location":"common/dev.teogor.winds.common/-error-id/-pom-license-error/error-id.html","searchKeys":["errorId","open override val errorId: Int = 1003","dev.teogor.winds.common.ErrorId.PomLicenseError.errorId"]},{"name":"open override val errorId: Int = 1004","description":"dev.teogor.winds.common.ErrorId.PomDeveloperError.errorId","location":"common/dev.teogor.winds.common/-error-id/-pom-developer-error/error-id.html","searchKeys":["errorId","open override val errorId: Int = 1004","dev.teogor.winds.common.ErrorId.PomDeveloperError.errorId"]},{"name":"open override val errorId: Int = 1005","description":"dev.teogor.winds.common.ErrorId.PomContributorError.errorId","location":"common/dev.teogor.winds.common/-error-id/-pom-contributor-error/error-id.html","searchKeys":["errorId","open override val errorId: Int = 1005","dev.teogor.winds.common.ErrorId.PomContributorError.errorId"]},{"name":"open val errorIdFormatted: String","description":"dev.teogor.winds.common.ErrorId.errorIdFormatted","location":"common/dev.teogor.winds.common/-error-id/error-id-formatted.html","searchKeys":["errorIdFormatted","open val errorIdFormatted: String","dev.teogor.winds.common.ErrorId.errorIdFormatted"]},{"name":"val dependencies: Map<String, Map<String, Set<DependencyDefinition>>>","description":"dev.teogor.winds.common.dependencies.CollectedContainer.dependencies","location":"common/dev.teogor.winds.common.dependencies/-collected-container/dependencies.html","searchKeys":["dependencies","val dependencies: Map<String, Map<String, Set<DependencyDefinition>>>","dev.teogor.winds.common.dependencies.CollectedContainer.dependencies"]},{"name":"var filterVariants: Array<String>","description":"dev.teogor.winds.common.dependencies.filterVariants","location":"common/dev.teogor.winds.common.dependencies/filter-variants.html","searchKeys":["filterVariants","var filterVariants: Array<String>","dev.teogor.winds.common.dependencies.filterVariants"]},{"name":"var includePlatform: Boolean","description":"dev.teogor.winds.common.dependencies.includePlatform","location":"common/dev.teogor.winds.common.dependencies/include-platform.html","searchKeys":["includePlatform","var includePlatform: Boolean","dev.teogor.winds.common.dependencies.includePlatform"]},{"name":"abstract class CollectWindsExtensionsTask : DefaultTask","description":"dev.teogor.winds.gradle.tasks.impl.CollectWindsExtensionsTask","location":"gradle-plugin/dev.teogor.winds.gradle.tasks.impl/-collect-winds-extensions-task/index.html","searchKeys":["CollectWindsExtensionsTask","abstract class CollectWindsExtensionsTask : DefaultTask","dev.teogor.winds.gradle.tasks.impl.CollectWindsExtensionsTask"]},{"name":"abstract class DocsGeneratorTask : BaseGeneratorTask","description":"dev.teogor.winds.gradle.tasks.impl.DocsGeneratorTask","location":"gradle-plugin/dev.teogor.winds.gradle.tasks.impl/-docs-generator-task/index.html","searchKeys":["DocsGeneratorTask","abstract class DocsGeneratorTask : BaseGeneratorTask","dev.teogor.winds.gradle.tasks.impl.DocsGeneratorTask"]},{"name":"abstract class DocsGeneratorTaskLegacy : BaseGeneratorTask","description":"dev.teogor.winds.gradle.tasks.impl.DocsGeneratorTaskLegacy","location":"gradle-plugin/dev.teogor.winds.gradle.tasks.impl/-docs-generator-task-legacy/index.html","searchKeys":["DocsGeneratorTaskLegacy","abstract class DocsGeneratorTaskLegacy : BaseGeneratorTask","dev.teogor.winds.gradle.tasks.impl.DocsGeneratorTaskLegacy"]},{"name":"abstract class DocsModuleHandler(projectDir: File, docsGenerator: DocsGenerator)","description":"dev.teogor.winds.gradle.docs.DocsModuleHandler","location":"gradle-plugin/dev.teogor.winds.gradle.docs/-docs-module-handler/index.html","searchKeys":["DocsModuleHandler","abstract class DocsModuleHandler(projectDir: File, docsGenerator: DocsGenerator)","dev.teogor.winds.gradle.docs.DocsModuleHandler"]},{"name":"abstract class ReleaseNotesTask : DefaultTask","description":"dev.teogor.winds.gradle.ReleaseNotesTask","location":"gradle-plugin/dev.teogor.winds.gradle/-release-notes-task/index.html","searchKeys":["ReleaseNotesTask","abstract class ReleaseNotesTask : DefaultTask","dev.teogor.winds.gradle.ReleaseNotesTask"]},{"name":"abstract class WindsImpl(val project: Project) : Winds","description":"dev.teogor.winds.api.impl.WindsImpl","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/index.html","searchKeys":["WindsImpl","abstract class WindsImpl(val project: Project) : Winds","dev.teogor.winds.api.impl.WindsImpl"]},{"name":"abstract class WindsLegacyOptions(val project: Project) : WindsLegacy","description":"dev.teogor.winds.api.impl.WindsLegacyOptions","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-legacy-options/index.html","searchKeys":["WindsLegacyOptions","abstract class WindsLegacyOptions(val project: Project) : WindsLegacy","dev.teogor.winds.api.impl.WindsLegacyOptions"]},{"name":"abstract class WorkflowSynthesizerTask : BaseGeneratorTask","description":"dev.teogor.winds.gradle.tasks.impl.WorkflowSynthesizerTask","location":"gradle-plugin/dev.teogor.winds.gradle.tasks.impl/-workflow-synthesizer-task/index.html","searchKeys":["WorkflowSynthesizerTask","abstract class WorkflowSynthesizerTask : BaseGeneratorTask","dev.teogor.winds.gradle.tasks.impl.WorkflowSynthesizerTask"]},{"name":"abstract fun manageDependencies()","description":"dev.teogor.winds.gradle.docs.DocsModuleHandler.manageDependencies","location":"gradle-plugin/dev.teogor.winds.gradle.docs/-docs-module-handler/manage-dependencies.html","searchKeys":["manageDependencies","abstract fun manageDependencies()","dev.teogor.winds.gradle.docs.DocsModuleHandler.manageDependencies"]},{"name":"abstract fun updateMkDocs(mkDocsPath: String = \"mkdocs.yml\", section: String = \"Changelog\")","description":"dev.teogor.winds.gradle.docs.DocsModuleHandler.updateMkDocs","location":"gradle-plugin/dev.teogor.winds.gradle.docs/-docs-module-handler/update-mk-docs.html","searchKeys":["updateMkDocs","abstract fun updateMkDocs(mkDocsPath: String = \"mkdocs.yml\", section: String = \"Changelog\")","dev.teogor.winds.gradle.docs.DocsModuleHandler.updateMkDocs"]},{"name":"abstract fun writeReleaseNotes()","description":"dev.teogor.winds.gradle.docs.DocsModuleHandler.writeReleaseNotes","location":"gradle-plugin/dev.teogor.winds.gradle.docs/-docs-module-handler/write-release-notes.html","searchKeys":["writeReleaseNotes","abstract fun writeReleaseNotes()","dev.teogor.winds.gradle.docs.DocsModuleHandler.writeReleaseNotes"]},{"name":"class BomDocsModuleHandler(projectDir: File, docsGenerator: DocsGenerator, libraries: MutableList<ModuleInfo>, bomModule: ModuleInfo) : DocsModuleHandler","description":"dev.teogor.winds.api.docs.impl.BomDocsModuleHandler","location":"gradle-plugin/dev.teogor.winds.api.docs.impl/-bom-docs-module-handler/index.html","searchKeys":["BomDocsModuleHandler","class BomDocsModuleHandler(projectDir: File, docsGenerator: DocsGenerator, libraries: MutableList<ModuleInfo>, bomModule: ModuleInfo) : DocsModuleHandler","dev.teogor.winds.api.docs.impl.BomDocsModuleHandler"]},{"name":"class BomDocsModuleHandler(projectDir: File, docsGenerator: DocsGenerator, libraries: MutableList<ModuleInfo>, bomModule: ModuleInfo) : DocsModuleHandler","description":"dev.teogor.winds.gradle.docs.BomDocsModuleHandler","location":"gradle-plugin/dev.teogor.winds.gradle.docs/-bom-docs-module-handler/index.html","searchKeys":["BomDocsModuleHandler","class BomDocsModuleHandler(projectDir: File, docsGenerator: DocsGenerator, libraries: MutableList<ModuleInfo>, bomModule: ModuleInfo) : DocsModuleHandler","dev.teogor.winds.gradle.docs.BomDocsModuleHandler"]},{"name":"class CodebaseOptionsImpl : CodebaseOptions","description":"dev.teogor.winds.api.impl.CodebaseOptionsImpl","location":"gradle-plugin/dev.teogor.winds.api.impl/-codebase-options-impl/index.html","searchKeys":["CodebaseOptionsImpl","class CodebaseOptionsImpl : CodebaseOptions","dev.teogor.winds.api.impl.CodebaseOptionsImpl"]},{"name":"class DocsGeneratorImpl : DocsGenerator","description":"dev.teogor.winds.api.impl.DocsGeneratorImpl","location":"gradle-plugin/dev.teogor.winds.api.impl/-docs-generator-impl/index.html","searchKeys":["DocsGeneratorImpl","class DocsGeneratorImpl : DocsGenerator","dev.teogor.winds.api.impl.DocsGeneratorImpl"]},{"name":"class DocsModuleHandlerFactory","description":"dev.teogor.winds.api.docs.impl.factory.DocsModuleHandlerFactory","location":"gradle-plugin/dev.teogor.winds.api.docs.impl.factory/-docs-module-handler-factory/index.html","searchKeys":["DocsModuleHandlerFactory","class DocsModuleHandlerFactory","dev.teogor.winds.api.docs.impl.factory.DocsModuleHandlerFactory"]},{"name":"class DocsModuleHandlerFactory","description":"dev.teogor.winds.gradle.docs.factory.DocsModuleHandlerFactory","location":"gradle-plugin/dev.teogor.winds.gradle.docs.factory/-docs-module-handler-factory/index.html","searchKeys":["DocsModuleHandlerFactory","class DocsModuleHandlerFactory","dev.teogor.winds.gradle.docs.factory.DocsModuleHandlerFactory"]},{"name":"class DocumentationBuilderImpl : DocumentationBuilder","description":"dev.teogor.winds.api.impl.DocumentationBuilderImpl","location":"gradle-plugin/dev.teogor.winds.api.impl/-documentation-builder-impl/index.html","searchKeys":["DocumentationBuilderImpl","class DocumentationBuilderImpl : DocumentationBuilder","dev.teogor.winds.api.impl.DocumentationBuilderImpl"]},{"name":"class StandardDocsModuleHandler(projectDir: File, docsGenerator: DocsGenerator, libraries: MutableList<ModuleInfo>) : DocsModuleHandler","description":"dev.teogor.winds.api.docs.impl.StandardDocsModuleHandler","location":"gradle-plugin/dev.teogor.winds.api.docs.impl/-standard-docs-module-handler/index.html","searchKeys":["StandardDocsModuleHandler","class StandardDocsModuleHandler(projectDir: File, docsGenerator: DocsGenerator, libraries: MutableList<ModuleInfo>) : DocsModuleHandler","dev.teogor.winds.api.docs.impl.StandardDocsModuleHandler"]},{"name":"class StandardDocsModuleHandler(projectDir: File, docsGenerator: DocsGenerator, libraries: MutableList<ModuleInfo>) : DocsModuleHandler","description":"dev.teogor.winds.gradle.docs.StandardDocsModuleHandler","location":"gradle-plugin/dev.teogor.winds.gradle.docs/-standard-docs-module-handler/index.html","searchKeys":["StandardDocsModuleHandler","class StandardDocsModuleHandler(projectDir: File, docsGenerator: DocsGenerator, libraries: MutableList<ModuleInfo>) : DocsModuleHandler","dev.teogor.winds.gradle.docs.StandardDocsModuleHandler"]},{"name":"class WindsPlugin : BaseWindsPlugin","description":"dev.teogor.winds.gradle.WindsPlugin","location":"gradle-plugin/dev.teogor.winds.gradle/-winds-plugin/index.html","searchKeys":["WindsPlugin","class WindsPlugin : BaseWindsPlugin","dev.teogor.winds.gradle.WindsPlugin"]},{"name":"class WorkflowSynthesizerImpl : WorkflowSynthesizer","description":"dev.teogor.winds.api.impl.WorkflowSynthesizerImpl","location":"gradle-plugin/dev.teogor.winds.api.impl/-workflow-synthesizer-impl/index.html","searchKeys":["WorkflowSynthesizerImpl","class WorkflowSynthesizerImpl : WorkflowSynthesizer","dev.teogor.winds.api.impl.WorkflowSynthesizerImpl"]},{"name":"constructor()","description":"dev.teogor.winds.api.docs.impl.factory.DocsModuleHandlerFactory.DocsModuleHandlerFactory","location":"gradle-plugin/dev.teogor.winds.api.docs.impl.factory/-docs-module-handler-factory/-docs-module-handler-factory.html","searchKeys":["DocsModuleHandlerFactory","constructor()","dev.teogor.winds.api.docs.impl.factory.DocsModuleHandlerFactory.DocsModuleHandlerFactory"]},{"name":"constructor()","description":"dev.teogor.winds.api.impl.BuildFeaturesImpl.BuildFeaturesImpl","location":"gradle-plugin/dev.teogor.winds.api.impl/-build-features-impl/-build-features-impl.html","searchKeys":["BuildFeaturesImpl","constructor()","dev.teogor.winds.api.impl.BuildFeaturesImpl.BuildFeaturesImpl"]},{"name":"constructor()","description":"dev.teogor.winds.api.impl.CodebaseOptionsImpl.CodebaseOptionsImpl","location":"gradle-plugin/dev.teogor.winds.api.impl/-codebase-options-impl/-codebase-options-impl.html","searchKeys":["CodebaseOptionsImpl","constructor()","dev.teogor.winds.api.impl.CodebaseOptionsImpl.CodebaseOptionsImpl"]},{"name":"constructor()","description":"dev.teogor.winds.api.impl.DocsGeneratorImpl.DocsGeneratorImpl","location":"gradle-plugin/dev.teogor.winds.api.impl/-docs-generator-impl/-docs-generator-impl.html","searchKeys":["DocsGeneratorImpl","constructor()","dev.teogor.winds.api.impl.DocsGeneratorImpl.DocsGeneratorImpl"]},{"name":"constructor()","description":"dev.teogor.winds.api.impl.DocumentationBuilderImpl.DocumentationBuilderImpl","location":"gradle-plugin/dev.teogor.winds.api.impl/-documentation-builder-impl/-documentation-builder-impl.html","searchKeys":["DocumentationBuilderImpl","constructor()","dev.teogor.winds.api.impl.DocumentationBuilderImpl.DocumentationBuilderImpl"]},{"name":"constructor()","description":"dev.teogor.winds.api.impl.MavenPublishImpl.MavenPublishImpl","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/-maven-publish-impl.html","searchKeys":["MavenPublishImpl","constructor()","dev.teogor.winds.api.impl.MavenPublishImpl.MavenPublishImpl"]},{"name":"constructor()","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.ModuleMetadataImpl","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/-module-metadata-impl.html","searchKeys":["ModuleMetadataImpl","constructor()","dev.teogor.winds.api.impl.ModuleMetadataImpl.ModuleMetadataImpl"]},{"name":"constructor()","description":"dev.teogor.winds.api.impl.PublishingOptionsImpl.PublishingOptionsImpl","location":"gradle-plugin/dev.teogor.winds.api.impl/-publishing-options-impl/-publishing-options-impl.html","searchKeys":["PublishingOptionsImpl","constructor()","dev.teogor.winds.api.impl.PublishingOptionsImpl.PublishingOptionsImpl"]},{"name":"constructor()","description":"dev.teogor.winds.api.impl.WindsFeaturesImpl.WindsFeaturesImpl","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-features-impl/-winds-features-impl.html","searchKeys":["WindsFeaturesImpl","constructor()","dev.teogor.winds.api.impl.WindsFeaturesImpl.WindsFeaturesImpl"]},{"name":"constructor()","description":"dev.teogor.winds.api.impl.WorkflowSynthesizerImpl.WorkflowSynthesizerImpl","location":"gradle-plugin/dev.teogor.winds.api.impl/-workflow-synthesizer-impl/-workflow-synthesizer-impl.html","searchKeys":["WorkflowSynthesizerImpl","constructor()","dev.teogor.winds.api.impl.WorkflowSynthesizerImpl.WorkflowSynthesizerImpl"]},{"name":"constructor()","description":"dev.teogor.winds.gradle.ReleaseNotesTask.ReleaseNotesTask","location":"gradle-plugin/dev.teogor.winds.gradle/-release-notes-task/-release-notes-task.html","searchKeys":["ReleaseNotesTask","constructor()","dev.teogor.winds.gradle.ReleaseNotesTask.ReleaseNotesTask"]},{"name":"constructor()","description":"dev.teogor.winds.gradle.WindsPlugin.WindsPlugin","location":"gradle-plugin/dev.teogor.winds.gradle/-winds-plugin/-winds-plugin.html","searchKeys":["WindsPlugin","constructor()","dev.teogor.winds.gradle.WindsPlugin.WindsPlugin"]},{"name":"constructor()","description":"dev.teogor.winds.gradle.docs.factory.DocsModuleHandlerFactory.DocsModuleHandlerFactory","location":"gradle-plugin/dev.teogor.winds.gradle.docs.factory/-docs-module-handler-factory/-docs-module-handler-factory.html","searchKeys":["DocsModuleHandlerFactory","constructor()","dev.teogor.winds.gradle.docs.factory.DocsModuleHandlerFactory.DocsModuleHandlerFactory"]},{"name":"constructor()","description":"dev.teogor.winds.gradle.tasks.impl.CollectWindsExtensionsTask.CollectWindsExtensionsTask","location":"gradle-plugin/dev.teogor.winds.gradle.tasks.impl/-collect-winds-extensions-task/-collect-winds-extensions-task.html","searchKeys":["CollectWindsExtensionsTask","constructor()","dev.teogor.winds.gradle.tasks.impl.CollectWindsExtensionsTask.CollectWindsExtensionsTask"]},{"name":"constructor()","description":"dev.teogor.winds.gradle.tasks.impl.DocsGeneratorTask.DocsGeneratorTask","location":"gradle-plugin/dev.teogor.winds.gradle.tasks.impl/-docs-generator-task/-docs-generator-task.html","searchKeys":["DocsGeneratorTask","constructor()","dev.teogor.winds.gradle.tasks.impl.DocsGeneratorTask.DocsGeneratorTask"]},{"name":"constructor()","description":"dev.teogor.winds.gradle.tasks.impl.DocsGeneratorTaskLegacy.DocsGeneratorTaskLegacy","location":"gradle-plugin/dev.teogor.winds.gradle.tasks.impl/-docs-generator-task-legacy/-docs-generator-task-legacy.html","searchKeys":["DocsGeneratorTaskLegacy","constructor()","dev.teogor.winds.gradle.tasks.impl.DocsGeneratorTaskLegacy.DocsGeneratorTaskLegacy"]},{"name":"constructor()","description":"dev.teogor.winds.gradle.tasks.impl.WorkflowSynthesizerTask.WorkflowSynthesizerTask","location":"gradle-plugin/dev.teogor.winds.gradle.tasks.impl/-workflow-synthesizer-task/-workflow-synthesizer-task.html","searchKeys":["WorkflowSynthesizerTask","constructor()","dev.teogor.winds.gradle.tasks.impl.WorkflowSynthesizerTask.WorkflowSynthesizerTask"]},{"name":"constructor(project: Project)","description":"dev.teogor.winds.api.impl.WindsImpl.WindsImpl","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/-winds-impl.html","searchKeys":["WindsImpl","constructor(project: Project)","dev.teogor.winds.api.impl.WindsImpl.WindsImpl"]},{"name":"constructor(project: Project)","description":"dev.teogor.winds.api.impl.WindsLegacyOptions.WindsLegacyOptions","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-legacy-options/-winds-legacy-options.html","searchKeys":["WindsLegacyOptions","constructor(project: Project)","dev.teogor.winds.api.impl.WindsLegacyOptions.WindsLegacyOptions"]},{"name":"constructor(projectDir: File, docsGenerator: DocsGenerator)","description":"dev.teogor.winds.gradle.docs.DocsModuleHandler.DocsModuleHandler","location":"gradle-plugin/dev.teogor.winds.gradle.docs/-docs-module-handler/-docs-module-handler.html","searchKeys":["DocsModuleHandler","constructor(projectDir: File, docsGenerator: DocsGenerator)","dev.teogor.winds.gradle.docs.DocsModuleHandler.DocsModuleHandler"]},{"name":"constructor(projectDir: File, docsGenerator: DocsGenerator, libraries: MutableList<ModuleInfo>)","description":"dev.teogor.winds.api.docs.impl.StandardDocsModuleHandler.StandardDocsModuleHandler","location":"gradle-plugin/dev.teogor.winds.api.docs.impl/-standard-docs-module-handler/-standard-docs-module-handler.html","searchKeys":["StandardDocsModuleHandler","constructor(projectDir: File, docsGenerator: DocsGenerator, libraries: MutableList<ModuleInfo>)","dev.teogor.winds.api.docs.impl.StandardDocsModuleHandler.StandardDocsModuleHandler"]},{"name":"constructor(projectDir: File, docsGenerator: DocsGenerator, libraries: MutableList<ModuleInfo>)","description":"dev.teogor.winds.gradle.docs.StandardDocsModuleHandler.StandardDocsModuleHandler","location":"gradle-plugin/dev.teogor.winds.gradle.docs/-standard-docs-module-handler/-standard-docs-module-handler.html","searchKeys":["StandardDocsModuleHandler","constructor(projectDir: File, docsGenerator: DocsGenerator, libraries: MutableList<ModuleInfo>)","dev.teogor.winds.gradle.docs.StandardDocsModuleHandler.StandardDocsModuleHandler"]},{"name":"constructor(projectDir: File, docsGenerator: DocsGenerator, libraries: MutableList<ModuleInfo>, bomModule: ModuleInfo)","description":"dev.teogor.winds.api.docs.impl.BomDocsModuleHandler.BomDocsModuleHandler","location":"gradle-plugin/dev.teogor.winds.api.docs.impl/-bom-docs-module-handler/-bom-docs-module-handler.html","searchKeys":["BomDocsModuleHandler","constructor(projectDir: File, docsGenerator: DocsGenerator, libraries: MutableList<ModuleInfo>, bomModule: ModuleInfo)","dev.teogor.winds.api.docs.impl.BomDocsModuleHandler.BomDocsModuleHandler"]},{"name":"constructor(projectDir: File, docsGenerator: DocsGenerator, libraries: MutableList<ModuleInfo>, bomModule: ModuleInfo)","description":"dev.teogor.winds.gradle.docs.BomDocsModuleHandler.BomDocsModuleHandler","location":"gradle-plugin/dev.teogor.winds.gradle.docs/-bom-docs-module-handler/-bom-docs-module-handler.html","searchKeys":["BomDocsModuleHandler","constructor(projectDir: File, docsGenerator: DocsGenerator, libraries: MutableList<ModuleInfo>, bomModule: ModuleInfo)","dev.teogor.winds.gradle.docs.BomDocsModuleHandler.BomDocsModuleHandler"]},{"name":"fun <T> get(selector: MavenPublish.() -> T?): T?","description":"dev.teogor.winds.api.impl.MavenPublishImpl.get","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/get.html","searchKeys":["get","fun <T> get(selector: MavenPublish.() -> T?): T?","dev.teogor.winds.api.impl.MavenPublishImpl.get"]},{"name":"fun <T> gets(selector: MavenPublish.() -> T?): List<T>","description":"dev.teogor.winds.api.impl.MavenPublishImpl.gets","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/gets.html","searchKeys":["gets","fun <T> gets(selector: MavenPublish.() -> T?): List<T>","dev.teogor.winds.api.impl.MavenPublishImpl.gets"]},{"name":"fun <T> getter(selector: MavenPublish.() -> T?): T?","description":"dev.teogor.winds.api.impl.MavenPublishImpl.getter","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/getter.html","searchKeys":["getter","fun <T> getter(selector: MavenPublish.() -> T?): T?","dev.teogor.winds.api.impl.MavenPublishImpl.getter"]},{"name":"fun MavenPublish.copyVersion(block: Version.VersionBuilder.() -> Unit = {}): Version","description":"dev.teogor.winds.gradle.utils.copyVersion","location":"gradle-plugin/dev.teogor.winds.gradle.utils/copy-version.html","searchKeys":["copyVersion","fun MavenPublish.copyVersion(block: Version.VersionBuilder.() -> Unit = {}): Version","dev.teogor.winds.gradle.utils.copyVersion"]},{"name":"fun Project.afterWindsPluginConfiguration(action: Project.(WindsLegacy) -> Unit)","description":"dev.teogor.winds.gradle.utils.afterWindsPluginConfiguration","location":"gradle-plugin/dev.teogor.winds.gradle.utils/after-winds-plugin-configuration.html","searchKeys":["afterWindsPluginConfiguration","fun Project.afterWindsPluginConfiguration(action: Project.(WindsLegacy) -> Unit)","dev.teogor.winds.gradle.utils.afterWindsPluginConfiguration"]},{"name":"fun Project.aggregateDependencies(allDependencies: List<DependencyDefinition>, dependencyGatheringType: DependencyType): MutableList<DependencyDefinition>","description":"dev.teogor.winds.gradle.utils.aggregateDependencies","location":"gradle-plugin/dev.teogor.winds.gradle.utils/aggregate-dependencies.html","searchKeys":["aggregateDependencies","fun Project.aggregateDependencies(allDependencies: List<DependencyDefinition>, dependencyGatheringType: DependencyType): MutableList<DependencyDefinition>","dev.teogor.winds.gradle.utils.aggregateDependencies"]},{"name":"fun Project.collectAndPropagateChildMetadata(winds: Winds, collectWindsExtensions: CollectWindsExtensionsTask)","description":"dev.teogor.winds.gradle.collectAndPropagateChildMetadata","location":"gradle-plugin/dev.teogor.winds.gradle/collect-and-propagate-child-metadata.html","searchKeys":["collectAndPropagateChildMetadata","fun Project.collectAndPropagateChildMetadata(winds: Winds, collectWindsExtensions: CollectWindsExtensionsTask)","dev.teogor.winds.gradle.collectAndPropagateChildMetadata"]},{"name":"fun Project.configureBomModule(publishOptions: MavenPublish)","description":"dev.teogor.winds.gradle.utils.configureBomModule","location":"gradle-plugin/dev.teogor.winds.gradle.utils/configure-bom-module.html","searchKeys":["configureBomModule","fun Project.configureBomModule(publishOptions: MavenPublish)","dev.teogor.winds.gradle.utils.configureBomModule"]},{"name":"fun Project.configureBomModule(publishingOptions: PublishingOptions, bomOptions: BomOptions?)","description":"dev.teogor.winds.gradle.tasks.configureBomModule","location":"gradle-plugin/dev.teogor.winds.gradle.tasks/configure-bom-module.html","searchKeys":["configureBomModule","fun Project.configureBomModule(publishingOptions: PublishingOptions, bomOptions: BomOptions?)","dev.teogor.winds.gradle.tasks.configureBomModule"]},{"name":"fun Project.configureCollectWindsExtensionsTask(): CollectWindsExtensionsTask","description":"dev.teogor.winds.gradle.tasks.impl.configureCollectWindsExtensionsTask","location":"gradle-plugin/dev.teogor.winds.gradle.tasks.impl/configure-collect-winds-extensions-task.html","searchKeys":["configureCollectWindsExtensionsTask","fun Project.configureCollectWindsExtensionsTask(): CollectWindsExtensionsTask","dev.teogor.winds.gradle.tasks.impl.configureCollectWindsExtensionsTask"]},{"name":"fun Project.configureDocsGenerator()","description":"dev.teogor.winds.gradle.tasks.impl.configureDocsGenerator","location":"gradle-plugin/dev.teogor.winds.gradle.tasks.impl/configure-docs-generator.html","searchKeys":["configureDocsGenerator","fun Project.configureDocsGenerator()","dev.teogor.winds.gradle.tasks.impl.configureDocsGenerator"]},{"name":"fun Project.configureMavenPublish(winds: Winds)","description":"dev.teogor.winds.gradle.tasks.configureMavenPublish","location":"gradle-plugin/dev.teogor.winds.gradle.tasks/configure-maven-publish.html","searchKeys":["configureMavenPublish","fun Project.configureMavenPublish(winds: Winds)","dev.teogor.winds.gradle.tasks.configureMavenPublish"]},{"name":"fun Project.configureMavenPublishLegacy()","description":"dev.teogor.winds.gradle.tasks.impl.configureMavenPublishLegacy","location":"gradle-plugin/dev.teogor.winds.gradle.tasks.impl/configure-maven-publish-legacy.html","searchKeys":["configureMavenPublishLegacy","fun Project.configureMavenPublishLegacy()","dev.teogor.winds.gradle.tasks.impl.configureMavenPublishLegacy"]},{"name":"fun Project.configureWindsPluginConfiguration(action: Project.(WindsLegacy) -> Unit)","description":"dev.teogor.winds.gradle.utils.configureWindsPluginConfiguration","location":"gradle-plugin/dev.teogor.winds.gradle.utils/configure-winds-plugin-configuration.html","searchKeys":["configureWindsPluginConfiguration","fun Project.configureWindsPluginConfiguration(action: Project.(WindsLegacy) -> Unit)","dev.teogor.winds.gradle.utils.configureWindsPluginConfiguration"]},{"name":"fun Project.configureWorkflowSynthesizer()","description":"dev.teogor.winds.gradle.tasks.impl.configureWorkflowSynthesizer","location":"gradle-plugin/dev.teogor.winds.gradle.tasks.impl/configure-workflow-synthesizer.html","searchKeys":["configureWorkflowSynthesizer","fun Project.configureWorkflowSynthesizer()","dev.teogor.winds.gradle.tasks.impl.configureWorkflowSynthesizer"]},{"name":"fun Project.getAllDependencies(): List<DependencyDefinition>","description":"dev.teogor.winds.gradle.utils.getAllDependencies","location":"gradle-plugin/dev.teogor.winds.gradle.utils/get-all-dependencies.html","searchKeys":["getAllDependencies","fun Project.getAllDependencies(): List<DependencyDefinition>","dev.teogor.winds.gradle.utils.getAllDependencies"]},{"name":"fun Project.hasKotlinDslPlugin(): Boolean","description":"dev.teogor.winds.gradle.utils.hasKotlinDslPlugin","location":"gradle-plugin/dev.teogor.winds.gradle.utils/has-kotlin-dsl-plugin.html","searchKeys":["hasKotlinDslPlugin","fun Project.hasKotlinDslPlugin(): Boolean","dev.teogor.winds.gradle.utils.hasKotlinDslPlugin"]},{"name":"fun Project.hasPublishPlugin(): Boolean","description":"dev.teogor.winds.gradle.utils.hasPublishPlugin","location":"gradle-plugin/dev.teogor.winds.gradle.utils/has-publish-plugin.html","searchKeys":["hasPublishPlugin","fun Project.hasPublishPlugin(): Boolean","dev.teogor.winds.gradle.utils.hasPublishPlugin"]},{"name":"fun Project.isAndroidLibrary(): Boolean","description":"dev.teogor.winds.gradle.utils.isAndroidLibrary","location":"gradle-plugin/dev.teogor.winds.gradle.utils/is-android-library.html","searchKeys":["isAndroidLibrary","fun Project.isAndroidLibrary(): Boolean","dev.teogor.winds.gradle.utils.isAndroidLibrary"]},{"name":"fun Project.isWindsApplied(): Boolean","description":"dev.teogor.winds.gradle.utils.isWindsApplied","location":"gradle-plugin/dev.teogor.winds.gradle.utils/is-winds-applied.html","searchKeys":["isWindsApplied","fun Project.isWindsApplied(): Boolean","dev.teogor.winds.gradle.utils.isWindsApplied"]},{"name":"fun Project.lazy(block: Project.() -> Unit)","description":"dev.teogor.winds.gradle.utils.lazy","location":"gradle-plugin/dev.teogor.winds.gradle.utils/lazy.html","searchKeys":["lazy","fun Project.lazy(block: Project.() -> Unit)","dev.teogor.winds.gradle.utils.lazy"]},{"name":"fun Project.windsPluginConfiguration(action: Project.(WindsLegacy) -> Unit)","description":"dev.teogor.winds.gradle.utils.windsPluginConfiguration","location":"gradle-plugin/dev.teogor.winds.gradle.utils/winds-plugin-configuration.html","searchKeys":["windsPluginConfiguration","fun Project.windsPluginConfiguration(action: Project.(WindsLegacy) -> Unit)","dev.teogor.winds.gradle.utils.windsPluginConfiguration"]},{"name":"fun Project.withWinds(block: Winds.() -> Unit): Winds","description":"dev.teogor.winds.gradle.withWinds","location":"gradle-plugin/dev.teogor.winds.gradle/with-winds.html","searchKeys":["withWinds","fun Project.withWinds(block: Winds.() -> Unit): Winds","dev.teogor.winds.gradle.withWinds"]},{"name":"fun Project.withWinds(onWindsAvailable: Winds.() -> Unit = {}, onWindsReady: Winds.() -> Unit)","description":"dev.teogor.winds.gradle.withWinds","location":"gradle-plugin/dev.teogor.winds.gradle/with-winds.html","searchKeys":["withWinds","fun Project.withWinds(onWindsAvailable: Winds.() -> Unit = {}, onWindsReady: Winds.() -> Unit)","dev.teogor.winds.gradle.withWinds"]},{"name":"fun Project?.getCollectWindsExtensionsTask(): CollectWindsExtensionsTask","description":"dev.teogor.winds.gradle.tasks.impl.getCollectWindsExtensionsTask","location":"gradle-plugin/dev.teogor.winds.gradle.tasks.impl/get-collect-winds-extensions-task.html","searchKeys":["getCollectWindsExtensionsTask","fun Project?.getCollectWindsExtensionsTask(): CollectWindsExtensionsTask","dev.teogor.winds.gradle.tasks.impl.getCollectWindsExtensionsTask"]},{"name":"fun action()","description":"dev.teogor.winds.gradle.ReleaseNotesTask.action","location":"gradle-plugin/dev.teogor.winds.gradle/-release-notes-task/action.html","searchKeys":["action","fun action()","dev.teogor.winds.gradle.ReleaseNotesTask.action"]},{"name":"fun addChildMetadata(vararg moduleMetadata: ModuleMetadata)","description":"dev.teogor.winds.gradle.tasks.impl.CollectWindsExtensionsTask.addChildMetadata","location":"gradle-plugin/dev.teogor.winds.gradle.tasks.impl/-collect-winds-extensions-task/add-child-metadata.html","searchKeys":["addChildMetadata","fun addChildMetadata(vararg moduleMetadata: ModuleMetadata)","dev.teogor.winds.gradle.tasks.impl.CollectWindsExtensionsTask.addChildMetadata"]},{"name":"fun addLibrary(data: ModuleInfo)","description":"dev.teogor.winds.gradle.tasks.impl.DocsGeneratorTaskLegacy.addLibrary","location":"gradle-plugin/dev.teogor.winds.gradle.tasks.impl/-docs-generator-task-legacy/add-library.html","searchKeys":["addLibrary","fun addLibrary(data: ModuleInfo)","dev.teogor.winds.gradle.tasks.impl.DocsGeneratorTaskLegacy.addLibrary"]},{"name":"fun addLibrary(data: ModuleInfo)","description":"dev.teogor.winds.gradle.tasks.impl.WorkflowSynthesizerTask.addLibrary","location":"gradle-plugin/dev.teogor.winds.gradle.tasks.impl/-workflow-synthesizer-task/add-library.html","searchKeys":["addLibrary","fun addLibrary(data: ModuleInfo)","dev.teogor.winds.gradle.tasks.impl.WorkflowSynthesizerTask.addLibrary"]},{"name":"fun addLibrary(data: ModuleMetadata)","description":"dev.teogor.winds.gradle.tasks.impl.DocsGeneratorTask.addLibrary","location":"gradle-plugin/dev.teogor.winds.gradle.tasks.impl/-docs-generator-task/add-library.html","searchKeys":["addLibrary","fun addLibrary(data: ModuleMetadata)","dev.teogor.winds.gradle.tasks.impl.DocsGeneratorTask.addLibrary"]},{"name":"fun addModuleDescriptor(moduleDescriptor: ModuleDescriptor)","description":"dev.teogor.winds.gradle.ReleaseNotesTask.addModuleDescriptor","location":"gradle-plugin/dev.teogor.winds.gradle/-release-notes-task/add-module-descriptor.html","searchKeys":["addModuleDescriptor","fun addModuleDescriptor(moduleDescriptor: ModuleDescriptor)","dev.teogor.winds.gradle.ReleaseNotesTask.addModuleDescriptor"]},{"name":"fun createHandler(projectDir: File, docsGenerator: DocsGenerator, libraries: MutableList<ModuleInfo>): DocsModuleHandler","description":"dev.teogor.winds.api.docs.impl.factory.DocsModuleHandlerFactory.createHandler","location":"gradle-plugin/dev.teogor.winds.api.docs.impl.factory/-docs-module-handler-factory/create-handler.html","searchKeys":["createHandler","fun createHandler(projectDir: File, docsGenerator: DocsGenerator, libraries: MutableList<ModuleInfo>): DocsModuleHandler","dev.teogor.winds.api.docs.impl.factory.DocsModuleHandlerFactory.createHandler"]},{"name":"fun createHandler(projectDir: File, docsGenerator: DocsGenerator, libraries: MutableList<ModuleInfo>): DocsModuleHandler","description":"dev.teogor.winds.gradle.docs.factory.DocsModuleHandlerFactory.createHandler","location":"gradle-plugin/dev.teogor.winds.gradle.docs.factory/-docs-module-handler-factory/create-handler.html","searchKeys":["createHandler","fun createHandler(projectDir: File, docsGenerator: DocsGenerator, libraries: MutableList<ModuleInfo>): DocsModuleHandler","dev.teogor.winds.gradle.docs.factory.DocsModuleHandlerFactory.createHandler"]},{"name":"fun customAction()","description":"dev.teogor.winds.gradle.tasks.impl.CollectWindsExtensionsTask.customAction","location":"gradle-plugin/dev.teogor.winds.gradle.tasks.impl/-collect-winds-extensions-task/custom-action.html","searchKeys":["customAction","fun customAction()","dev.teogor.winds.gradle.tasks.impl.CollectWindsExtensionsTask.customAction"]},{"name":"fun getChildMetadata(): List<ModuleMetadata>","description":"dev.teogor.winds.gradle.tasks.impl.CollectWindsExtensionsTask.getChildMetadata","location":"gradle-plugin/dev.teogor.winds.gradle.tasks.impl/-collect-winds-extensions-task/get-child-metadata.html","searchKeys":["getChildMetadata","fun getChildMetadata(): List<ModuleMetadata>","dev.teogor.winds.gradle.tasks.impl.CollectWindsExtensionsTask.getChildMetadata"]},{"name":"fun getLibs(): MutableList<ModuleInfo>","description":"dev.teogor.winds.gradle.tasks.impl.WorkflowSynthesizerTask.getLibs","location":"gradle-plugin/dev.teogor.winds.gradle.tasks.impl/-workflow-synthesizer-task/get-libs.html","searchKeys":["getLibs","fun getLibs(): MutableList<ModuleInfo>","dev.teogor.winds.gradle.tasks.impl.WorkflowSynthesizerTask.getLibs"]},{"name":"fun getProjectPath(): String?","description":"dev.teogor.winds.gradle.tasks.impl.CollectWindsExtensionsTask.getProjectPath","location":"gradle-plugin/dev.teogor.winds.gradle.tasks.impl/-collect-winds-extensions-task/get-project-path.html","searchKeys":["getProjectPath","fun getProjectPath(): String?","dev.teogor.winds.gradle.tasks.impl.CollectWindsExtensionsTask.getProjectPath"]},{"name":"fun propagateChildMetadata(block: ModuleMetadata.() -> Unit)","description":"dev.teogor.winds.gradle.tasks.impl.CollectWindsExtensionsTask.propagateChildMetadata","location":"gradle-plugin/dev.teogor.winds.gradle.tasks.impl/-collect-winds-extensions-task/propagate-child-metadata.html","searchKeys":["propagateChildMetadata","fun propagateChildMetadata(block: ModuleMetadata.() -> Unit)","dev.teogor.winds.gradle.tasks.impl.CollectWindsExtensionsTask.propagateChildMetadata"]},{"name":"fun provideDocsGenerator(docsGenerator: DocsGenerator)","description":"dev.teogor.winds.gradle.tasks.impl.DocsGeneratorTask.provideDocsGenerator","location":"gradle-plugin/dev.teogor.winds.gradle.tasks.impl/-docs-generator-task/provide-docs-generator.html","searchKeys":["provideDocsGenerator","fun provideDocsGenerator(docsGenerator: DocsGenerator)","dev.teogor.winds.gradle.tasks.impl.DocsGeneratorTask.provideDocsGenerator"]},{"name":"fun provideDocsGenerator(docsGenerator: DocsGenerator)","description":"dev.teogor.winds.gradle.tasks.impl.DocsGeneratorTaskLegacy.provideDocsGenerator","location":"gradle-plugin/dev.teogor.winds.gradle.tasks.impl/-docs-generator-task-legacy/provide-docs-generator.html","searchKeys":["provideDocsGenerator","fun provideDocsGenerator(docsGenerator: DocsGenerator)","dev.teogor.winds.gradle.tasks.impl.DocsGeneratorTaskLegacy.provideDocsGenerator"]},{"name":"fun provideProjectDir(projectDir: File)","description":"dev.teogor.winds.gradle.tasks.impl.DocsGeneratorTask.provideProjectDir","location":"gradle-plugin/dev.teogor.winds.gradle.tasks.impl/-docs-generator-task/provide-project-dir.html","searchKeys":["provideProjectDir","fun provideProjectDir(projectDir: File)","dev.teogor.winds.gradle.tasks.impl.DocsGeneratorTask.provideProjectDir"]},{"name":"fun provideProjectDir(projectDir: File)","description":"dev.teogor.winds.gradle.tasks.impl.DocsGeneratorTaskLegacy.provideProjectDir","location":"gradle-plugin/dev.teogor.winds.gradle.tasks.impl/-docs-generator-task-legacy/provide-project-dir.html","searchKeys":["provideProjectDir","fun provideProjectDir(projectDir: File)","dev.teogor.winds.gradle.tasks.impl.DocsGeneratorTaskLegacy.provideProjectDir"]},{"name":"fun provideWorkflowSynthesizer(workflowSynthesizer: WorkflowSynthesizer)","description":"dev.teogor.winds.gradle.tasks.impl.WorkflowSynthesizerTask.provideWorkflowSynthesizer","location":"gradle-plugin/dev.teogor.winds.gradle.tasks.impl/-workflow-synthesizer-task/provide-workflow-synthesizer.html","searchKeys":["provideWorkflowSynthesizer","fun provideWorkflowSynthesizer(workflowSynthesizer: WorkflowSynthesizer)","dev.teogor.winds.gradle.tasks.impl.WorkflowSynthesizerTask.provideWorkflowSynthesizer"]},{"name":"fun setModuleMetadata(moduleMetadata: ModuleMetadata)","description":"dev.teogor.winds.gradle.tasks.impl.CollectWindsExtensionsTask.setModuleMetadata","location":"gradle-plugin/dev.teogor.winds.gradle.tasks.impl/-collect-winds-extensions-task/set-module-metadata.html","searchKeys":["setModuleMetadata","fun setModuleMetadata(moduleMetadata: ModuleMetadata)","dev.teogor.winds.gradle.tasks.impl.CollectWindsExtensionsTask.setModuleMetadata"]},{"name":"fun setProjectPath(projectPath: String)","description":"dev.teogor.winds.gradle.tasks.impl.CollectWindsExtensionsTask.setProjectPath","location":"gradle-plugin/dev.teogor.winds.gradle.tasks.impl/-collect-winds-extensions-task/set-project-path.html","searchKeys":["setProjectPath","fun setProjectPath(projectPath: String)","dev.teogor.winds.gradle.tasks.impl.CollectWindsExtensionsTask.setProjectPath"]},{"name":"fun writeMkDocs(mkDocsPath: String, section: String, version: String)","description":"dev.teogor.winds.gradle.docs.DocsModuleHandler.writeMkDocs","location":"gradle-plugin/dev.teogor.winds.gradle.docs/-docs-module-handler/write-mk-docs.html","searchKeys":["writeMkDocs","fun writeMkDocs(mkDocsPath: String, section: String, version: String)","dev.teogor.winds.gradle.docs.DocsModuleHandler.writeMkDocs"]},{"name":"infix fun MavenPublish.attachTo(pom: MavenPom)","description":"dev.teogor.winds.gradle.utils.attachTo","location":"gradle-plugin/dev.teogor.winds.gradle.utils/attach-to.html","searchKeys":["attachTo","infix fun MavenPublish.attachTo(pom: MavenPom)","dev.teogor.winds.gradle.utils.attachTo"]},{"name":"inline fun <T : DefaultTask> WindsLegacyOptions.registerTask(name: String): TaskProvider<T>","description":"dev.teogor.winds.gradle.utils.registerTask","location":"gradle-plugin/dev.teogor.winds.gradle.utils/register-task.html","searchKeys":["registerTask","inline fun <T : DefaultTask> WindsLegacyOptions.registerTask(name: String): TaskProvider<T>","dev.teogor.winds.gradle.utils.registerTask"]},{"name":"inline fun <T> T?.ifNull(defaultValue: () -> T): T","description":"dev.teogor.winds.gradle.utils.ifNull","location":"gradle-plugin/dev.teogor.winds.gradle.utils/if-null.html","searchKeys":["ifNull","inline fun <T> T?.ifNull(defaultValue: () -> T): T","dev.teogor.winds.gradle.utils.ifNull"]},{"name":"inline fun Project.checkPluginApplied(crossinline block: WindsLegacy.() -> Unit)","description":"dev.teogor.winds.gradle.utils.checkPluginApplied","location":"gradle-plugin/dev.teogor.winds.gradle.utils/check-plugin-applied.html","searchKeys":["checkPluginApplied","inline fun Project.checkPluginApplied(crossinline block: WindsLegacy.() -> Unit)","dev.teogor.winds.gradle.utils.checkPluginApplied"]},{"name":"inline fun Project.collectModulesInfo(crossinline onModuleInfo: (ModuleInfo) -> Unit)","description":"dev.teogor.winds.gradle.utils.collectModulesInfo","location":"gradle-plugin/dev.teogor.winds.gradle.utils/collect-modules-info.html","searchKeys":["collectModulesInfo","inline fun Project.collectModulesInfo(crossinline onModuleInfo: (ModuleInfo) -> Unit)","dev.teogor.winds.gradle.utils.collectModulesInfo"]},{"name":"inline fun Project.isWindsApplied(lazyStart: Boolean = true, crossinline block: WindsLegacy.() -> Unit)","description":"dev.teogor.winds.gradle.utils.isWindsApplied","location":"gradle-plugin/dev.teogor.winds.gradle.utils/is-winds-applied.html","searchKeys":["isWindsApplied","inline fun Project.isWindsApplied(lazyStart: Boolean = true, crossinline block: WindsLegacy.() -> Unit)","dev.teogor.winds.gradle.utils.isWindsApplied"]},{"name":"inline fun Project.parentDependsOnCollectWindsExtensionsTask(crossinline block: CollectWindsExtensionsTask.() -> Unit = {})","description":"dev.teogor.winds.gradle.tasks.impl.parentDependsOnCollectWindsExtensionsTask","location":"gradle-plugin/dev.teogor.winds.gradle.tasks.impl/parent-depends-on-collect-winds-extensions-task.html","searchKeys":["parentDependsOnCollectWindsExtensionsTask","inline fun Project.parentDependsOnCollectWindsExtensionsTask(crossinline block: CollectWindsExtensionsTask.() -> Unit = {})","dev.teogor.winds.gradle.tasks.impl.parentDependsOnCollectWindsExtensionsTask"]},{"name":"inline fun Project.registerCollectWindsExtensionsTask(crossinline block: CollectWindsExtensionsTask.() -> Unit = {}): CollectWindsExtensionsTask","description":"dev.teogor.winds.gradle.tasks.impl.registerCollectWindsExtensionsTask","location":"gradle-plugin/dev.teogor.winds.gradle.tasks.impl/register-collect-winds-extensions-task.html","searchKeys":["registerCollectWindsExtensionsTask","inline fun Project.registerCollectWindsExtensionsTask(crossinline block: CollectWindsExtensionsTask.() -> Unit = {}): CollectWindsExtensionsTask","dev.teogor.winds.gradle.tasks.impl.registerCollectWindsExtensionsTask"]},{"name":"inline fun Project.subprojectChildrens(crossinline action: Project.() -> Unit)","description":"dev.teogor.winds.gradle.tasks.impl.subprojectChildrens","location":"gradle-plugin/dev.teogor.winds.gradle.tasks.impl/subproject-childrens.html","searchKeys":["subprojectChildrens","inline fun Project.subprojectChildrens(crossinline action: Project.() -> Unit)","dev.teogor.winds.gradle.tasks.impl.subprojectChildrens"]},{"name":"inline fun Project?.getCollectWindsExtensionsTask(crossinline block: CollectWindsExtensionsTask.(Project) -> Unit = {})","description":"dev.teogor.winds.gradle.tasks.impl.getCollectWindsExtensionsTask","location":"gradle-plugin/dev.teogor.winds.gradle.tasks.impl/get-collect-winds-extensions-task.html","searchKeys":["getCollectWindsExtensionsTask","inline fun Project?.getCollectWindsExtensionsTask(crossinline block: CollectWindsExtensionsTask.(Project) -> Unit = {})","dev.teogor.winds.gradle.tasks.impl.getCollectWindsExtensionsTask"]},{"name":"open class BuildFeaturesImpl : BuildFeatures","description":"dev.teogor.winds.api.impl.BuildFeaturesImpl","location":"gradle-plugin/dev.teogor.winds.api.impl/-build-features-impl/index.html","searchKeys":["BuildFeaturesImpl","open class BuildFeaturesImpl : BuildFeatures","dev.teogor.winds.api.impl.BuildFeaturesImpl"]},{"name":"open class MavenPublishImpl : MavenPublish","description":"dev.teogor.winds.api.impl.MavenPublishImpl","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/index.html","searchKeys":["MavenPublishImpl","open class MavenPublishImpl : MavenPublish","dev.teogor.winds.api.impl.MavenPublishImpl"]},{"name":"open class ModuleMetadataImpl : ModuleMetadata","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/index.html","searchKeys":["ModuleMetadataImpl","open class ModuleMetadataImpl : ModuleMetadata","dev.teogor.winds.api.impl.ModuleMetadataImpl"]},{"name":"open class PublishingOptionsImpl : PublishingOptions","description":"dev.teogor.winds.api.impl.PublishingOptionsImpl","location":"gradle-plugin/dev.teogor.winds.api.impl/-publishing-options-impl/index.html","searchKeys":["PublishingOptionsImpl","open class PublishingOptionsImpl : PublishingOptions","dev.teogor.winds.api.impl.PublishingOptionsImpl"]},{"name":"open class WindsFeaturesImpl : WindsFeatures","description":"dev.teogor.winds.api.impl.WindsFeaturesImpl","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-features-impl/index.html","searchKeys":["WindsFeaturesImpl","open class WindsFeaturesImpl : WindsFeatures","dev.teogor.winds.api.impl.WindsFeaturesImpl"]},{"name":"open infix override fun List<License>.register(license: License)","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.register","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/register.html","searchKeys":["register","open infix override fun List<License>.register(license: License)","dev.teogor.winds.api.impl.ModuleMetadataImpl.register"]},{"name":"open infix override fun ModuleMetadata.licensedUnder(license: License)","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.licensedUnder","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/licensed-under.html","searchKeys":["licensedUnder","open infix override fun ModuleMetadata.licensedUnder(license: License)","dev.teogor.winds.api.impl.ModuleMetadataImpl.licensedUnder"]},{"name":"open operator override fun List<License>.plusAssign(license: License)","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.plusAssign","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/plus-assign.html","searchKeys":["plusAssign","open operator override fun List<License>.plusAssign(license: License)","dev.teogor.winds.api.impl.ModuleMetadataImpl.plusAssign"]},{"name":"open operator override fun plusAssign(license: License)","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.plusAssign","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/plus-assign.html","searchKeys":["plusAssign","open operator override fun plusAssign(license: License)","dev.teogor.winds.api.impl.ModuleMetadataImpl.plusAssign"]},{"name":"open override fun <T : Person> person(type: KClass<T>, block: T.() -> Unit)","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.person","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/person.html","searchKeys":["person","open override fun <T : Person> person(type: KClass<T>, block: T.() -> Unit)","dev.teogor.winds.api.impl.ModuleMetadataImpl.person"]},{"name":"open override fun <T : Scm> scm(type: KClass<T>, block: T.() -> Unit)","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.scm","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/scm.html","searchKeys":["scm","open override fun <T : Scm> scm(type: KClass<T>, block: T.() -> Unit)","dev.teogor.winds.api.impl.ModuleMetadataImpl.scm"]},{"name":"open override fun <T : TicketSystem> ticketSystem(type: KClass<T>, block: T.() -> Unit)","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.ticketSystem","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/ticket-system.html","searchKeys":["ticketSystem","open override fun <T : TicketSystem> ticketSystem(type: KClass<T>, block: T.() -> Unit)","dev.teogor.winds.api.impl.ModuleMetadataImpl.ticketSystem"]},{"name":"open override fun action()","description":"dev.teogor.winds.gradle.tasks.impl.DocsGeneratorTask.action","location":"gradle-plugin/dev.teogor.winds.gradle.tasks.impl/-docs-generator-task/action.html","searchKeys":["action","open override fun action()","dev.teogor.winds.gradle.tasks.impl.DocsGeneratorTask.action"]},{"name":"open override fun action()","description":"dev.teogor.winds.gradle.tasks.impl.DocsGeneratorTaskLegacy.action","location":"gradle-plugin/dev.teogor.winds.gradle.tasks.impl/-docs-generator-task-legacy/action.html","searchKeys":["action","open override fun action()","dev.teogor.winds.gradle.tasks.impl.DocsGeneratorTaskLegacy.action"]},{"name":"open override fun action()","description":"dev.teogor.winds.gradle.tasks.impl.WorkflowSynthesizerTask.action","location":"gradle-plugin/dev.teogor.winds.gradle.tasks.impl/-workflow-synthesizer-task/action.html","searchKeys":["action","open override fun action()","dev.teogor.winds.gradle.tasks.impl.WorkflowSynthesizerTask.action"]},{"name":"open override fun addContributor(contributor: Contributor)","description":"dev.teogor.winds.api.impl.MavenPublishImpl.addContributor","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/add-contributor.html","searchKeys":["addContributor","open override fun addContributor(contributor: Contributor)","dev.teogor.winds.api.impl.MavenPublishImpl.addContributor"]},{"name":"open override fun addContributor(init: ContributorImpl.() -> Unit)","description":"dev.teogor.winds.api.impl.MavenPublishImpl.addContributor","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/add-contributor.html","searchKeys":["addContributor","open override fun addContributor(init: ContributorImpl.() -> Unit)","dev.teogor.winds.api.impl.MavenPublishImpl.addContributor"]},{"name":"open override fun addContributors(vararg contributors: Contributor)","description":"dev.teogor.winds.api.impl.MavenPublishImpl.addContributors","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/add-contributors.html","searchKeys":["addContributors","open override fun addContributors(vararg contributors: Contributor)","dev.teogor.winds.api.impl.MavenPublishImpl.addContributors"]},{"name":"open override fun addDeveloper(developer: Developer)","description":"dev.teogor.winds.api.impl.MavenPublishImpl.addDeveloper","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/add-developer.html","searchKeys":["addDeveloper","open override fun addDeveloper(developer: Developer)","dev.teogor.winds.api.impl.MavenPublishImpl.addDeveloper"]},{"name":"open override fun addDeveloper(init: DeveloperImpl.() -> Unit)","description":"dev.teogor.winds.api.impl.MavenPublishImpl.addDeveloper","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/add-developer.html","searchKeys":["addDeveloper","open override fun addDeveloper(init: DeveloperImpl.() -> Unit)","dev.teogor.winds.api.impl.MavenPublishImpl.addDeveloper"]},{"name":"open override fun addDevelopers(vararg developers: Developer)","description":"dev.teogor.winds.api.impl.MavenPublishImpl.addDevelopers","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/add-developers.html","searchKeys":["addDevelopers","open override fun addDevelopers(vararg developers: Developer)","dev.teogor.winds.api.impl.MavenPublishImpl.addDevelopers"]},{"name":"open override fun addLicense(license: LicenseType)","description":"dev.teogor.winds.api.impl.MavenPublishImpl.addLicense","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/add-license.html","searchKeys":["addLicense","open override fun addLicense(license: LicenseType)","dev.teogor.winds.api.impl.MavenPublishImpl.addLicense"]},{"name":"open override fun apply(target: Project)","description":"dev.teogor.winds.gradle.WindsPlugin.apply","location":"gradle-plugin/dev.teogor.winds.gradle/-winds-plugin/apply.html","searchKeys":["apply","open override fun apply(target: Project)","dev.teogor.winds.gradle.WindsPlugin.apply"]},{"name":"open override fun artifactDescriptor(block: ArtifactDescriptor.() -> Unit)","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.artifactDescriptor","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/artifact-descriptor.html","searchKeys":["artifactDescriptor","open override fun artifactDescriptor(block: ArtifactDescriptor.() -> Unit)","dev.teogor.winds.api.impl.ModuleMetadataImpl.artifactDescriptor"]},{"name":"open override fun binaryCompatibility(configure: BinaryCompatibility.() -> Unit)","description":"dev.teogor.winds.api.impl.CodebaseOptionsImpl.binaryCompatibility","location":"gradle-plugin/dev.teogor.winds.api.impl/-codebase-options-impl/binary-compatibility.html","searchKeys":["binaryCompatibility","open override fun binaryCompatibility(configure: BinaryCompatibility.() -> Unit)","dev.teogor.winds.api.impl.CodebaseOptionsImpl.binaryCompatibility"]},{"name":"open override fun bomOptions(block: BomOptions.() -> Unit)","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.bomOptions","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/bom-options.html","searchKeys":["bomOptions","open override fun bomOptions(block: BomOptions.() -> Unit)","dev.teogor.winds.api.impl.ModuleMetadataImpl.bomOptions"]},{"name":"open override fun buildFeatures(action: BuildFeatures.() -> Unit)","description":"dev.teogor.winds.api.impl.WindsLegacyOptions.buildFeatures","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-legacy-options/build-features.html","searchKeys":["buildFeatures","open override fun buildFeatures(action: BuildFeatures.() -> Unit)","dev.teogor.winds.api.impl.WindsLegacyOptions.buildFeatures"]},{"name":"open override fun codebaseOptions(configure: CodebaseOptions.() -> Unit)","description":"dev.teogor.winds.api.impl.WindsImpl.codebaseOptions","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/codebase-options.html","searchKeys":["codebaseOptions","open override fun codebaseOptions(configure: CodebaseOptions.() -> Unit)","dev.teogor.winds.api.impl.WindsImpl.codebaseOptions"]},{"name":"open override fun configureProjects(includeRoot: Boolean, action: Project.(Winds) -> Unit)","description":"dev.teogor.winds.api.impl.WindsImpl.configureProjects","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/configure-projects.html","searchKeys":["configureProjects","open override fun configureProjects(includeRoot: Boolean, action: Project.(Winds) -> Unit)","dev.teogor.winds.api.impl.WindsImpl.configureProjects"]},{"name":"open override fun copy(from: PublishingOptions): PublishingOptions","description":"dev.teogor.winds.api.impl.PublishingOptionsImpl.copy","location":"gradle-plugin/dev.teogor.winds.api.impl/-publishing-options-impl/copy.html","searchKeys":["copy","open override fun copy(from: PublishingOptions): PublishingOptions","dev.teogor.winds.api.impl.PublishingOptionsImpl.copy"]},{"name":"open override fun copy(fromObj: ModuleMetadata): ModuleMetadata","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.copy","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/copy.html","searchKeys":["copy","open override fun copy(fromObj: ModuleMetadata): ModuleMetadata","dev.teogor.winds.api.impl.ModuleMetadataImpl.copy"]},{"name":"open override fun defineBoM(init: BomOptions.() -> Unit)","description":"dev.teogor.winds.api.impl.MavenPublishImpl.defineBoM","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/define-bo-m.html","searchKeys":["defineBoM","open override fun defineBoM(init: BomOptions.() -> Unit)","dev.teogor.winds.api.impl.MavenPublishImpl.defineBoM"]},{"name":"open override fun docsGenerator(action: DocsGenerator.() -> Unit)","description":"dev.teogor.winds.api.impl.WindsImpl.docsGenerator","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/docs-generator.html","searchKeys":["docsGenerator","open override fun docsGenerator(action: DocsGenerator.() -> Unit)","dev.teogor.winds.api.impl.WindsImpl.docsGenerator"]},{"name":"open override fun docsGenerator(action: DocsGenerator.() -> Unit)","description":"dev.teogor.winds.api.impl.WindsLegacyOptions.docsGenerator","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-legacy-options/docs-generator.html","searchKeys":["docsGenerator","open override fun docsGenerator(action: DocsGenerator.() -> Unit)","dev.teogor.winds.api.impl.WindsLegacyOptions.docsGenerator"]},{"name":"open override fun documentationBuilder(configure: DocumentationBuilder.() -> Unit)","description":"dev.teogor.winds.api.impl.WindsImpl.documentationBuilder","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/documentation-builder.html","searchKeys":["documentationBuilder","open override fun documentationBuilder(configure: DocumentationBuilder.() -> Unit)","dev.teogor.winds.api.impl.WindsImpl.documentationBuilder"]},{"name":"open override fun dokka(configure: DokkaOptions.() -> Unit)","description":"dev.teogor.winds.api.impl.CodebaseOptionsImpl.dokka","location":"gradle-plugin/dev.teogor.winds.api.impl/-codebase-options-impl/dokka.html","searchKeys":["dokka","open override fun dokka(configure: DokkaOptions.() -> Unit)","dev.teogor.winds.api.impl.CodebaseOptionsImpl.dokka"]},{"name":"open override fun excludeModules(block: () -> List<String>)","description":"dev.teogor.winds.api.impl.DocsGeneratorImpl.excludeModules","location":"gradle-plugin/dev.teogor.winds.api.impl/-docs-generator-impl/exclude-modules.html","searchKeys":["excludeModules","open override fun excludeModules(block: () -> List<String>)","dev.teogor.winds.api.impl.DocsGeneratorImpl.excludeModules"]},{"name":"open override fun excludeModules(block: () -> List<String>)","description":"dev.teogor.winds.api.impl.WorkflowSynthesizerImpl.excludeModules","location":"gradle-plugin/dev.teogor.winds.api.impl/-workflow-synthesizer-impl/exclude-modules.html","searchKeys":["excludeModules","open override fun excludeModules(block: () -> List<String>)","dev.teogor.winds.api.impl.WorkflowSynthesizerImpl.excludeModules"]},{"name":"open override fun issueManagement(ticketSystem: TicketSystem)","description":"dev.teogor.winds.api.impl.MavenPublishImpl.issueManagement","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/issue-management.html","searchKeys":["issueManagement","open override fun issueManagement(ticketSystem: TicketSystem)","dev.teogor.winds.api.impl.MavenPublishImpl.issueManagement"]},{"name":"open override fun licenses(block: MutableList<License>.() -> Unit)","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.licenses","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/licenses.html","searchKeys":["licenses","open override fun licenses(block: MutableList<License>.() -> Unit)","dev.teogor.winds.api.impl.ModuleMetadataImpl.licenses"]},{"name":"open override fun licenses(vararg licenses: License)","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.licenses","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/licenses.html","searchKeys":["licenses","open override fun licenses(vararg licenses: License)","dev.teogor.winds.api.impl.ModuleMetadataImpl.licenses"]},{"name":"open override fun manageDependencies()","description":"dev.teogor.winds.api.docs.impl.BomDocsModuleHandler.manageDependencies","location":"gradle-plugin/dev.teogor.winds.api.docs.impl/-bom-docs-module-handler/manage-dependencies.html","searchKeys":["manageDependencies","open override fun manageDependencies()","dev.teogor.winds.api.docs.impl.BomDocsModuleHandler.manageDependencies"]},{"name":"open override fun manageDependencies()","description":"dev.teogor.winds.api.docs.impl.StandardDocsModuleHandler.manageDependencies","location":"gradle-plugin/dev.teogor.winds.api.docs.impl/-standard-docs-module-handler/manage-dependencies.html","searchKeys":["manageDependencies","open override fun manageDependencies()","dev.teogor.winds.api.docs.impl.StandardDocsModuleHandler.manageDependencies"]},{"name":"open override fun manageDependencies()","description":"dev.teogor.winds.gradle.docs.BomDocsModuleHandler.manageDependencies","location":"gradle-plugin/dev.teogor.winds.gradle.docs/-bom-docs-module-handler/manage-dependencies.html","searchKeys":["manageDependencies","open override fun manageDependencies()","dev.teogor.winds.gradle.docs.BomDocsModuleHandler.manageDependencies"]},{"name":"open override fun manageDependencies()","description":"dev.teogor.winds.gradle.docs.StandardDocsModuleHandler.manageDependencies","location":"gradle-plugin/dev.teogor.winds.gradle.docs/-standard-docs-module-handler/manage-dependencies.html","searchKeys":["manageDependencies","open override fun manageDependencies()","dev.teogor.winds.gradle.docs.StandardDocsModuleHandler.manageDependencies"]},{"name":"open override fun mavenPublish(action: MavenPublish.() -> Unit)","description":"dev.teogor.winds.api.impl.WindsLegacyOptions.mavenPublish","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-legacy-options/maven-publish.html","searchKeys":["mavenPublish","open override fun mavenPublish(action: MavenPublish.() -> Unit)","dev.teogor.winds.api.impl.WindsLegacyOptions.mavenPublish"]},{"name":"open override fun moduleMetadata(action: ModuleMetadata.() -> Unit)","description":"dev.teogor.winds.api.impl.WindsImpl.moduleMetadata","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/module-metadata.html","searchKeys":["moduleMetadata","open override fun moduleMetadata(action: ModuleMetadata.() -> Unit)","dev.teogor.winds.api.impl.WindsImpl.moduleMetadata"]},{"name":"open override fun publishingOptions(action: PublishingOptions.() -> Unit)","description":"dev.teogor.winds.api.impl.WindsImpl.publishingOptions","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/publishing-options.html","searchKeys":["publishingOptions","open override fun publishingOptions(action: PublishingOptions.() -> Unit)","dev.teogor.winds.api.impl.WindsImpl.publishingOptions"]},{"name":"open override fun sourceControlManagement(scm: Scm)","description":"dev.teogor.winds.api.impl.MavenPublishImpl.sourceControlManagement","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/source-control-management.html","searchKeys":["sourceControlManagement","open override fun sourceControlManagement(scm: Scm)","dev.teogor.winds.api.impl.MavenPublishImpl.sourceControlManagement"]},{"name":"open override fun spotless(configure: SpotlessOptions.() -> Unit)","description":"dev.teogor.winds.api.impl.CodebaseOptionsImpl.spotless","location":"gradle-plugin/dev.teogor.winds.api.impl/-codebase-options-impl/spotless.html","searchKeys":["spotless","open override fun spotless(configure: SpotlessOptions.() -> Unit)","dev.teogor.winds.api.impl.CodebaseOptionsImpl.spotless"]},{"name":"open override fun updateMkDocs(mkDocsPath: String, section: String)","description":"dev.teogor.winds.api.docs.impl.BomDocsModuleHandler.updateMkDocs","location":"gradle-plugin/dev.teogor.winds.api.docs.impl/-bom-docs-module-handler/update-mk-docs.html","searchKeys":["updateMkDocs","open override fun updateMkDocs(mkDocsPath: String, section: String)","dev.teogor.winds.api.docs.impl.BomDocsModuleHandler.updateMkDocs"]},{"name":"open override fun updateMkDocs(mkDocsPath: String, section: String)","description":"dev.teogor.winds.api.docs.impl.StandardDocsModuleHandler.updateMkDocs","location":"gradle-plugin/dev.teogor.winds.api.docs.impl/-standard-docs-module-handler/update-mk-docs.html","searchKeys":["updateMkDocs","open override fun updateMkDocs(mkDocsPath: String, section: String)","dev.teogor.winds.api.docs.impl.StandardDocsModuleHandler.updateMkDocs"]},{"name":"open override fun updateMkDocs(mkDocsPath: String, section: String)","description":"dev.teogor.winds.gradle.docs.BomDocsModuleHandler.updateMkDocs","location":"gradle-plugin/dev.teogor.winds.gradle.docs/-bom-docs-module-handler/update-mk-docs.html","searchKeys":["updateMkDocs","open override fun updateMkDocs(mkDocsPath: String, section: String)","dev.teogor.winds.gradle.docs.BomDocsModuleHandler.updateMkDocs"]},{"name":"open override fun updateMkDocs(mkDocsPath: String, section: String)","description":"dev.teogor.winds.gradle.docs.StandardDocsModuleHandler.updateMkDocs","location":"gradle-plugin/dev.teogor.winds.gradle.docs/-standard-docs-module-handler/update-mk-docs.html","searchKeys":["updateMkDocs","open override fun updateMkDocs(mkDocsPath: String, section: String)","dev.teogor.winds.gradle.docs.StandardDocsModuleHandler.updateMkDocs"]},{"name":"open override fun windsFeatures(action: WindsFeatures.() -> Unit)","description":"dev.teogor.winds.api.impl.WindsImpl.windsFeatures","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/winds-features.html","searchKeys":["windsFeatures","open override fun windsFeatures(action: WindsFeatures.() -> Unit)","dev.teogor.winds.api.impl.WindsImpl.windsFeatures"]},{"name":"open override fun workflowSynthesizer(action: WorkflowSynthesizer.() -> Unit)","description":"dev.teogor.winds.api.impl.WindsImpl.workflowSynthesizer","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/workflow-synthesizer.html","searchKeys":["workflowSynthesizer","open override fun workflowSynthesizer(action: WorkflowSynthesizer.() -> Unit)","dev.teogor.winds.api.impl.WindsImpl.workflowSynthesizer"]},{"name":"open override fun workflowSynthesizer(action: WorkflowSynthesizer.() -> Unit)","description":"dev.teogor.winds.api.impl.WindsLegacyOptions.workflowSynthesizer","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-legacy-options/workflow-synthesizer.html","searchKeys":["workflowSynthesizer","open override fun workflowSynthesizer(action: WorkflowSynthesizer.() -> Unit)","dev.teogor.winds.api.impl.WindsLegacyOptions.workflowSynthesizer"]},{"name":"open override fun writeReleaseNotes()","description":"dev.teogor.winds.api.docs.impl.BomDocsModuleHandler.writeReleaseNotes","location":"gradle-plugin/dev.teogor.winds.api.docs.impl/-bom-docs-module-handler/write-release-notes.html","searchKeys":["writeReleaseNotes","open override fun writeReleaseNotes()","dev.teogor.winds.api.docs.impl.BomDocsModuleHandler.writeReleaseNotes"]},{"name":"open override fun writeReleaseNotes()","description":"dev.teogor.winds.api.docs.impl.StandardDocsModuleHandler.writeReleaseNotes","location":"gradle-plugin/dev.teogor.winds.api.docs.impl/-standard-docs-module-handler/write-release-notes.html","searchKeys":["writeReleaseNotes","open override fun writeReleaseNotes()","dev.teogor.winds.api.docs.impl.StandardDocsModuleHandler.writeReleaseNotes"]},{"name":"open override fun writeReleaseNotes()","description":"dev.teogor.winds.gradle.docs.BomDocsModuleHandler.writeReleaseNotes","location":"gradle-plugin/dev.teogor.winds.gradle.docs/-bom-docs-module-handler/write-release-notes.html","searchKeys":["writeReleaseNotes","open override fun writeReleaseNotes()","dev.teogor.winds.gradle.docs.BomDocsModuleHandler.writeReleaseNotes"]},{"name":"open override fun writeReleaseNotes()","description":"dev.teogor.winds.gradle.docs.StandardDocsModuleHandler.writeReleaseNotes","location":"gradle-plugin/dev.teogor.winds.gradle.docs/-standard-docs-module-handler/write-release-notes.html","searchKeys":["writeReleaseNotes","open override fun writeReleaseNotes()","dev.teogor.winds.gradle.docs.StandardDocsModuleHandler.writeReleaseNotes"]},{"name":"open override val allSpecs: MutableList<ArtifactDescriptor>","description":"dev.teogor.winds.api.impl.WindsImpl.allSpecs","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/all-specs.html","searchKeys":["allSpecs","open override val allSpecs: MutableList<ArtifactDescriptor>","dev.teogor.winds.api.impl.WindsImpl.allSpecs"]},{"name":"open override val artifactDescriptor: ArtifactDescriptor?","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.artifactDescriptor","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/artifact-descriptor.html","searchKeys":["artifactDescriptor","open override val artifactDescriptor: ArtifactDescriptor?","dev.teogor.winds.api.impl.ModuleMetadataImpl.artifactDescriptor"]},{"name":"open override val artifactId: String?","description":"dev.teogor.winds.api.impl.MavenPublishImpl.artifactId","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/artifact-id.html","searchKeys":["artifactId","open override val artifactId: String?","dev.teogor.winds.api.impl.MavenPublishImpl.artifactId"]},{"name":"open override val bomOptions: BomOptions?","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.bomOptions","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/bom-options.html","searchKeys":["bomOptions","open override val bomOptions: BomOptions?","dev.teogor.winds.api.impl.ModuleMetadataImpl.bomOptions"]},{"name":"open override val completeName: String","description":"dev.teogor.winds.api.impl.MavenPublishImpl.completeName","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/complete-name.html","searchKeys":["completeName","open override val completeName: String","dev.teogor.winds.api.impl.MavenPublishImpl.completeName"]},{"name":"open override val dependency: String","description":"dev.teogor.winds.api.impl.MavenPublishImpl.dependency","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/dependency.html","searchKeys":["dependency","open override val dependency: String","dev.teogor.winds.api.impl.MavenPublishImpl.dependency"]},{"name":"open override val dependencyBoM: String","description":"dev.teogor.winds.api.impl.MavenPublishImpl.dependencyBoM","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/dependency-bo-m.html","searchKeys":["dependencyBoM","open override val dependencyBoM: String","dev.teogor.winds.api.impl.MavenPublishImpl.dependencyBoM"]},{"name":"open override val isBoM: Boolean","description":"dev.teogor.winds.api.impl.MavenPublishImpl.isBoM","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/is-bo-m.html","searchKeys":["isBoM","open override val isBoM: Boolean","dev.teogor.winds.api.impl.MavenPublishImpl.isBoM"]},{"name":"open override val licenses: List<License>","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.licenses","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/licenses.html","searchKeys":["licenses","open override val licenses: List<License>","dev.teogor.winds.api.impl.ModuleMetadataImpl.licenses"]},{"name":"open override val persons: List<Person>","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.persons","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/persons.html","searchKeys":["persons","open override val persons: List<Person>","dev.teogor.winds.api.impl.ModuleMetadataImpl.persons"]},{"name":"open override val scm: Scm","description":"dev.teogor.winds.api.impl.MavenPublishImpl.scm","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/scm.html","searchKeys":["scm","open override val scm: Scm","dev.teogor.winds.api.impl.MavenPublishImpl.scm"]},{"name":"open override val scm: Scm?","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.scm","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/scm.html","searchKeys":["scm","open override val scm: Scm?","dev.teogor.winds.api.impl.ModuleMetadataImpl.scm"]},{"name":"open override val ticketSystem: TicketSystem?","description":"dev.teogor.winds.api.impl.MavenPublishImpl.ticketSystem","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/ticket-system.html","searchKeys":["ticketSystem","open override val ticketSystem: TicketSystem?","dev.teogor.winds.api.impl.MavenPublishImpl.ticketSystem"]},{"name":"open override val ticketSystem: TicketSystem?","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.ticketSystem","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/ticket-system.html","searchKeys":["ticketSystem","open override val ticketSystem: TicketSystem?","dev.teogor.winds.api.impl.ModuleMetadataImpl.ticketSystem"]},{"name":"open override var alertOnDependentModules: Boolean","description":"dev.teogor.winds.api.impl.DocsGeneratorImpl.alertOnDependentModules","location":"gradle-plugin/dev.teogor.winds.api.impl/-docs-generator-impl/alert-on-dependent-modules.html","searchKeys":["alertOnDependentModules","open override var alertOnDependentModules: Boolean","dev.teogor.winds.api.impl.DocsGeneratorImpl.alertOnDependentModules"]},{"name":"open override var alertOnDependentModules: Boolean","description":"dev.teogor.winds.api.impl.DocumentationBuilderImpl.alertOnDependentModules","location":"gradle-plugin/dev.teogor.winds.api.impl/-documentation-builder-impl/alert-on-dependent-modules.html","searchKeys":["alertOnDependentModules","open override var alertOnDependentModules: Boolean","dev.teogor.winds.api.impl.DocumentationBuilderImpl.alertOnDependentModules"]},{"name":"open override var apiDocsUrl: String?","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.apiDocsUrl","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/api-docs-url.html","searchKeys":["apiDocsUrl","open override var apiDocsUrl: String?","dev.teogor.winds.api.impl.ModuleMetadataImpl.apiDocsUrl"]},{"name":"open override var artifactIdElements: Int?","description":"dev.teogor.winds.api.impl.MavenPublishImpl.artifactIdElements","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/artifact-id-elements.html","searchKeys":["artifactIdElements","open override var artifactIdElements: Int?","dev.teogor.winds.api.impl.MavenPublishImpl.artifactIdElements"]},{"name":"open override var binaryCompatibility: BinaryCompatibility","description":"dev.teogor.winds.api.impl.CodebaseOptionsImpl.binaryCompatibility","location":"gradle-plugin/dev.teogor.winds.api.impl/-codebase-options-impl/binary-compatibility.html","searchKeys":["binaryCompatibility","open override var binaryCompatibility: BinaryCompatibility","dev.teogor.winds.api.impl.CodebaseOptionsImpl.binaryCompatibility"]},{"name":"open override var bomOptions: BomOptions?","description":"dev.teogor.winds.api.impl.MavenPublishImpl.bomOptions","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/bom-options.html","searchKeys":["bomOptions","open override var bomOptions: BomOptions?","dev.teogor.winds.api.impl.MavenPublishImpl.bomOptions"]},{"name":"open override var buildFeatures: BuildFeatures","description":"dev.teogor.winds.api.impl.WindsLegacyOptions.buildFeatures","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-legacy-options/build-features.html","searchKeys":["buildFeatures","open override var buildFeatures: BuildFeatures","dev.teogor.winds.api.impl.WindsLegacyOptions.buildFeatures"]},{"name":"open override var canBePublished: Boolean","description":"dev.teogor.winds.api.impl.MavenPublishImpl.canBePublished","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/can-be-published.html","searchKeys":["canBePublished","open override var canBePublished: Boolean","dev.teogor.winds.api.impl.MavenPublishImpl.canBePublished"]},{"name":"open override var cascadePublish: Boolean","description":"dev.teogor.winds.api.impl.PublishingOptionsImpl.cascadePublish","location":"gradle-plugin/dev.teogor.winds.api.impl/-publishing-options-impl/cascade-publish.html","searchKeys":["cascadePublish","open override var cascadePublish: Boolean","dev.teogor.winds.api.impl.PublishingOptionsImpl.cascadePublish"]},{"name":"open override var codebaseOptions: CodebaseOptions","description":"dev.teogor.winds.api.impl.WindsImpl.codebaseOptions","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/codebase-options.html","searchKeys":["codebaseOptions","open override var codebaseOptions: CodebaseOptions","dev.teogor.winds.api.impl.WindsImpl.codebaseOptions"]},{"name":"open override var contributors: List<Contributor>?","description":"dev.teogor.winds.api.impl.MavenPublishImpl.contributors","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/contributors.html","searchKeys":["contributors","open override var contributors: List<Contributor>?","dev.teogor.winds.api.impl.MavenPublishImpl.contributors"]},{"name":"open override var createApiReference: Boolean","description":"dev.teogor.winds.api.impl.DocumentationBuilderImpl.createApiReference","location":"gradle-plugin/dev.teogor.winds.api.impl/-documentation-builder-impl/create-api-reference.html","searchKeys":["createApiReference","open override var createApiReference: Boolean","dev.teogor.winds.api.impl.DocumentationBuilderImpl.createApiReference"]},{"name":"open override var dependencyGatheringType: DependencyType","description":"dev.teogor.winds.api.impl.DocsGeneratorImpl.dependencyGatheringType","location":"gradle-plugin/dev.teogor.winds.api.impl/-docs-generator-impl/dependency-gathering-type.html","searchKeys":["dependencyGatheringType","open override var dependencyGatheringType: DependencyType","dev.teogor.winds.api.impl.DocsGeneratorImpl.dependencyGatheringType"]},{"name":"open override var dependencyGatheringType: DependencyType","description":"dev.teogor.winds.api.impl.DocumentationBuilderImpl.dependencyGatheringType","location":"gradle-plugin/dev.teogor.winds.api.impl/-documentation-builder-impl/dependency-gathering-type.html","searchKeys":["dependencyGatheringType","open override var dependencyGatheringType: DependencyType","dev.teogor.winds.api.impl.DocumentationBuilderImpl.dependencyGatheringType"]},{"name":"open override var description: String?","description":"dev.teogor.winds.api.impl.MavenPublishImpl.description","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/description.html","searchKeys":["description","open override var description: String?","dev.teogor.winds.api.impl.MavenPublishImpl.description"]},{"name":"open override var description: String?","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.description","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/description.html","searchKeys":["description","open override var description: String?","dev.teogor.winds.api.impl.ModuleMetadataImpl.description"]},{"name":"open override var developers: List<Developer>?","description":"dev.teogor.winds.api.impl.MavenPublishImpl.developers","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/developers.html","searchKeys":["developers","open override var developers: List<Developer>?","dev.teogor.winds.api.impl.MavenPublishImpl.developers"]},{"name":"open override var displayName: String?","description":"dev.teogor.winds.api.impl.MavenPublishImpl.displayName","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/display-name.html","searchKeys":["displayName","open override var displayName: String?","dev.teogor.winds.api.impl.MavenPublishImpl.displayName"]},{"name":"open override var docsGenerator: Boolean","description":"dev.teogor.winds.api.impl.BuildFeaturesImpl.docsGenerator","location":"gradle-plugin/dev.teogor.winds.api.impl/-build-features-impl/docs-generator.html","searchKeys":["docsGenerator","open override var docsGenerator: Boolean","dev.teogor.winds.api.impl.BuildFeaturesImpl.docsGenerator"]},{"name":"open override var docsGenerator: Boolean","description":"dev.teogor.winds.api.impl.WindsFeaturesImpl.docsGenerator","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-features-impl/docs-generator.html","searchKeys":["docsGenerator","open override var docsGenerator: Boolean","dev.teogor.winds.api.impl.WindsFeaturesImpl.docsGenerator"]},{"name":"open override var docsGenerator: DocsGenerator","description":"dev.teogor.winds.api.impl.WindsImpl.docsGenerator","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/docs-generator.html","searchKeys":["docsGenerator","open override var docsGenerator: DocsGenerator","dev.teogor.winds.api.impl.WindsImpl.docsGenerator"]},{"name":"open override var docsGenerator: DocsGenerator","description":"dev.teogor.winds.api.impl.WindsLegacyOptions.docsGenerator","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-legacy-options/docs-generator.html","searchKeys":["docsGenerator","open override var docsGenerator: DocsGenerator","dev.teogor.winds.api.impl.WindsLegacyOptions.docsGenerator"]},{"name":"open override var documentationBuilder: DocumentationBuilder","description":"dev.teogor.winds.api.impl.WindsImpl.documentationBuilder","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/documentation-builder.html","searchKeys":["documentationBuilder","open override var documentationBuilder: DocumentationBuilder","dev.teogor.winds.api.impl.WindsImpl.documentationBuilder"]},{"name":"open override var dokka: DokkaOptions","description":"dev.teogor.winds.api.impl.CodebaseOptionsImpl.dokka","location":"gradle-plugin/dev.teogor.winds.api.impl/-codebase-options-impl/dokka.html","searchKeys":["dokka","open override var dokka: DokkaOptions","dev.teogor.winds.api.impl.CodebaseOptionsImpl.dokka"]},{"name":"open override var enablePublicationSigning: Boolean","description":"dev.teogor.winds.api.impl.PublishingOptionsImpl.enablePublicationSigning","location":"gradle-plugin/dev.teogor.winds.api.impl/-publishing-options-impl/enable-publication-signing.html","searchKeys":["enablePublicationSigning","open override var enablePublicationSigning: Boolean","dev.teogor.winds.api.impl.PublishingOptionsImpl.enablePublicationSigning"]},{"name":"open override var enforceUniqueNames: Boolean","description":"dev.teogor.winds.api.impl.MavenPublishImpl.enforceUniqueNames","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/enforce-unique-names.html","searchKeys":["enforceUniqueNames","open override var enforceUniqueNames: Boolean","dev.teogor.winds.api.impl.MavenPublishImpl.enforceUniqueNames"]},{"name":"open override var excludedModules: MutableList<String>","description":"dev.teogor.winds.api.impl.DocsGeneratorImpl.excludedModules","location":"gradle-plugin/dev.teogor.winds.api.impl/-docs-generator-impl/excluded-modules.html","searchKeys":["excludedModules","open override var excludedModules: MutableList<String>","dev.teogor.winds.api.impl.DocsGeneratorImpl.excludedModules"]},{"name":"open override var excludedModules: MutableList<String>","description":"dev.teogor.winds.api.impl.WorkflowSynthesizerImpl.excludedModules","location":"gradle-plugin/dev.teogor.winds.api.impl/-workflow-synthesizer-impl/excluded-modules.html","searchKeys":["excludedModules","open override var excludedModules: MutableList<String>","dev.teogor.winds.api.impl.WorkflowSynthesizerImpl.excludedModules"]},{"name":"open override var generateReleaseTable: Boolean","description":"dev.teogor.winds.api.impl.DocumentationBuilderImpl.generateReleaseTable","location":"gradle-plugin/dev.teogor.winds.api.impl/-documentation-builder-impl/generate-release-table.html","searchKeys":["generateReleaseTable","open override var generateReleaseTable: Boolean","dev.teogor.winds.api.impl.DocumentationBuilderImpl.generateReleaseTable"]},{"name":"open override var groupId: String?","description":"dev.teogor.winds.api.impl.MavenPublishImpl.groupId","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/group-id.html","searchKeys":["groupId","open override var groupId: String?","dev.teogor.winds.api.impl.MavenPublishImpl.groupId"]},{"name":"open override var htmlPath: String","description":"dev.teogor.winds.api.impl.DocumentationBuilderImpl.htmlPath","location":"gradle-plugin/dev.teogor.winds.api.impl/-documentation-builder-impl/html-path.html","searchKeys":["htmlPath","open override var htmlPath: String","dev.teogor.winds.api.impl.DocumentationBuilderImpl.htmlPath"]},{"name":"open override var identifier: String","description":"dev.teogor.winds.api.impl.DocsGeneratorImpl.identifier","location":"gradle-plugin/dev.teogor.winds.api.impl/-docs-generator-impl/identifier.html","searchKeys":["identifier","open override var identifier: String","dev.teogor.winds.api.impl.DocsGeneratorImpl.identifier"]},{"name":"open override var identifier: String","description":"dev.teogor.winds.api.impl.WorkflowSynthesizerImpl.identifier","location":"gradle-plugin/dev.teogor.winds.api.impl/-workflow-synthesizer-impl/identifier.html","searchKeys":["identifier","open override var identifier: String","dev.teogor.winds.api.impl.WorkflowSynthesizerImpl.identifier"]},{"name":"open override var inceptionYear: Int?","description":"dev.teogor.winds.api.impl.MavenPublishImpl.inceptionYear","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/inception-year.html","searchKeys":["inceptionYear","open override var inceptionYear: Int?","dev.teogor.winds.api.impl.MavenPublishImpl.inceptionYear"]},{"name":"open override var includeAlphaRelease: Boolean","description":"dev.teogor.winds.api.impl.DocumentationBuilderImpl.includeAlphaRelease","location":"gradle-plugin/dev.teogor.winds.api.impl/-documentation-builder-impl/include-alpha-release.html","searchKeys":["includeAlphaRelease","open override var includeAlphaRelease: Boolean","dev.teogor.winds.api.impl.DocumentationBuilderImpl.includeAlphaRelease"]},{"name":"open override var includeBetaRelease: Boolean","description":"dev.teogor.winds.api.impl.DocumentationBuilderImpl.includeBetaRelease","location":"gradle-plugin/dev.teogor.winds.api.impl/-documentation-builder-impl/include-beta-release.html","searchKeys":["includeBetaRelease","open override var includeBetaRelease: Boolean","dev.teogor.winds.api.impl.DocumentationBuilderImpl.includeBetaRelease"]},{"name":"open override var includeReleaseCandidate: Boolean","description":"dev.teogor.winds.api.impl.DocumentationBuilderImpl.includeReleaseCandidate","location":"gradle-plugin/dev.teogor.winds.api.impl/-documentation-builder-impl/include-release-candidate.html","searchKeys":["includeReleaseCandidate","open override var includeReleaseCandidate: Boolean","dev.teogor.winds.api.impl.DocumentationBuilderImpl.includeReleaseCandidate"]},{"name":"open override var isBom: Boolean","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.isBom","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/is-bom.html","searchKeys":["isBom","open override var isBom: Boolean","dev.teogor.winds.api.impl.ModuleMetadataImpl.isBom"]},{"name":"open override var licenses: List<LicenseType>?","description":"dev.teogor.winds.api.impl.MavenPublishImpl.licenses","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/licenses.html","searchKeys":["licenses","open override var licenses: List<LicenseType>?","dev.teogor.winds.api.impl.MavenPublishImpl.licenses"]},{"name":"open override var mavenPublish: Boolean","description":"dev.teogor.winds.api.impl.BuildFeaturesImpl.mavenPublish","location":"gradle-plugin/dev.teogor.winds.api.impl/-build-features-impl/maven-publish.html","searchKeys":["mavenPublish","open override var mavenPublish: Boolean","dev.teogor.winds.api.impl.BuildFeaturesImpl.mavenPublish"]},{"name":"open override var mavenPublish: MavenPublish","description":"dev.teogor.winds.api.impl.WindsLegacyOptions.mavenPublish","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-legacy-options/maven-publish.html","searchKeys":["mavenPublish","open override var mavenPublish: MavenPublish","dev.teogor.winds.api.impl.WindsLegacyOptions.mavenPublish"]},{"name":"open override var mavenPublishing: Boolean","description":"dev.teogor.winds.api.impl.WindsFeaturesImpl.mavenPublishing","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-features-impl/maven-publishing.html","searchKeys":["mavenPublishing","open override var mavenPublishing: Boolean","dev.teogor.winds.api.impl.WindsFeaturesImpl.mavenPublishing"]},{"name":"open override var mkdocsEnabled: Boolean","description":"dev.teogor.winds.api.impl.DocsGeneratorImpl.mkdocsEnabled","location":"gradle-plugin/dev.teogor.winds.api.impl/-docs-generator-impl/mkdocs-enabled.html","searchKeys":["mkdocsEnabled","open override var mkdocsEnabled: Boolean","dev.teogor.winds.api.impl.DocsGeneratorImpl.mkdocsEnabled"]},{"name":"open override var mkdocsEnabled: Boolean","description":"dev.teogor.winds.api.impl.DocumentationBuilderImpl.mkdocsEnabled","location":"gradle-plugin/dev.teogor.winds.api.impl/-documentation-builder-impl/mkdocs-enabled.html","searchKeys":["mkdocsEnabled","open override var mkdocsEnabled: Boolean","dev.teogor.winds.api.impl.DocumentationBuilderImpl.mkdocsEnabled"]},{"name":"open override var moduleMetadata: ModuleMetadata","description":"dev.teogor.winds.api.impl.WindsImpl.moduleMetadata","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/module-metadata.html","searchKeys":["moduleMetadata","open override var moduleMetadata: ModuleMetadata","dev.teogor.winds.api.impl.WindsImpl.moduleMetadata"]},{"name":"open override var name: String","description":"dev.teogor.winds.api.impl.DocsGeneratorImpl.name","location":"gradle-plugin/dev.teogor.winds.api.impl/-docs-generator-impl/name.html","searchKeys":["name","open override var name: String","dev.teogor.winds.api.impl.DocsGeneratorImpl.name"]},{"name":"open override var name: String","description":"dev.teogor.winds.api.impl.WorkflowSynthesizerImpl.name","location":"gradle-plugin/dev.teogor.winds.api.impl/-workflow-synthesizer-impl/name.html","searchKeys":["name","open override var name: String","dev.teogor.winds.api.impl.WorkflowSynthesizerImpl.name"]},{"name":"open override var name: String?","description":"dev.teogor.winds.api.impl.MavenPublishImpl.name","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/name.html","searchKeys":["name","open override var name: String?","dev.teogor.winds.api.impl.MavenPublishImpl.name"]},{"name":"open override var name: String?","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.name","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/name.html","searchKeys":["name","open override var name: String?","dev.teogor.winds.api.impl.ModuleMetadataImpl.name"]},{"name":"open override var optInForVanniktechPlugin: Boolean","description":"dev.teogor.winds.api.impl.PublishingOptionsImpl.optInForVanniktechPlugin","location":"gradle-plugin/dev.teogor.winds.api.impl/-publishing-options-impl/opt-in-for-vanniktech-plugin.html","searchKeys":["optInForVanniktechPlugin","open override var optInForVanniktechPlugin: Boolean","dev.teogor.winds.api.impl.PublishingOptionsImpl.optInForVanniktechPlugin"]},{"name":"open override var publish: Boolean","description":"dev.teogor.winds.api.impl.PublishingOptionsImpl.publish","location":"gradle-plugin/dev.teogor.winds.api.impl/-publishing-options-impl/publish.html","searchKeys":["publish","open override var publish: Boolean","dev.teogor.winds.api.impl.PublishingOptionsImpl.publish"]},{"name":"open override var publishingOptions: PublishingOptions","description":"dev.teogor.winds.api.impl.WindsImpl.publishingOptions","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/publishing-options.html","searchKeys":["publishingOptions","open override var publishingOptions: PublishingOptions","dev.teogor.winds.api.impl.WindsImpl.publishingOptions"]},{"name":"open override var scmConnection: String?","description":"dev.teogor.winds.api.impl.MavenPublishImpl.scmConnection","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/scm-connection.html","searchKeys":["scmConnection","open override var scmConnection: String?","dev.teogor.winds.api.impl.MavenPublishImpl.scmConnection"]},{"name":"open override var scmDeveloperConnection: String?","description":"dev.teogor.winds.api.impl.MavenPublishImpl.scmDeveloperConnection","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/scm-developer-connection.html","searchKeys":["scmDeveloperConnection","open override var scmDeveloperConnection: String?","dev.teogor.winds.api.impl.MavenPublishImpl.scmDeveloperConnection"]},{"name":"open override var scmUrl: String?","description":"dev.teogor.winds.api.impl.MavenPublishImpl.scmUrl","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/scm-url.html","searchKeys":["scmUrl","open override var scmUrl: String?","dev.teogor.winds.api.impl.MavenPublishImpl.scmUrl"]},{"name":"open override var sonatypeHost: SonatypeHost","description":"dev.teogor.winds.api.impl.PublishingOptionsImpl.sonatypeHost","location":"gradle-plugin/dev.teogor.winds.api.impl/-publishing-options-impl/sonatype-host.html","searchKeys":["sonatypeHost","open override var sonatypeHost: SonatypeHost","dev.teogor.winds.api.impl.PublishingOptionsImpl.sonatypeHost"]},{"name":"open override var spotless: SpotlessOptions","description":"dev.teogor.winds.api.impl.CodebaseOptionsImpl.spotless","location":"gradle-plugin/dev.teogor.winds.api.impl/-codebase-options-impl/spotless.html","searchKeys":["spotless","open override var spotless: SpotlessOptions","dev.teogor.winds.api.impl.CodebaseOptionsImpl.spotless"]},{"name":"open override var task: DefaultTask?","description":"dev.teogor.winds.api.impl.DocsGeneratorImpl.task","location":"gradle-plugin/dev.teogor.winds.api.impl/-docs-generator-impl/task.html","searchKeys":["task","open override var task: DefaultTask?","dev.teogor.winds.api.impl.DocsGeneratorImpl.task"]},{"name":"open override var task: DefaultTask?","description":"dev.teogor.winds.api.impl.WorkflowSynthesizerImpl.task","location":"gradle-plugin/dev.teogor.winds.api.impl/-workflow-synthesizer-impl/task.html","searchKeys":["task","open override var task: DefaultTask?","dev.teogor.winds.api.impl.WorkflowSynthesizerImpl.task"]},{"name":"open override var url: String?","description":"dev.teogor.winds.api.impl.MavenPublishImpl.url","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/url.html","searchKeys":["url","open override var url: String?","dev.teogor.winds.api.impl.MavenPublishImpl.url"]},{"name":"open override var version: Version?","description":"dev.teogor.winds.api.impl.MavenPublishImpl.version","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/version.html","searchKeys":["version","open override var version: Version?","dev.teogor.winds.api.impl.MavenPublishImpl.version"]},{"name":"open override var websiteUrl: String?","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.websiteUrl","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/website-url.html","searchKeys":["websiteUrl","open override var websiteUrl: String?","dev.teogor.winds.api.impl.ModuleMetadataImpl.websiteUrl"]},{"name":"open override var windsFeatures: WindsFeatures","description":"dev.teogor.winds.api.impl.WindsImpl.windsFeatures","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/winds-features.html","searchKeys":["windsFeatures","open override var windsFeatures: WindsFeatures","dev.teogor.winds.api.impl.WindsImpl.windsFeatures"]},{"name":"open override var workflowSynthesizer: Boolean","description":"dev.teogor.winds.api.impl.BuildFeaturesImpl.workflowSynthesizer","location":"gradle-plugin/dev.teogor.winds.api.impl/-build-features-impl/workflow-synthesizer.html","searchKeys":["workflowSynthesizer","open override var workflowSynthesizer: Boolean","dev.teogor.winds.api.impl.BuildFeaturesImpl.workflowSynthesizer"]},{"name":"open override var workflowSynthesizer: Boolean","description":"dev.teogor.winds.api.impl.WindsFeaturesImpl.workflowSynthesizer","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-features-impl/workflow-synthesizer.html","searchKeys":["workflowSynthesizer","open override var workflowSynthesizer: Boolean","dev.teogor.winds.api.impl.WindsFeaturesImpl.workflowSynthesizer"]},{"name":"open override var workflowSynthesizer: WorkflowSynthesizer","description":"dev.teogor.winds.api.impl.WindsImpl.workflowSynthesizer","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/workflow-synthesizer.html","searchKeys":["workflowSynthesizer","open override var workflowSynthesizer: WorkflowSynthesizer","dev.teogor.winds.api.impl.WindsImpl.workflowSynthesizer"]},{"name":"open override var workflowSynthesizer: WorkflowSynthesizer","description":"dev.teogor.winds.api.impl.WindsLegacyOptions.workflowSynthesizer","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-legacy-options/workflow-synthesizer.html","searchKeys":["workflowSynthesizer","open override var workflowSynthesizer: WorkflowSynthesizer","dev.teogor.winds.api.impl.WindsLegacyOptions.workflowSynthesizer"]},{"name":"open override var yearCreated: Int","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.yearCreated","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/year-created.html","searchKeys":["yearCreated","open override var yearCreated: Int","dev.teogor.winds.api.impl.ModuleMetadataImpl.yearCreated"]},{"name":"val collectWindsExtensionsTaskName: String","description":"dev.teogor.winds.gradle.tasks.impl.collectWindsExtensionsTaskName","location":"gradle-plugin/dev.teogor.winds.gradle.tasks.impl/collect-winds-extensions-task-name.html","searchKeys":["collectWindsExtensionsTaskName","val collectWindsExtensionsTaskName: String","dev.teogor.winds.gradle.tasks.impl.collectWindsExtensionsTaskName"]},{"name":"val implementationBomMarkdownContent: String","description":"dev.teogor.winds.codegen.implementationBomMarkdownContent","location":"gradle-plugin/dev.teogor.winds.codegen/implementation-bom-markdown-content.html","searchKeys":["implementationBomMarkdownContent","val implementationBomMarkdownContent: String","dev.teogor.winds.codegen.implementationBomMarkdownContent"]},{"name":"val implementationStandardMarkdownContent: String","description":"dev.teogor.winds.codegen.implementationStandardMarkdownContent","location":"gradle-plugin/dev.teogor.winds.codegen/implementation-standard-markdown-content.html","searchKeys":["implementationStandardMarkdownContent","val implementationStandardMarkdownContent: String","dev.teogor.winds.codegen.implementationStandardMarkdownContent"]},{"name":"val mavenPublishOptions: MutableList<MavenPublish>","description":"dev.teogor.winds.api.impl.MavenPublishImpl.mavenPublishOptions","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/maven-publish-options.html","searchKeys":["mavenPublishOptions","val mavenPublishOptions: MutableList<MavenPublish>","dev.teogor.winds.api.impl.MavenPublishImpl.mavenPublishOptions"]},{"name":"val project: Project","description":"dev.teogor.winds.api.impl.WindsImpl.project","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/project.html","searchKeys":["project","val project: Project","dev.teogor.winds.api.impl.WindsImpl.project"]},{"name":"val project: Project","description":"dev.teogor.winds.api.impl.WindsLegacyOptions.project","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-legacy-options/project.html","searchKeys":["project","val project: Project","dev.teogor.winds.api.impl.WindsLegacyOptions.project"]},{"name":"val releaseChangelogMarkdownContent: String","description":"dev.teogor.winds.codegen.releaseChangelogMarkdownContent","location":"gradle-plugin/dev.teogor.winds.codegen/release-changelog-markdown-content.html","searchKeys":["releaseChangelogMarkdownContent","val releaseChangelogMarkdownContent: String","dev.teogor.winds.codegen.releaseChangelogMarkdownContent"]},{"name":"var buildDocsDir: File","description":"dev.teogor.winds.gradle.ReleaseNotesTask.buildDocsDir","location":"gradle-plugin/dev.teogor.winds.gradle/-release-notes-task/build-docs-dir.html","searchKeys":["buildDocsDir","var buildDocsDir: File","dev.teogor.winds.gradle.ReleaseNotesTask.buildDocsDir"]},{"name":"var buildOutputDir: File","description":"dev.teogor.winds.gradle.ReleaseNotesTask.buildOutputDir","location":"gradle-plugin/dev.teogor.winds.gradle/-release-notes-task/build-output-dir.html","searchKeys":["buildOutputDir","var buildOutputDir: File","dev.teogor.winds.gradle.ReleaseNotesTask.buildOutputDir"]},{"name":"var buildReleasesDir: File","description":"dev.teogor.winds.gradle.ReleaseNotesTask.buildReleasesDir","location":"gradle-plugin/dev.teogor.winds.gradle/-release-notes-task/build-releases-dir.html","searchKeys":["buildReleasesDir","var buildReleasesDir: File","dev.teogor.winds.gradle.ReleaseNotesTask.buildReleasesDir"]},{"name":"var buildTrainingDir: File","description":"dev.teogor.winds.gradle.ReleaseNotesTask.buildTrainingDir","location":"gradle-plugin/dev.teogor.winds.gradle/-release-notes-task/build-training-dir.html","searchKeys":["buildTrainingDir","var buildTrainingDir: File","dev.teogor.winds.gradle.ReleaseNotesTask.buildTrainingDir"]},{"name":"var configured: Boolean","description":"dev.teogor.winds.api.impl.MavenPublishImpl.configured","location":"gradle-plugin/dev.teogor.winds.api.impl/-maven-publish-impl/configured.html","searchKeys":["configured","var configured: Boolean","dev.teogor.winds.api.impl.MavenPublishImpl.configured"]},{"name":"var outputDir: File","description":"dev.teogor.winds.gradle.ReleaseNotesTask.outputDir","location":"gradle-plugin/dev.teogor.winds.gradle/-release-notes-task/output-dir.html","searchKeys":["outputDir","var outputDir: File","dev.teogor.winds.gradle.ReleaseNotesTask.outputDir"]},{"name":"ALL","description":"dev.teogor.winds.api.model.DependencyType.ALL","location":"api/dev.teogor.winds.api.model/-dependency-type/-a-l-l/index.html","searchKeys":["ALL","ALL","dev.teogor.winds.api.model.DependencyType.ALL"]},{"name":"APACHE_2_0","description":"dev.teogor.winds.api.model.LicenseType.APACHE_2_0","location":"api/dev.teogor.winds.api.model/-license-type/-a-p-a-c-h-e_2_0/index.html","searchKeys":["APACHE_2_0","APACHE_2_0","dev.teogor.winds.api.model.LicenseType.APACHE_2_0"]},{"name":"API_VALIDATOR","description":"dev.teogor.winds.api.model.WindsFeature.API_VALIDATOR","location":"api/dev.teogor.winds.api.model/-winds-feature/-a-p-i_-v-a-l-i-d-a-t-o-r/index.html","searchKeys":["API_VALIDATOR","API_VALIDATOR","dev.teogor.winds.api.model.WindsFeature.API_VALIDATOR"]},{"name":"Alpha","description":"dev.teogor.winds.api.ReleaseStatus.Alpha","location":"api/dev.teogor.winds.api/-release-status/-alpha/index.html","searchKeys":["Alpha","Alpha","dev.teogor.winds.api.ReleaseStatus.Alpha"]},{"name":"BSD_3_CLAUSE","description":"dev.teogor.winds.api.model.LicenseType.BSD_3_CLAUSE","location":"api/dev.teogor.winds.api.model/-license-type/-b-s-d_3_-c-l-a-u-s-e/index.html","searchKeys":["BSD_3_CLAUSE","BSD_3_CLAUSE","dev.teogor.winds.api.model.LicenseType.BSD_3_CLAUSE"]},{"name":"Beta","description":"dev.teogor.winds.api.ReleaseStatus.Beta","location":"api/dev.teogor.winds.api/-release-status/-beta/index.html","searchKeys":["Beta","Beta","dev.teogor.winds.api.ReleaseStatus.Beta"]},{"name":"DOCS_GENERATOR","description":"dev.teogor.winds.api.model.WindsFeature.DOCS_GENERATOR","location":"api/dev.teogor.winds.api.model/-winds-feature/-d-o-c-s_-g-e-n-e-r-a-t-o-r/index.html","searchKeys":["DOCS_GENERATOR","DOCS_GENERATOR","dev.teogor.winds.api.model.WindsFeature.DOCS_GENERATOR"]},{"name":"DOKKA","description":"dev.teogor.winds.api.model.WindsFeature.DOKKA","location":"api/dev.teogor.winds.api.model/-winds-feature/-d-o-k-k-a/index.html","searchKeys":["DOKKA","DOKKA","dev.teogor.winds.api.model.WindsFeature.DOKKA"]},{"name":"Deprecated","description":"dev.teogor.winds.api.ReleaseStatus.Deprecated","location":"api/dev.teogor.winds.api/-release-status/-deprecated/index.html","searchKeys":["Deprecated","Deprecated","dev.teogor.winds.api.ReleaseStatus.Deprecated"]},{"name":"FULL","description":"dev.teogor.winds.api.ArtifactIdFormat.FULL","location":"api/dev.teogor.winds.api/-artifact-id-format/-f-u-l-l/index.html","searchKeys":["FULL","FULL","dev.teogor.winds.api.ArtifactIdFormat.FULL"]},{"name":"FULL","description":"dev.teogor.winds.api.NameFormat.FULL","location":"api/dev.teogor.winds.api/-name-format/-f-u-l-l/index.html","searchKeys":["FULL","FULL","dev.teogor.winds.api.NameFormat.FULL"]},{"name":"GPL_3_0","description":"dev.teogor.winds.api.model.LicenseType.GPL_3_0","location":"api/dev.teogor.winds.api.model/-license-type/-g-p-l_3_0/index.html","searchKeys":["GPL_3_0","GPL_3_0","dev.teogor.winds.api.model.LicenseType.GPL_3_0"]},{"name":"GROUP_MODULE_NAME","description":"dev.teogor.winds.api.ArtifactIdFormat.GROUP_MODULE_NAME","location":"api/dev.teogor.winds.api/-artifact-id-format/-g-r-o-u-p_-m-o-d-u-l-e_-n-a-m-e/index.html","searchKeys":["GROUP_MODULE_NAME","GROUP_MODULE_NAME","dev.teogor.winds.api.ArtifactIdFormat.GROUP_MODULE_NAME"]},{"name":"GROUP_MODULE_NAME","description":"dev.teogor.winds.api.NameFormat.GROUP_MODULE_NAME","location":"api/dev.teogor.winds.api/-name-format/-g-r-o-u-p_-m-o-d-u-l-e_-n-a-m-e/index.html","searchKeys":["GROUP_MODULE_NAME","GROUP_MODULE_NAME","dev.teogor.winds.api.NameFormat.GROUP_MODULE_NAME"]},{"name":"LOCAL","description":"dev.teogor.winds.api.model.DependencyType.LOCAL","location":"api/dev.teogor.winds.api.model/-dependency-type/-l-o-c-a-l/index.html","searchKeys":["LOCAL","LOCAL","dev.teogor.winds.api.model.DependencyType.LOCAL"]},{"name":"MAVEN_PUBLISH","description":"dev.teogor.winds.api.model.WindsFeature.MAVEN_PUBLISH","location":"api/dev.teogor.winds.api.model/-winds-feature/-m-a-v-e-n_-p-u-b-l-i-s-h/index.html","searchKeys":["MAVEN_PUBLISH","MAVEN_PUBLISH","dev.teogor.winds.api.model.WindsFeature.MAVEN_PUBLISH"]},{"name":"MIT","description":"dev.teogor.winds.api.model.LicenseType.MIT","location":"api/dev.teogor.winds.api.model/-license-type/-m-i-t/index.html","searchKeys":["MIT","MIT","dev.teogor.winds.api.model.LicenseType.MIT"]},{"name":"MODULE_NAME_ONLY","description":"dev.teogor.winds.api.ArtifactIdFormat.MODULE_NAME_ONLY","location":"api/dev.teogor.winds.api/-artifact-id-format/-m-o-d-u-l-e_-n-a-m-e_-o-n-l-y/index.html","searchKeys":["MODULE_NAME_ONLY","MODULE_NAME_ONLY","dev.teogor.winds.api.ArtifactIdFormat.MODULE_NAME_ONLY"]},{"name":"MODULE_NAME_ONLY","description":"dev.teogor.winds.api.NameFormat.MODULE_NAME_ONLY","location":"api/dev.teogor.winds.api/-name-format/-m-o-d-u-l-e_-n-a-m-e_-o-n-l-y/index.html","searchKeys":["MODULE_NAME_ONLY","MODULE_NAME_ONLY","dev.teogor.winds.api.NameFormat.MODULE_NAME_ONLY"]},{"name":"MPL_2_0","description":"dev.teogor.winds.api.model.LicenseType.MPL_2_0","location":"api/dev.teogor.winds.api.model/-license-type/-m-p-l_2_0/index.html","searchKeys":["MPL_2_0","MPL_2_0","dev.teogor.winds.api.model.LicenseType.MPL_2_0"]},{"name":"NAME_ONLY","description":"dev.teogor.winds.api.ArtifactIdFormat.NAME_ONLY","location":"api/dev.teogor.winds.api/-artifact-id-format/-n-a-m-e_-o-n-l-y/index.html","searchKeys":["NAME_ONLY","NAME_ONLY","dev.teogor.winds.api.ArtifactIdFormat.NAME_ONLY"]},{"name":"NAME_ONLY","description":"dev.teogor.winds.api.NameFormat.NAME_ONLY","location":"api/dev.teogor.winds.api/-name-format/-n-a-m-e_-o-n-l-y/index.html","searchKeys":["NAME_ONLY","NAME_ONLY","dev.teogor.winds.api.NameFormat.NAME_ONLY"]},{"name":"NONE","description":"dev.teogor.winds.api.model.DependencyType.NONE","location":"api/dev.teogor.winds.api.model/-dependency-type/-n-o-n-e/index.html","searchKeys":["NONE","NONE","dev.teogor.winds.api.model.DependencyType.NONE"]},{"name":"ReleaseCandidate","description":"dev.teogor.winds.api.ReleaseStatus.ReleaseCandidate","location":"api/dev.teogor.winds.api/-release-status/-release-candidate/index.html","searchKeys":["ReleaseCandidate","ReleaseCandidate","dev.teogor.winds.api.ReleaseStatus.ReleaseCandidate"]},{"name":"SPOTLESS","description":"dev.teogor.winds.api.model.WindsFeature.SPOTLESS","location":"api/dev.teogor.winds.api.model/-winds-feature/-s-p-o-t-l-e-s-s/index.html","searchKeys":["SPOTLESS","SPOTLESS","dev.teogor.winds.api.model.WindsFeature.SPOTLESS"]},{"name":"Stable","description":"dev.teogor.winds.api.ReleaseStatus.Stable","location":"api/dev.teogor.winds.api/-release-status/-stable/index.html","searchKeys":["Stable","Stable","dev.teogor.winds.api.ReleaseStatus.Stable"]},{"name":"WORKFLOW_SYNTHESIZER","description":"dev.teogor.winds.api.model.WindsFeature.WORKFLOW_SYNTHESIZER","location":"api/dev.teogor.winds.api.model/-winds-feature/-w-o-r-k-f-l-o-w_-s-y-n-t-h-e-s-i-z-e-r/index.html","searchKeys":["WORKFLOW_SYNTHESIZER","WORKFLOW_SYNTHESIZER","dev.teogor.winds.api.model.WindsFeature.WORKFLOW_SYNTHESIZER"]},{"name":"abstract class BaseGeneratorTask(description: String) : DefaultTask","description":"dev.teogor.winds.gradle.tasks.BaseGeneratorTask","location":"api/dev.teogor.winds.gradle.tasks/-base-generator-task/index.html","searchKeys":["BaseGeneratorTask","abstract class BaseGeneratorTask(description: String) : DefaultTask","dev.teogor.winds.gradle.tasks.BaseGeneratorTask"]},{"name":"abstract class DocsModuleHandler(projectDir: File, docsGenerator: DocsGenerator)","description":"dev.teogor.winds.api.docs.DocsModuleHandler","location":"api/dev.teogor.winds.api.docs/-docs-module-handler/index.html","searchKeys":["DocsModuleHandler","abstract class DocsModuleHandler(projectDir: File, docsGenerator: DocsGenerator)","dev.teogor.winds.api.docs.DocsModuleHandler"]},{"name":"abstract class VersionedDependencyRecord(val version: Version, val date: Long)","description":"dev.teogor.winds.api.model.VersionedDependencyRecord","location":"api/dev.teogor.winds.api.model/-versioned-dependency-record/index.html","searchKeys":["VersionedDependencyRecord","abstract class VersionedDependencyRecord(val version: Version, val date: Long)","dev.teogor.winds.api.model.VersionedDependencyRecord"]},{"name":"abstract fun <T : Person> person(type: KClass<T>, block: T.() -> Unit)","description":"dev.teogor.winds.api.ModuleMetadata.person","location":"api/dev.teogor.winds.api/-module-metadata/person.html","searchKeys":["person","abstract fun <T : Person> person(type: KClass<T>, block: T.() -> Unit)","dev.teogor.winds.api.ModuleMetadata.person"]},{"name":"abstract fun <T : Scm> scm(type: KClass<T>, block: T.() -> Unit)","description":"dev.teogor.winds.api.ModuleMetadata.scm","location":"api/dev.teogor.winds.api/-module-metadata/scm.html","searchKeys":["scm","abstract fun <T : Scm> scm(type: KClass<T>, block: T.() -> Unit)","dev.teogor.winds.api.ModuleMetadata.scm"]},{"name":"abstract fun <T : TicketSystem> ticketSystem(type: KClass<T>, block: T.() -> Unit)","description":"dev.teogor.winds.api.ModuleMetadata.ticketSystem","location":"api/dev.teogor.winds.api/-module-metadata/ticket-system.html","searchKeys":["ticketSystem","abstract fun <T : TicketSystem> ticketSystem(type: KClass<T>, block: T.() -> Unit)","dev.teogor.winds.api.ModuleMetadata.ticketSystem"]},{"name":"abstract fun action()","description":"dev.teogor.winds.gradle.tasks.BaseGeneratorTask.action","location":"api/dev.teogor.winds.gradle.tasks/-base-generator-task/action.html","searchKeys":["action","abstract fun action()","dev.teogor.winds.gradle.tasks.BaseGeneratorTask.action"]},{"name":"abstract fun addContributor(contributor: Contributor)","description":"dev.teogor.winds.api.MavenPublish.addContributor","location":"api/dev.teogor.winds.api/-maven-publish/add-contributor.html","searchKeys":["addContributor","abstract fun addContributor(contributor: Contributor)","dev.teogor.winds.api.MavenPublish.addContributor"]},{"name":"abstract fun addContributor(init: ContributorImpl.() -> Unit)","description":"dev.teogor.winds.api.MavenPublish.addContributor","location":"api/dev.teogor.winds.api/-maven-publish/add-contributor.html","searchKeys":["addContributor","abstract fun addContributor(init: ContributorImpl.() -> Unit)","dev.teogor.winds.api.MavenPublish.addContributor"]},{"name":"abstract fun addContributors(vararg contributors: Contributor)","description":"dev.teogor.winds.api.MavenPublish.addContributors","location":"api/dev.teogor.winds.api/-maven-publish/add-contributors.html","searchKeys":["addContributors","abstract fun addContributors(vararg contributors: Contributor)","dev.teogor.winds.api.MavenPublish.addContributors"]},{"name":"abstract fun addDeveloper(developer: Developer)","description":"dev.teogor.winds.api.MavenPublish.addDeveloper","location":"api/dev.teogor.winds.api/-maven-publish/add-developer.html","searchKeys":["addDeveloper","abstract fun addDeveloper(developer: Developer)","dev.teogor.winds.api.MavenPublish.addDeveloper"]},{"name":"abstract fun addDeveloper(init: DeveloperImpl.() -> Unit)","description":"dev.teogor.winds.api.MavenPublish.addDeveloper","location":"api/dev.teogor.winds.api/-maven-publish/add-developer.html","searchKeys":["addDeveloper","abstract fun addDeveloper(init: DeveloperImpl.() -> Unit)","dev.teogor.winds.api.MavenPublish.addDeveloper"]},{"name":"abstract fun addDevelopers(vararg developers: Developer)","description":"dev.teogor.winds.api.MavenPublish.addDevelopers","location":"api/dev.teogor.winds.api/-maven-publish/add-developers.html","searchKeys":["addDevelopers","abstract fun addDevelopers(vararg developers: Developer)","dev.teogor.winds.api.MavenPublish.addDevelopers"]},{"name":"abstract fun addLicense(license: LicenseType)","description":"dev.teogor.winds.api.MavenPublish.addLicense","location":"api/dev.teogor.winds.api/-maven-publish/add-license.html","searchKeys":["addLicense","abstract fun addLicense(license: LicenseType)","dev.teogor.winds.api.MavenPublish.addLicense"]},{"name":"abstract fun artifactDescriptor(block: ArtifactDescriptor.() -> Unit)","description":"dev.teogor.winds.api.ModuleMetadata.artifactDescriptor","location":"api/dev.teogor.winds.api/-module-metadata/artifact-descriptor.html","searchKeys":["artifactDescriptor","abstract fun artifactDescriptor(block: ArtifactDescriptor.() -> Unit)","dev.teogor.winds.api.ModuleMetadata.artifactDescriptor"]},{"name":"abstract fun binaryCompatibility(configure: BinaryCompatibility.() -> Unit)","description":"dev.teogor.winds.api.CodebaseOptions.binaryCompatibility","location":"api/dev.teogor.winds.api/-codebase-options/binary-compatibility.html","searchKeys":["binaryCompatibility","abstract fun binaryCompatibility(configure: BinaryCompatibility.() -> Unit)","dev.teogor.winds.api.CodebaseOptions.binaryCompatibility"]},{"name":"abstract fun bomOptions(block: BomOptions.() -> Unit)","description":"dev.teogor.winds.api.ModuleMetadata.bomOptions","location":"api/dev.teogor.winds.api/-module-metadata/bom-options.html","searchKeys":["bomOptions","abstract fun bomOptions(block: BomOptions.() -> Unit)","dev.teogor.winds.api.ModuleMetadata.bomOptions"]},{"name":"abstract fun buildFeatures(action: BuildFeatures.() -> Unit)","description":"dev.teogor.winds.api.WindsLegacy.buildFeatures","location":"api/dev.teogor.winds.api/-winds-legacy/build-features.html","searchKeys":["buildFeatures","abstract fun buildFeatures(action: BuildFeatures.() -> Unit)","dev.teogor.winds.api.WindsLegacy.buildFeatures"]},{"name":"abstract fun codebaseOptions(configure: CodebaseOptions.() -> Unit)","description":"dev.teogor.winds.api.Winds.codebaseOptions","location":"api/dev.teogor.winds.api/-winds/codebase-options.html","searchKeys":["codebaseOptions","abstract fun codebaseOptions(configure: CodebaseOptions.() -> Unit)","dev.teogor.winds.api.Winds.codebaseOptions"]},{"name":"abstract fun configureProjects(includeRoot: Boolean = true, action: Project.(Winds) -> Unit)","description":"dev.teogor.winds.api.Winds.configureProjects","location":"api/dev.teogor.winds.api/-winds/configure-projects.html","searchKeys":["configureProjects","abstract fun configureProjects(includeRoot: Boolean = true, action: Project.(Winds) -> Unit)","dev.teogor.winds.api.Winds.configureProjects"]},{"name":"abstract fun copy(from: PublishingOptions): PublishingOptions","description":"dev.teogor.winds.api.PublishingOptions.copy","location":"api/dev.teogor.winds.api/-publishing-options/copy.html","searchKeys":["copy","abstract fun copy(from: PublishingOptions): PublishingOptions","dev.teogor.winds.api.PublishingOptions.copy"]},{"name":"abstract fun copy(fromObj: ModuleMetadata): ModuleMetadata","description":"dev.teogor.winds.api.ModuleMetadata.copy","location":"api/dev.teogor.winds.api/-module-metadata/copy.html","searchKeys":["copy","abstract fun copy(fromObj: ModuleMetadata): ModuleMetadata","dev.teogor.winds.api.ModuleMetadata.copy"]},{"name":"abstract fun defineBoM(init: BomOptions.() -> Unit = {})","description":"dev.teogor.winds.api.MavenPublish.defineBoM","location":"api/dev.teogor.winds.api/-maven-publish/define-bo-m.html","searchKeys":["defineBoM","abstract fun defineBoM(init: BomOptions.() -> Unit = {})","dev.teogor.winds.api.MavenPublish.defineBoM"]},{"name":"abstract fun docsGenerator(action: DocsGenerator.() -> Unit)","description":"dev.teogor.winds.api.Winds.docsGenerator","location":"api/dev.teogor.winds.api/-winds/docs-generator.html","searchKeys":["docsGenerator","abstract fun docsGenerator(action: DocsGenerator.() -> Unit)","dev.teogor.winds.api.Winds.docsGenerator"]},{"name":"abstract fun docsGenerator(action: DocsGenerator.() -> Unit)","description":"dev.teogor.winds.api.WindsLegacy.docsGenerator","location":"api/dev.teogor.winds.api/-winds-legacy/docs-generator.html","searchKeys":["docsGenerator","abstract fun docsGenerator(action: DocsGenerator.() -> Unit)","dev.teogor.winds.api.WindsLegacy.docsGenerator"]},{"name":"abstract fun documentationBuilder(configure: DocumentationBuilder.() -> Unit)","description":"dev.teogor.winds.api.Winds.documentationBuilder","location":"api/dev.teogor.winds.api/-winds/documentation-builder.html","searchKeys":["documentationBuilder","abstract fun documentationBuilder(configure: DocumentationBuilder.() -> Unit)","dev.teogor.winds.api.Winds.documentationBuilder"]},{"name":"abstract fun dokka(configure: DokkaOptions.() -> Unit)","description":"dev.teogor.winds.api.CodebaseOptions.dokka","location":"api/dev.teogor.winds.api/-codebase-options/dokka.html","searchKeys":["dokka","abstract fun dokka(configure: DokkaOptions.() -> Unit)","dev.teogor.winds.api.CodebaseOptions.dokka"]},{"name":"abstract fun excludeModules(block: () -> List<String>)","description":"dev.teogor.winds.api.DocsGenerator.excludeModules","location":"api/dev.teogor.winds.api/-docs-generator/exclude-modules.html","searchKeys":["excludeModules","abstract fun excludeModules(block: () -> List<String>)","dev.teogor.winds.api.DocsGenerator.excludeModules"]},{"name":"abstract fun excludeModules(block: () -> List<String>)","description":"dev.teogor.winds.api.WorkflowSynthesizer.excludeModules","location":"api/dev.teogor.winds.api/-workflow-synthesizer/exclude-modules.html","searchKeys":["excludeModules","abstract fun excludeModules(block: () -> List<String>)","dev.teogor.winds.api.WorkflowSynthesizer.excludeModules"]},{"name":"abstract fun issueManagement(ticketSystem: TicketSystem)","description":"dev.teogor.winds.api.MavenPublish.issueManagement","location":"api/dev.teogor.winds.api/-maven-publish/issue-management.html","searchKeys":["issueManagement","abstract fun issueManagement(ticketSystem: TicketSystem)","dev.teogor.winds.api.MavenPublish.issueManagement"]},{"name":"abstract fun licenses(block: MutableList<License>.() -> Unit)","description":"dev.teogor.winds.api.ModuleMetadata.licenses","location":"api/dev.teogor.winds.api/-module-metadata/licenses.html","searchKeys":["licenses","abstract fun licenses(block: MutableList<License>.() -> Unit)","dev.teogor.winds.api.ModuleMetadata.licenses"]},{"name":"abstract fun licenses(vararg licenses: License)","description":"dev.teogor.winds.api.ModuleMetadata.licenses","location":"api/dev.teogor.winds.api/-module-metadata/licenses.html","searchKeys":["licenses","abstract fun licenses(vararg licenses: License)","dev.teogor.winds.api.ModuleMetadata.licenses"]},{"name":"abstract fun manageDependencies()","description":"dev.teogor.winds.api.docs.DocsModuleHandler.manageDependencies","location":"api/dev.teogor.winds.api.docs/-docs-module-handler/manage-dependencies.html","searchKeys":["manageDependencies","abstract fun manageDependencies()","dev.teogor.winds.api.docs.DocsModuleHandler.manageDependencies"]},{"name":"abstract fun mavenPublish(action: MavenPublish.() -> Unit)","description":"dev.teogor.winds.api.WindsLegacy.mavenPublish","location":"api/dev.teogor.winds.api/-winds-legacy/maven-publish.html","searchKeys":["mavenPublish","abstract fun mavenPublish(action: MavenPublish.() -> Unit)","dev.teogor.winds.api.WindsLegacy.mavenPublish"]},{"name":"abstract fun moduleMetadata(action: ModuleMetadata.() -> Unit)","description":"dev.teogor.winds.api.Winds.moduleMetadata","location":"api/dev.teogor.winds.api/-winds/module-metadata.html","searchKeys":["moduleMetadata","abstract fun moduleMetadata(action: ModuleMetadata.() -> Unit)","dev.teogor.winds.api.Winds.moduleMetadata"]},{"name":"abstract fun publishingOptions(action: PublishingOptions.() -> Unit)","description":"dev.teogor.winds.api.Winds.publishingOptions","location":"api/dev.teogor.winds.api/-winds/publishing-options.html","searchKeys":["publishingOptions","abstract fun publishingOptions(action: PublishingOptions.() -> Unit)","dev.teogor.winds.api.Winds.publishingOptions"]},{"name":"abstract fun sourceControlManagement(scm: Scm)","description":"dev.teogor.winds.api.MavenPublish.sourceControlManagement","location":"api/dev.teogor.winds.api/-maven-publish/source-control-management.html","searchKeys":["sourceControlManagement","abstract fun sourceControlManagement(scm: Scm)","dev.teogor.winds.api.MavenPublish.sourceControlManagement"]},{"name":"abstract fun spotless(configure: SpotlessOptions.() -> Unit)","description":"dev.teogor.winds.api.CodebaseOptions.spotless","location":"api/dev.teogor.winds.api/-codebase-options/spotless.html","searchKeys":["spotless","abstract fun spotless(configure: SpotlessOptions.() -> Unit)","dev.teogor.winds.api.CodebaseOptions.spotless"]},{"name":"abstract fun updateMkDocs(mkDocsPath: String = \"mkdocs.yml\", section: String = \"Changelog\")","description":"dev.teogor.winds.api.docs.DocsModuleHandler.updateMkDocs","location":"api/dev.teogor.winds.api.docs/-docs-module-handler/update-mk-docs.html","searchKeys":["updateMkDocs","abstract fun updateMkDocs(mkDocsPath: String = \"mkdocs.yml\", section: String = \"Changelog\")","dev.teogor.winds.api.docs.DocsModuleHandler.updateMkDocs"]},{"name":"abstract fun windsFeatures(action: WindsFeatures.() -> Unit)","description":"dev.teogor.winds.api.Winds.windsFeatures","location":"api/dev.teogor.winds.api/-winds/winds-features.html","searchKeys":["windsFeatures","abstract fun windsFeatures(action: WindsFeatures.() -> Unit)","dev.teogor.winds.api.Winds.windsFeatures"]},{"name":"abstract fun workflowSynthesizer(action: WorkflowSynthesizer.() -> Unit)","description":"dev.teogor.winds.api.Winds.workflowSynthesizer","location":"api/dev.teogor.winds.api/-winds/workflow-synthesizer.html","searchKeys":["workflowSynthesizer","abstract fun workflowSynthesizer(action: WorkflowSynthesizer.() -> Unit)","dev.teogor.winds.api.Winds.workflowSynthesizer"]},{"name":"abstract fun workflowSynthesizer(action: WorkflowSynthesizer.() -> Unit)","description":"dev.teogor.winds.api.WindsLegacy.workflowSynthesizer","location":"api/dev.teogor.winds.api/-winds-legacy/workflow-synthesizer.html","searchKeys":["workflowSynthesizer","abstract fun workflowSynthesizer(action: WorkflowSynthesizer.() -> Unit)","dev.teogor.winds.api.WindsLegacy.workflowSynthesizer"]},{"name":"abstract fun writeReleaseNotes()","description":"dev.teogor.winds.api.docs.DocsModuleHandler.writeReleaseNotes","location":"api/dev.teogor.winds.api.docs/-docs-module-handler/write-release-notes.html","searchKeys":["writeReleaseNotes","abstract fun writeReleaseNotes()","dev.teogor.winds.api.docs.DocsModuleHandler.writeReleaseNotes"]},{"name":"abstract infix fun List<License>.register(license: License)","description":"dev.teogor.winds.api.ModuleMetadata.register","location":"api/dev.teogor.winds.api/-module-metadata/register.html","searchKeys":["register","abstract infix fun List<License>.register(license: License)","dev.teogor.winds.api.ModuleMetadata.register"]},{"name":"abstract infix fun ModuleMetadata.licensedUnder(license: License)","description":"dev.teogor.winds.api.ModuleMetadata.licensedUnder","location":"api/dev.teogor.winds.api/-module-metadata/licensed-under.html","searchKeys":["licensedUnder","abstract infix fun ModuleMetadata.licensedUnder(license: License)","dev.teogor.winds.api.ModuleMetadata.licensedUnder"]},{"name":"abstract operator fun List<License>.plusAssign(license: License)","description":"dev.teogor.winds.api.ModuleMetadata.plusAssign","location":"api/dev.teogor.winds.api/-module-metadata/plus-assign.html","searchKeys":["plusAssign","abstract operator fun List<License>.plusAssign(license: License)","dev.teogor.winds.api.ModuleMetadata.plusAssign"]},{"name":"abstract operator fun plusAssign(license: License)","description":"dev.teogor.winds.api.ModuleMetadata.plusAssign","location":"api/dev.teogor.winds.api/-module-metadata/plus-assign.html","searchKeys":["plusAssign","abstract operator fun plusAssign(license: License)","dev.teogor.winds.api.ModuleMetadata.plusAssign"]},{"name":"abstract val abbreviation: String","description":"dev.teogor.winds.api.Distribution.abbreviation","location":"api/dev.teogor.winds.api/-distribution/abbreviation.html","searchKeys":["abbreviation","abstract val abbreviation: String","dev.teogor.winds.api.Distribution.abbreviation"]},{"name":"abstract val allSpecs: MutableList<ArtifactDescriptor>","description":"dev.teogor.winds.api.Winds.allSpecs","location":"api/dev.teogor.winds.api/-winds/all-specs.html","searchKeys":["allSpecs","abstract val allSpecs: MutableList<ArtifactDescriptor>","dev.teogor.winds.api.Winds.allSpecs"]},{"name":"abstract val artifactDescriptor: ArtifactDescriptor?","description":"dev.teogor.winds.api.ModuleMetadata.artifactDescriptor","location":"api/dev.teogor.winds.api/-module-metadata/artifact-descriptor.html","searchKeys":["artifactDescriptor","abstract val artifactDescriptor: ArtifactDescriptor?","dev.teogor.winds.api.ModuleMetadata.artifactDescriptor"]},{"name":"abstract val artifactId: String?","description":"dev.teogor.winds.api.MavenPublish.artifactId","location":"api/dev.teogor.winds.api/-maven-publish/artifact-id.html","searchKeys":["artifactId","abstract val artifactId: String?","dev.teogor.winds.api.MavenPublish.artifactId"]},{"name":"abstract val binaryCompatibility: BinaryCompatibility","description":"dev.teogor.winds.api.CodebaseOptions.binaryCompatibility","location":"api/dev.teogor.winds.api/-codebase-options/binary-compatibility.html","searchKeys":["binaryCompatibility","abstract val binaryCompatibility: BinaryCompatibility","dev.teogor.winds.api.CodebaseOptions.binaryCompatibility"]},{"name":"abstract val bomOptions: BomOptions?","description":"dev.teogor.winds.api.ModuleMetadata.bomOptions","location":"api/dev.teogor.winds.api/-module-metadata/bom-options.html","searchKeys":["bomOptions","abstract val bomOptions: BomOptions?","dev.teogor.winds.api.ModuleMetadata.bomOptions"]},{"name":"abstract val comments: String?","description":"dev.teogor.winds.api.License.comments","location":"api/dev.teogor.winds.api/-license/comments.html","searchKeys":["comments","abstract val comments: String?","dev.teogor.winds.api.License.comments"]},{"name":"abstract val completeName: String","description":"dev.teogor.winds.api.MavenPublish.completeName","location":"api/dev.teogor.winds.api/-maven-publish/complete-name.html","searchKeys":["completeName","abstract val completeName: String","dev.teogor.winds.api.MavenPublish.completeName"]},{"name":"abstract val connection: String","description":"dev.teogor.winds.api.Scm.connection","location":"api/dev.teogor.winds.api/-scm/connection.html","searchKeys":["connection","abstract val connection: String","dev.teogor.winds.api.Scm.connection"]},{"name":"abstract val connection: String","description":"dev.teogor.winds.api.provider.Scm.connection","location":"api/dev.teogor.winds.api.provider/-scm/connection.html","searchKeys":["connection","abstract val connection: String","dev.teogor.winds.api.provider.Scm.connection"]},{"name":"abstract val dependency: String","description":"dev.teogor.winds.api.MavenPublish.dependency","location":"api/dev.teogor.winds.api/-maven-publish/dependency.html","searchKeys":["dependency","abstract val dependency: String","dev.teogor.winds.api.MavenPublish.dependency"]},{"name":"abstract val dependencyBoM: String","description":"dev.teogor.winds.api.MavenPublish.dependencyBoM","location":"api/dev.teogor.winds.api/-maven-publish/dependency-bo-m.html","searchKeys":["dependencyBoM","abstract val dependencyBoM: String","dev.teogor.winds.api.MavenPublish.dependencyBoM"]},{"name":"abstract val developerConnection: String","description":"dev.teogor.winds.api.Scm.developerConnection","location":"api/dev.teogor.winds.api/-scm/developer-connection.html","searchKeys":["developerConnection","abstract val developerConnection: String","dev.teogor.winds.api.Scm.developerConnection"]},{"name":"abstract val developerConnection: String","description":"dev.teogor.winds.api.provider.Scm.developerConnection","location":"api/dev.teogor.winds.api.provider/-scm/developer-connection.html","searchKeys":["developerConnection","abstract val developerConnection: String","dev.teogor.winds.api.provider.Scm.developerConnection"]},{"name":"abstract val distribution: Distribution","description":"dev.teogor.winds.api.License.distribution","location":"api/dev.teogor.winds.api/-license/distribution.html","searchKeys":["distribution","abstract val distribution: Distribution","dev.teogor.winds.api.License.distribution"]},{"name":"abstract val docs: File","description":"dev.teogor.winds.api.CodeGen.docs","location":"api/dev.teogor.winds.api/-code-gen/docs.html","searchKeys":["docs","abstract val docs: File","dev.teogor.winds.api.CodeGen.docs"]},{"name":"abstract val dokka: DokkaOptions","description":"dev.teogor.winds.api.CodebaseOptions.dokka","location":"api/dev.teogor.winds.api/-codebase-options/dokka.html","searchKeys":["dokka","abstract val dokka: DokkaOptions","dev.teogor.winds.api.CodebaseOptions.dokka"]},{"name":"abstract val email: String","description":"dev.teogor.winds.api.Person.email","location":"api/dev.teogor.winds.api/-person/email.html","searchKeys":["email","abstract val email: String","dev.teogor.winds.api.Person.email"]},{"name":"abstract val email: String","description":"dev.teogor.winds.api.model.Contributor.email","location":"api/dev.teogor.winds.api.model/-contributor/email.html","searchKeys":["email","abstract val email: String","dev.teogor.winds.api.model.Contributor.email"]},{"name":"abstract val email: String","description":"dev.teogor.winds.api.model.Developer.email","location":"api/dev.teogor.winds.api.model/-developer/email.html","searchKeys":["email","abstract val email: String","dev.teogor.winds.api.model.Developer.email"]},{"name":"abstract val excludedModules: List<String>","description":"dev.teogor.winds.api.DocsGenerator.excludedModules","location":"api/dev.teogor.winds.api/-docs-generator/excluded-modules.html","searchKeys":["excludedModules","abstract val excludedModules: List<String>","dev.teogor.winds.api.DocsGenerator.excludedModules"]},{"name":"abstract val excludedModules: List<String>","description":"dev.teogor.winds.api.WorkflowSynthesizer.excludedModules","location":"api/dev.teogor.winds.api/-workflow-synthesizer/excluded-modules.html","searchKeys":["excludedModules","abstract val excludedModules: List<String>","dev.teogor.winds.api.WorkflowSynthesizer.excludedModules"]},{"name":"abstract val id: String","description":"dev.teogor.winds.api.model.Developer.id","location":"api/dev.teogor.winds.api.model/-developer/id.html","searchKeys":["id","abstract val id: String","dev.teogor.winds.api.model.Developer.id"]},{"name":"abstract val isBoM: Boolean","description":"dev.teogor.winds.api.MavenPublish.isBoM","location":"api/dev.teogor.winds.api/-maven-publish/is-bo-m.html","searchKeys":["isBoM","abstract val isBoM: Boolean","dev.teogor.winds.api.MavenPublish.isBoM"]},{"name":"abstract val licenses: List<License>","description":"dev.teogor.winds.api.ModuleMetadata.licenses","location":"api/dev.teogor.winds.api/-module-metadata/licenses.html","searchKeys":["licenses","abstract val licenses: List<License>","dev.teogor.winds.api.ModuleMetadata.licenses"]},{"name":"abstract val name: String","description":"dev.teogor.winds.api.Distribution.name","location":"api/dev.teogor.winds.api/-distribution/name.html","searchKeys":["name","abstract val name: String","dev.teogor.winds.api.Distribution.name"]},{"name":"abstract val name: String","description":"dev.teogor.winds.api.License.name","location":"api/dev.teogor.winds.api/-license/name.html","searchKeys":["name","abstract val name: String","dev.teogor.winds.api.License.name"]},{"name":"abstract val name: String","description":"dev.teogor.winds.api.Person.name","location":"api/dev.teogor.winds.api/-person/name.html","searchKeys":["name","abstract val name: String","dev.teogor.winds.api.Person.name"]},{"name":"abstract val name: String","description":"dev.teogor.winds.api.model.Contributor.name","location":"api/dev.teogor.winds.api.model/-contributor/name.html","searchKeys":["name","abstract val name: String","dev.teogor.winds.api.model.Contributor.name"]},{"name":"abstract val name: String","description":"dev.teogor.winds.api.model.Developer.name","location":"api/dev.teogor.winds.api.model/-developer/name.html","searchKeys":["name","abstract val name: String","dev.teogor.winds.api.model.Developer.name"]},{"name":"abstract val organization: String","description":"dev.teogor.winds.api.Person.organization","location":"api/dev.teogor.winds.api/-person/organization.html","searchKeys":["organization","abstract val organization: String","dev.teogor.winds.api.Person.organization"]},{"name":"abstract val organization: String","description":"dev.teogor.winds.api.model.Contributor.organization","location":"api/dev.teogor.winds.api.model/-contributor/organization.html","searchKeys":["organization","abstract val organization: String","dev.teogor.winds.api.model.Contributor.organization"]},{"name":"abstract val organization: String","description":"dev.teogor.winds.api.model.Developer.organization","location":"api/dev.teogor.winds.api.model/-developer/organization.html","searchKeys":["organization","abstract val organization: String","dev.teogor.winds.api.model.Developer.organization"]},{"name":"abstract val organizationUrl: String","description":"dev.teogor.winds.api.Person.organizationUrl","location":"api/dev.teogor.winds.api/-person/organization-url.html","searchKeys":["organizationUrl","abstract val organizationUrl: String","dev.teogor.winds.api.Person.organizationUrl"]},{"name":"abstract val organizationUrl: String","description":"dev.teogor.winds.api.model.Contributor.organizationUrl","location":"api/dev.teogor.winds.api.model/-contributor/organization-url.html","searchKeys":["organizationUrl","abstract val organizationUrl: String","dev.teogor.winds.api.model.Contributor.organizationUrl"]},{"name":"abstract val organizationUrl: String","description":"dev.teogor.winds.api.model.Developer.organizationUrl","location":"api/dev.teogor.winds.api.model/-developer/organization-url.html","searchKeys":["organizationUrl","abstract val organizationUrl: String","dev.teogor.winds.api.model.Developer.organizationUrl"]},{"name":"abstract val owner: String","description":"dev.teogor.winds.api.Scm.owner","location":"api/dev.teogor.winds.api/-scm/owner.html","searchKeys":["owner","abstract val owner: String","dev.teogor.winds.api.Scm.owner"]},{"name":"abstract val persons: List<Person>","description":"dev.teogor.winds.api.ModuleMetadata.persons","location":"api/dev.teogor.winds.api/-module-metadata/persons.html","searchKeys":["persons","abstract val persons: List<Person>","dev.teogor.winds.api.ModuleMetadata.persons"]},{"name":"abstract val properties: Map<String, String>","description":"dev.teogor.winds.api.Person.properties","location":"api/dev.teogor.winds.api/-person/properties.html","searchKeys":["properties","abstract val properties: Map<String, String>","dev.teogor.winds.api.Person.properties"]},{"name":"abstract val properties: Map<String, String>","description":"dev.teogor.winds.api.model.Contributor.properties","location":"api/dev.teogor.winds.api.model/-contributor/properties.html","searchKeys":["properties","abstract val properties: Map<String, String>","dev.teogor.winds.api.model.Contributor.properties"]},{"name":"abstract val repository: String","description":"dev.teogor.winds.api.Scm.repository","location":"api/dev.teogor.winds.api/-scm/repository.html","searchKeys":["repository","abstract val repository: String","dev.teogor.winds.api.Scm.repository"]},{"name":"abstract val repositoryUrl: String","description":"dev.teogor.winds.api.Scm.repositoryUrl","location":"api/dev.teogor.winds.api/-scm/repository-url.html","searchKeys":["repositoryUrl","abstract val repositoryUrl: String","dev.teogor.winds.api.Scm.repositoryUrl"]},{"name":"abstract val res: File","description":"dev.teogor.winds.api.CodeGen.res","location":"api/dev.teogor.winds.api/-code-gen/res.html","searchKeys":["res","abstract val res: File","dev.teogor.winds.api.CodeGen.res"]},{"name":"abstract val roles: List<String>","description":"dev.teogor.winds.api.Person.roles","location":"api/dev.teogor.winds.api/-person/roles.html","searchKeys":["roles","abstract val roles: List<String>","dev.teogor.winds.api.Person.roles"]},{"name":"abstract val roles: List<String>","description":"dev.teogor.winds.api.model.Contributor.roles","location":"api/dev.teogor.winds.api.model/-contributor/roles.html","searchKeys":["roles","abstract val roles: List<String>","dev.teogor.winds.api.model.Contributor.roles"]},{"name":"abstract val roles: List<String>","description":"dev.teogor.winds.api.model.Developer.roles","location":"api/dev.teogor.winds.api.model/-developer/roles.html","searchKeys":["roles","abstract val roles: List<String>","dev.teogor.winds.api.model.Developer.roles"]},{"name":"abstract val scm: Scm","description":"dev.teogor.winds.api.MavenPublish.scm","location":"api/dev.teogor.winds.api/-maven-publish/scm.html","searchKeys":["scm","abstract val scm: Scm","dev.teogor.winds.api.MavenPublish.scm"]},{"name":"abstract val scm: Scm?","description":"dev.teogor.winds.api.ModuleMetadata.scm","location":"api/dev.teogor.winds.api/-module-metadata/scm.html","searchKeys":["scm","abstract val scm: Scm?","dev.teogor.winds.api.ModuleMetadata.scm"]},{"name":"abstract val spotless: SpotlessOptions","description":"dev.teogor.winds.api.CodebaseOptions.spotless","location":"api/dev.teogor.winds.api/-codebase-options/spotless.html","searchKeys":["spotless","abstract val spotless: SpotlessOptions","dev.teogor.winds.api.CodebaseOptions.spotless"]},{"name":"abstract val system: String","description":"dev.teogor.winds.api.TicketSystem.system","location":"api/dev.teogor.winds.api/-ticket-system/system.html","searchKeys":["system","abstract val system: String","dev.teogor.winds.api.TicketSystem.system"]},{"name":"abstract val ticketSystem: TicketSystem?","description":"dev.teogor.winds.api.MavenPublish.ticketSystem","location":"api/dev.teogor.winds.api/-maven-publish/ticket-system.html","searchKeys":["ticketSystem","abstract val ticketSystem: TicketSystem?","dev.teogor.winds.api.MavenPublish.ticketSystem"]},{"name":"abstract val ticketSystem: TicketSystem?","description":"dev.teogor.winds.api.ModuleMetadata.ticketSystem","location":"api/dev.teogor.winds.api/-module-metadata/ticket-system.html","searchKeys":["ticketSystem","abstract val ticketSystem: TicketSystem?","dev.teogor.winds.api.ModuleMetadata.ticketSystem"]},{"name":"abstract val timezone: String","description":"dev.teogor.winds.api.Person.timezone","location":"api/dev.teogor.winds.api/-person/timezone.html","searchKeys":["timezone","abstract val timezone: String","dev.teogor.winds.api.Person.timezone"]},{"name":"abstract val timezone: String","description":"dev.teogor.winds.api.model.Contributor.timezone","location":"api/dev.teogor.winds.api.model/-contributor/timezone.html","searchKeys":["timezone","abstract val timezone: String","dev.teogor.winds.api.model.Contributor.timezone"]},{"name":"abstract val timezone: String","description":"dev.teogor.winds.api.model.Developer.timezone","location":"api/dev.teogor.winds.api.model/-developer/timezone.html","searchKeys":["timezone","abstract val timezone: String","dev.teogor.winds.api.model.Developer.timezone"]},{"name":"abstract val url: String","description":"dev.teogor.winds.api.License.url","location":"api/dev.teogor.winds.api/-license/url.html","searchKeys":["url","abstract val url: String","dev.teogor.winds.api.License.url"]},{"name":"abstract val url: String","description":"dev.teogor.winds.api.Person.url","location":"api/dev.teogor.winds.api/-person/url.html","searchKeys":["url","abstract val url: String","dev.teogor.winds.api.Person.url"]},{"name":"abstract val url: String","description":"dev.teogor.winds.api.TicketSystem.url","location":"api/dev.teogor.winds.api/-ticket-system/url.html","searchKeys":["url","abstract val url: String","dev.teogor.winds.api.TicketSystem.url"]},{"name":"abstract val url: String","description":"dev.teogor.winds.api.model.Contributor.url","location":"api/dev.teogor.winds.api.model/-contributor/url.html","searchKeys":["url","abstract val url: String","dev.teogor.winds.api.model.Contributor.url"]},{"name":"abstract val url: String","description":"dev.teogor.winds.api.model.Developer.url","location":"api/dev.teogor.winds.api.model/-developer/url.html","searchKeys":["url","abstract val url: String","dev.teogor.winds.api.model.Developer.url"]},{"name":"abstract val url: String","description":"dev.teogor.winds.api.provider.Scm.url","location":"api/dev.teogor.winds.api.provider/-scm/url.html","searchKeys":["url","abstract val url: String","dev.teogor.winds.api.provider.Scm.url"]},{"name":"abstract var alertOnDependentModules: Boolean","description":"dev.teogor.winds.api.DocsGenerator.alertOnDependentModules","location":"api/dev.teogor.winds.api/-docs-generator/alert-on-dependent-modules.html","searchKeys":["alertOnDependentModules","abstract var alertOnDependentModules: Boolean","dev.teogor.winds.api.DocsGenerator.alertOnDependentModules"]},{"name":"abstract var alertOnDependentModules: Boolean","description":"dev.teogor.winds.api.DocumentationBuilder.alertOnDependentModules","location":"api/dev.teogor.winds.api/-documentation-builder/alert-on-dependent-modules.html","searchKeys":["alertOnDependentModules","abstract var alertOnDependentModules: Boolean","dev.teogor.winds.api.DocumentationBuilder.alertOnDependentModules"]},{"name":"abstract var apiDocsUrl: String?","description":"dev.teogor.winds.api.ModuleMetadata.apiDocsUrl","location":"api/dev.teogor.winds.api/-module-metadata/api-docs-url.html","searchKeys":["apiDocsUrl","abstract var apiDocsUrl: String?","dev.teogor.winds.api.ModuleMetadata.apiDocsUrl"]},{"name":"abstract var artifactIdElements: Int?","description":"dev.teogor.winds.api.MavenPublish.artifactIdElements","location":"api/dev.teogor.winds.api/-maven-publish/artifact-id-elements.html","searchKeys":["artifactIdElements","abstract var artifactIdElements: Int?","dev.teogor.winds.api.MavenPublish.artifactIdElements"]},{"name":"abstract var bomOptions: BomOptions?","description":"dev.teogor.winds.api.MavenPublish.bomOptions","location":"api/dev.teogor.winds.api/-maven-publish/bom-options.html","searchKeys":["bomOptions","abstract var bomOptions: BomOptions?","dev.teogor.winds.api.MavenPublish.bomOptions"]},{"name":"abstract var buildFeatures: BuildFeatures","description":"dev.teogor.winds.api.WindsLegacy.buildFeatures","location":"api/dev.teogor.winds.api/-winds-legacy/build-features.html","searchKeys":["buildFeatures","abstract var buildFeatures: BuildFeatures","dev.teogor.winds.api.WindsLegacy.buildFeatures"]},{"name":"abstract var canBePublished: Boolean","description":"dev.teogor.winds.api.MavenPublish.canBePublished","location":"api/dev.teogor.winds.api/-maven-publish/can-be-published.html","searchKeys":["canBePublished","abstract var canBePublished: Boolean","dev.teogor.winds.api.MavenPublish.canBePublished"]},{"name":"abstract var cascadePublish: Boolean","description":"dev.teogor.winds.api.PublishingOptions.cascadePublish","location":"api/dev.teogor.winds.api/-publishing-options/cascade-publish.html","searchKeys":["cascadePublish","abstract var cascadePublish: Boolean","dev.teogor.winds.api.PublishingOptions.cascadePublish"]},{"name":"abstract var codebaseOptions: CodebaseOptions","description":"dev.teogor.winds.api.Winds.codebaseOptions","location":"api/dev.teogor.winds.api/-winds/codebase-options.html","searchKeys":["codebaseOptions","abstract var codebaseOptions: CodebaseOptions","dev.teogor.winds.api.Winds.codebaseOptions"]},{"name":"abstract var contributors: List<Contributor>?","description":"dev.teogor.winds.api.MavenPublish.contributors","location":"api/dev.teogor.winds.api/-maven-publish/contributors.html","searchKeys":["contributors","abstract var contributors: List<Contributor>?","dev.teogor.winds.api.MavenPublish.contributors"]},{"name":"abstract var createApiReference: Boolean","description":"dev.teogor.winds.api.DocumentationBuilder.createApiReference","location":"api/dev.teogor.winds.api/-documentation-builder/create-api-reference.html","searchKeys":["createApiReference","abstract var createApiReference: Boolean","dev.teogor.winds.api.DocumentationBuilder.createApiReference"]},{"name":"abstract var dependencyGatheringType: DependencyType","description":"dev.teogor.winds.api.DocsGenerator.dependencyGatheringType","location":"api/dev.teogor.winds.api/-docs-generator/dependency-gathering-type.html","searchKeys":["dependencyGatheringType","abstract var dependencyGatheringType: DependencyType","dev.teogor.winds.api.DocsGenerator.dependencyGatheringType"]},{"name":"abstract var dependencyGatheringType: DependencyType","description":"dev.teogor.winds.api.DocumentationBuilder.dependencyGatheringType","location":"api/dev.teogor.winds.api/-documentation-builder/dependency-gathering-type.html","searchKeys":["dependencyGatheringType","abstract var dependencyGatheringType: DependencyType","dev.teogor.winds.api.DocumentationBuilder.dependencyGatheringType"]},{"name":"abstract var description: String?","description":"dev.teogor.winds.api.MavenPublish.description","location":"api/dev.teogor.winds.api/-maven-publish/description.html","searchKeys":["description","abstract var description: String?","dev.teogor.winds.api.MavenPublish.description"]},{"name":"abstract var description: String?","description":"dev.teogor.winds.api.ModuleMetadata.description","location":"api/dev.teogor.winds.api/-module-metadata/description.html","searchKeys":["description","abstract var description: String?","dev.teogor.winds.api.ModuleMetadata.description"]},{"name":"abstract var developers: List<Developer>?","description":"dev.teogor.winds.api.MavenPublish.developers","location":"api/dev.teogor.winds.api/-maven-publish/developers.html","searchKeys":["developers","abstract var developers: List<Developer>?","dev.teogor.winds.api.MavenPublish.developers"]},{"name":"abstract var displayName: String?","description":"dev.teogor.winds.api.MavenPublish.displayName","location":"api/dev.teogor.winds.api/-maven-publish/display-name.html","searchKeys":["displayName","abstract var displayName: String?","dev.teogor.winds.api.MavenPublish.displayName"]},{"name":"abstract var docsGenerator: Boolean","description":"dev.teogor.winds.api.BuildFeatures.docsGenerator","location":"api/dev.teogor.winds.api/-build-features/docs-generator.html","searchKeys":["docsGenerator","abstract var docsGenerator: Boolean","dev.teogor.winds.api.BuildFeatures.docsGenerator"]},{"name":"abstract var docsGenerator: Boolean","description":"dev.teogor.winds.api.WindsFeatures.docsGenerator","location":"api/dev.teogor.winds.api/-winds-features/docs-generator.html","searchKeys":["docsGenerator","abstract var docsGenerator: Boolean","dev.teogor.winds.api.WindsFeatures.docsGenerator"]},{"name":"abstract var docsGenerator: DocsGenerator","description":"dev.teogor.winds.api.Winds.docsGenerator","location":"api/dev.teogor.winds.api/-winds/docs-generator.html","searchKeys":["docsGenerator","abstract var docsGenerator: DocsGenerator","dev.teogor.winds.api.Winds.docsGenerator"]},{"name":"abstract var docsGenerator: DocsGenerator","description":"dev.teogor.winds.api.WindsLegacy.docsGenerator","location":"api/dev.teogor.winds.api/-winds-legacy/docs-generator.html","searchKeys":["docsGenerator","abstract var docsGenerator: DocsGenerator","dev.teogor.winds.api.WindsLegacy.docsGenerator"]},{"name":"abstract var docsModuleHandler: DocsModuleHandler","description":"dev.teogor.winds.gradle.tasks.BaseGeneratorTask.docsModuleHandler","location":"api/dev.teogor.winds.gradle.tasks/-base-generator-task/docs-module-handler.html","searchKeys":["docsModuleHandler","abstract var docsModuleHandler: DocsModuleHandler","dev.teogor.winds.gradle.tasks.BaseGeneratorTask.docsModuleHandler"]},{"name":"abstract var documentationBuilder: DocumentationBuilder","description":"dev.teogor.winds.api.Winds.documentationBuilder","location":"api/dev.teogor.winds.api/-winds/documentation-builder.html","searchKeys":["documentationBuilder","abstract var documentationBuilder: DocumentationBuilder","dev.teogor.winds.api.Winds.documentationBuilder"]},{"name":"abstract var enablePublicationSigning: Boolean","description":"dev.teogor.winds.api.PublishingOptions.enablePublicationSigning","location":"api/dev.teogor.winds.api/-publishing-options/enable-publication-signing.html","searchKeys":["enablePublicationSigning","abstract var enablePublicationSigning: Boolean","dev.teogor.winds.api.PublishingOptions.enablePublicationSigning"]},{"name":"abstract var enforceUniqueNames: Boolean","description":"dev.teogor.winds.api.MavenPublish.enforceUniqueNames","location":"api/dev.teogor.winds.api/-maven-publish/enforce-unique-names.html","searchKeys":["enforceUniqueNames","abstract var enforceUniqueNames: Boolean","dev.teogor.winds.api.MavenPublish.enforceUniqueNames"]},{"name":"abstract var generateReleaseTable: Boolean","description":"dev.teogor.winds.api.DocumentationBuilder.generateReleaseTable","location":"api/dev.teogor.winds.api/-documentation-builder/generate-release-table.html","searchKeys":["generateReleaseTable","abstract var generateReleaseTable: Boolean","dev.teogor.winds.api.DocumentationBuilder.generateReleaseTable"]},{"name":"abstract var groupId: String?","description":"dev.teogor.winds.api.MavenPublish.groupId","location":"api/dev.teogor.winds.api/-maven-publish/group-id.html","searchKeys":["groupId","abstract var groupId: String?","dev.teogor.winds.api.MavenPublish.groupId"]},{"name":"abstract var htmlPath: String","description":"dev.teogor.winds.api.DocumentationBuilder.htmlPath","location":"api/dev.teogor.winds.api/-documentation-builder/html-path.html","searchKeys":["htmlPath","abstract var htmlPath: String","dev.teogor.winds.api.DocumentationBuilder.htmlPath"]},{"name":"abstract var identifier: String","description":"dev.teogor.winds.api.DocsGenerator.identifier","location":"api/dev.teogor.winds.api/-docs-generator/identifier.html","searchKeys":["identifier","abstract var identifier: String","dev.teogor.winds.api.DocsGenerator.identifier"]},{"name":"abstract var identifier: String","description":"dev.teogor.winds.api.WorkflowSynthesizer.identifier","location":"api/dev.teogor.winds.api/-workflow-synthesizer/identifier.html","searchKeys":["identifier","abstract var identifier: String","dev.teogor.winds.api.WorkflowSynthesizer.identifier"]},{"name":"abstract var inceptionYear: Int?","description":"dev.teogor.winds.api.MavenPublish.inceptionYear","location":"api/dev.teogor.winds.api/-maven-publish/inception-year.html","searchKeys":["inceptionYear","abstract var inceptionYear: Int?","dev.teogor.winds.api.MavenPublish.inceptionYear"]},{"name":"abstract var includeAlphaRelease: Boolean","description":"dev.teogor.winds.api.DocumentationBuilder.includeAlphaRelease","location":"api/dev.teogor.winds.api/-documentation-builder/include-alpha-release.html","searchKeys":["includeAlphaRelease","abstract var includeAlphaRelease: Boolean","dev.teogor.winds.api.DocumentationBuilder.includeAlphaRelease"]},{"name":"abstract var includeBetaRelease: Boolean","description":"dev.teogor.winds.api.DocumentationBuilder.includeBetaRelease","location":"api/dev.teogor.winds.api/-documentation-builder/include-beta-release.html","searchKeys":["includeBetaRelease","abstract var includeBetaRelease: Boolean","dev.teogor.winds.api.DocumentationBuilder.includeBetaRelease"]},{"name":"abstract var includeReleaseCandidate: Boolean","description":"dev.teogor.winds.api.DocumentationBuilder.includeReleaseCandidate","location":"api/dev.teogor.winds.api/-documentation-builder/include-release-candidate.html","searchKeys":["includeReleaseCandidate","abstract var includeReleaseCandidate: Boolean","dev.teogor.winds.api.DocumentationBuilder.includeReleaseCandidate"]},{"name":"abstract var isBom: Boolean","description":"dev.teogor.winds.api.ModuleMetadata.isBom","location":"api/dev.teogor.winds.api/-module-metadata/is-bom.html","searchKeys":["isBom","abstract var isBom: Boolean","dev.teogor.winds.api.ModuleMetadata.isBom"]},{"name":"abstract var licenses: List<LicenseType>?","description":"dev.teogor.winds.api.MavenPublish.licenses","location":"api/dev.teogor.winds.api/-maven-publish/licenses.html","searchKeys":["licenses","abstract var licenses: List<LicenseType>?","dev.teogor.winds.api.MavenPublish.licenses"]},{"name":"abstract var mavenPublish: Boolean","description":"dev.teogor.winds.api.BuildFeatures.mavenPublish","location":"api/dev.teogor.winds.api/-build-features/maven-publish.html","searchKeys":["mavenPublish","abstract var mavenPublish: Boolean","dev.teogor.winds.api.BuildFeatures.mavenPublish"]},{"name":"abstract var mavenPublish: MavenPublish","description":"dev.teogor.winds.api.WindsLegacy.mavenPublish","location":"api/dev.teogor.winds.api/-winds-legacy/maven-publish.html","searchKeys":["mavenPublish","abstract var mavenPublish: MavenPublish","dev.teogor.winds.api.WindsLegacy.mavenPublish"]},{"name":"abstract var mavenPublishing: Boolean","description":"dev.teogor.winds.api.WindsFeatures.mavenPublishing","location":"api/dev.teogor.winds.api/-winds-features/maven-publishing.html","searchKeys":["mavenPublishing","abstract var mavenPublishing: Boolean","dev.teogor.winds.api.WindsFeatures.mavenPublishing"]},{"name":"abstract var mkdocsEnabled: Boolean","description":"dev.teogor.winds.api.DocsGenerator.mkdocsEnabled","location":"api/dev.teogor.winds.api/-docs-generator/mkdocs-enabled.html","searchKeys":["mkdocsEnabled","abstract var mkdocsEnabled: Boolean","dev.teogor.winds.api.DocsGenerator.mkdocsEnabled"]},{"name":"abstract var mkdocsEnabled: Boolean","description":"dev.teogor.winds.api.DocumentationBuilder.mkdocsEnabled","location":"api/dev.teogor.winds.api/-documentation-builder/mkdocs-enabled.html","searchKeys":["mkdocsEnabled","abstract var mkdocsEnabled: Boolean","dev.teogor.winds.api.DocumentationBuilder.mkdocsEnabled"]},{"name":"abstract var moduleMetadata: ModuleMetadata","description":"dev.teogor.winds.api.Winds.moduleMetadata","location":"api/dev.teogor.winds.api/-winds/module-metadata.html","searchKeys":["moduleMetadata","abstract var moduleMetadata: ModuleMetadata","dev.teogor.winds.api.Winds.moduleMetadata"]},{"name":"abstract var name: String","description":"dev.teogor.winds.api.DocsGenerator.name","location":"api/dev.teogor.winds.api/-docs-generator/name.html","searchKeys":["name","abstract var name: String","dev.teogor.winds.api.DocsGenerator.name"]},{"name":"abstract var name: String","description":"dev.teogor.winds.api.WorkflowSynthesizer.name","location":"api/dev.teogor.winds.api/-workflow-synthesizer/name.html","searchKeys":["name","abstract var name: String","dev.teogor.winds.api.WorkflowSynthesizer.name"]},{"name":"abstract var name: String?","description":"dev.teogor.winds.api.MavenPublish.name","location":"api/dev.teogor.winds.api/-maven-publish/name.html","searchKeys":["name","abstract var name: String?","dev.teogor.winds.api.MavenPublish.name"]},{"name":"abstract var name: String?","description":"dev.teogor.winds.api.ModuleMetadata.name","location":"api/dev.teogor.winds.api/-module-metadata/name.html","searchKeys":["name","abstract var name: String?","dev.teogor.winds.api.ModuleMetadata.name"]},{"name":"abstract var optInForVanniktechPlugin: Boolean","description":"dev.teogor.winds.api.PublishingOptions.optInForVanniktechPlugin","location":"api/dev.teogor.winds.api/-publishing-options/opt-in-for-vanniktech-plugin.html","searchKeys":["optInForVanniktechPlugin","abstract var optInForVanniktechPlugin: Boolean","dev.teogor.winds.api.PublishingOptions.optInForVanniktechPlugin"]},{"name":"abstract var publish: Boolean","description":"dev.teogor.winds.api.PublishingOptions.publish","location":"api/dev.teogor.winds.api/-publishing-options/publish.html","searchKeys":["publish","abstract var publish: Boolean","dev.teogor.winds.api.PublishingOptions.publish"]},{"name":"abstract var publishingOptions: PublishingOptions","description":"dev.teogor.winds.api.Winds.publishingOptions","location":"api/dev.teogor.winds.api/-winds/publishing-options.html","searchKeys":["publishingOptions","abstract var publishingOptions: PublishingOptions","dev.teogor.winds.api.Winds.publishingOptions"]},{"name":"abstract var scmConnection: String?","description":"dev.teogor.winds.api.MavenPublish.scmConnection","location":"api/dev.teogor.winds.api/-maven-publish/scm-connection.html","searchKeys":["scmConnection","abstract var scmConnection: String?","dev.teogor.winds.api.MavenPublish.scmConnection"]},{"name":"abstract var scmDeveloperConnection: String?","description":"dev.teogor.winds.api.MavenPublish.scmDeveloperConnection","location":"api/dev.teogor.winds.api/-maven-publish/scm-developer-connection.html","searchKeys":["scmDeveloperConnection","abstract var scmDeveloperConnection: String?","dev.teogor.winds.api.MavenPublish.scmDeveloperConnection"]},{"name":"abstract var scmUrl: String?","description":"dev.teogor.winds.api.MavenPublish.scmUrl","location":"api/dev.teogor.winds.api/-maven-publish/scm-url.html","searchKeys":["scmUrl","abstract var scmUrl: String?","dev.teogor.winds.api.MavenPublish.scmUrl"]},{"name":"abstract var sonatypeHost: SonatypeHost","description":"dev.teogor.winds.api.PublishingOptions.sonatypeHost","location":"api/dev.teogor.winds.api/-publishing-options/sonatype-host.html","searchKeys":["sonatypeHost","abstract var sonatypeHost: SonatypeHost","dev.teogor.winds.api.PublishingOptions.sonatypeHost"]},{"name":"abstract var task: DefaultTask?","description":"dev.teogor.winds.api.TaskBuilder.task","location":"api/dev.teogor.winds.api/-task-builder/task.html","searchKeys":["task","abstract var task: DefaultTask?","dev.teogor.winds.api.TaskBuilder.task"]},{"name":"abstract var url: String?","description":"dev.teogor.winds.api.MavenPublish.url","location":"api/dev.teogor.winds.api/-maven-publish/url.html","searchKeys":["url","abstract var url: String?","dev.teogor.winds.api.MavenPublish.url"]},{"name":"abstract var version: Version?","description":"dev.teogor.winds.api.MavenPublish.version","location":"api/dev.teogor.winds.api/-maven-publish/version.html","searchKeys":["version","abstract var version: Version?","dev.teogor.winds.api.MavenPublish.version"]},{"name":"abstract var websiteUrl: String?","description":"dev.teogor.winds.api.ModuleMetadata.websiteUrl","location":"api/dev.teogor.winds.api/-module-metadata/website-url.html","searchKeys":["websiteUrl","abstract var websiteUrl: String?","dev.teogor.winds.api.ModuleMetadata.websiteUrl"]},{"name":"abstract var windsFeatures: WindsFeatures","description":"dev.teogor.winds.api.Winds.windsFeatures","location":"api/dev.teogor.winds.api/-winds/winds-features.html","searchKeys":["windsFeatures","abstract var windsFeatures: WindsFeatures","dev.teogor.winds.api.Winds.windsFeatures"]},{"name":"abstract var workflowSynthesizer: Boolean","description":"dev.teogor.winds.api.BuildFeatures.workflowSynthesizer","location":"api/dev.teogor.winds.api/-build-features/workflow-synthesizer.html","searchKeys":["workflowSynthesizer","abstract var workflowSynthesizer: Boolean","dev.teogor.winds.api.BuildFeatures.workflowSynthesizer"]},{"name":"abstract var workflowSynthesizer: Boolean","description":"dev.teogor.winds.api.WindsFeatures.workflowSynthesizer","location":"api/dev.teogor.winds.api/-winds-features/workflow-synthesizer.html","searchKeys":["workflowSynthesizer","abstract var workflowSynthesizer: Boolean","dev.teogor.winds.api.WindsFeatures.workflowSynthesizer"]},{"name":"abstract var workflowSynthesizer: WorkflowSynthesizer","description":"dev.teogor.winds.api.Winds.workflowSynthesizer","location":"api/dev.teogor.winds.api/-winds/workflow-synthesizer.html","searchKeys":["workflowSynthesizer","abstract var workflowSynthesizer: WorkflowSynthesizer","dev.teogor.winds.api.Winds.workflowSynthesizer"]},{"name":"abstract var workflowSynthesizer: WorkflowSynthesizer","description":"dev.teogor.winds.api.WindsLegacy.workflowSynthesizer","location":"api/dev.teogor.winds.api/-winds-legacy/workflow-synthesizer.html","searchKeys":["workflowSynthesizer","abstract var workflowSynthesizer: WorkflowSynthesizer","dev.teogor.winds.api.WindsLegacy.workflowSynthesizer"]},{"name":"abstract var yearCreated: Int","description":"dev.teogor.winds.api.ModuleMetadata.yearCreated","location":"api/dev.teogor.winds.api/-module-metadata/year-created.html","searchKeys":["yearCreated","abstract var yearCreated: Int","dev.teogor.winds.api.ModuleMetadata.yearCreated"]},{"name":"class InvalidLicenseException(message: String) : ModuleMetadataException","description":"dev.teogor.winds.api.util.InvalidLicenseException","location":"api/dev.teogor.winds.api.util/-invalid-license-exception/index.html","searchKeys":["InvalidLicenseException","class InvalidLicenseException(message: String) : ModuleMetadataException","dev.teogor.winds.api.util.InvalidLicenseException"]},{"name":"class InvalidPersonException(message: String) : ModuleMetadataException","description":"dev.teogor.winds.api.util.InvalidPersonException","location":"api/dev.teogor.winds.api.util/-invalid-person-exception/index.html","searchKeys":["InvalidPersonException","class InvalidPersonException(message: String) : ModuleMetadataException","dev.teogor.winds.api.util.InvalidPersonException"]},{"name":"class InvalidScmConfigurationException(message: String) : ModuleMetadataException","description":"dev.teogor.winds.api.util.InvalidScmConfigurationException","location":"api/dev.teogor.winds.api.util/-invalid-scm-configuration-exception/index.html","searchKeys":["InvalidScmConfigurationException","class InvalidScmConfigurationException(message: String) : ModuleMetadataException","dev.teogor.winds.api.util.InvalidScmConfigurationException"]},{"name":"class MissingRequiredFieldException(message: String) : ModuleMetadataException","description":"dev.teogor.winds.api.util.MissingRequiredFieldException","location":"api/dev.teogor.winds.api.util/-missing-required-field-exception/index.html","searchKeys":["MissingRequiredFieldException","class MissingRequiredFieldException(message: String) : ModuleMetadataException","dev.teogor.winds.api.util.MissingRequiredFieldException"]},{"name":"class VersionBuilder","description":"dev.teogor.winds.api.model.Version.VersionBuilder","location":"api/dev.teogor.winds.api.model/-version/-version-builder/index.html","searchKeys":["VersionBuilder","class VersionBuilder","dev.teogor.winds.api.model.Version.VersionBuilder"]},{"name":"const val ALPHA: Emoji","description":"dev.teogor.winds.api.util.Emojis.ALPHA","location":"api/dev.teogor.winds.api.util/-emojis/-a-l-p-h-a.html","searchKeys":["ALPHA","const val ALPHA: Emoji","dev.teogor.winds.api.util.Emojis.ALPHA"]},{"name":"const val BETA: Emoji","description":"dev.teogor.winds.api.util.Emojis.BETA","location":"api/dev.teogor.winds.api.util/-emojis/-b-e-t-a.html","searchKeys":["BETA","const val BETA: Emoji","dev.teogor.winds.api.util.Emojis.BETA"]},{"name":"const val DEPRECATED: Emoji","description":"dev.teogor.winds.api.util.Emojis.DEPRECATED","location":"api/dev.teogor.winds.api.util/-emojis/-d-e-p-r-e-c-a-t-e-d.html","searchKeys":["DEPRECATED","const val DEPRECATED: Emoji","dev.teogor.winds.api.util.Emojis.DEPRECATED"]},{"name":"constructor()","description":"dev.teogor.winds.api.model.Version.VersionBuilder.VersionBuilder","location":"api/dev.teogor.winds.api.model/-version/-version-builder/-version-builder.html","searchKeys":["VersionBuilder","constructor()","dev.teogor.winds.api.model.Version.VersionBuilder.VersionBuilder"]},{"name":"constructor(acceptedModules: List<String> = emptyList(), acceptedPaths: List<String> = emptyList())","description":"dev.teogor.winds.api.model.BomOptions.BomOptions","location":"api/dev.teogor.winds.api.model/-bom-options/-bom-options.html","searchKeys":["BomOptions","constructor(acceptedModules: List<String> = emptyList(), acceptedPaths: List<String> = emptyList())","dev.teogor.winds.api.model.BomOptions.BomOptions"]},{"name":"constructor(completeName: String, name: String, artifactId: String, version: Version, canBePublished: Boolean)","description":"dev.teogor.winds.api.model.ModuleMetadataDefault.ModuleMetadataDefault","location":"api/dev.teogor.winds.api.model/-module-metadata-default/-module-metadata-default.html","searchKeys":["ModuleMetadataDefault","constructor(completeName: String, name: String, artifactId: String, version: Version, canBePublished: Boolean)","dev.teogor.winds.api.model.ModuleMetadataDefault.ModuleMetadataDefault"]},{"name":"constructor(completeName: String, name: String, displayName: String, description: String, groupId: String, artifactId: String, version: Version, path: String, dependencies: List<DependencyDefinition>, canBePublished: Boolean, names: List<String>)","description":"dev.teogor.winds.api.model.ModuleInfo.ModuleInfo","location":"api/dev.teogor.winds.api.model/-module-info/-module-info.html","searchKeys":["ModuleInfo","constructor(completeName: String, name: String, displayName: String, description: String, groupId: String, artifactId: String, version: Version, path: String, dependencies: List<DependencyDefinition>, canBePublished: Boolean, names: List<String>)","dev.teogor.winds.api.model.ModuleInfo.ModuleInfo"]},{"name":"constructor(connection: String, developerConnection: String, repository: String, owner: String, repositoryUrl: String)","description":"dev.teogor.winds.api.Scm.CustomExplicit.CustomExplicit","location":"api/dev.teogor.winds.api/-scm/-custom-explicit/-custom-explicit.html","searchKeys":["CustomExplicit","constructor(connection: String, developerConnection: String, repository: String, owner: String, repositoryUrl: String)","dev.teogor.winds.api.Scm.CustomExplicit.CustomExplicit"]},{"name":"constructor(connection: String, developerConnection: String, url: String)","description":"dev.teogor.winds.api.provider.Scm.CustomExplicit.CustomExplicit","location":"api/dev.teogor.winds.api.provider/-scm/-custom-explicit/-custom-explicit.html","searchKeys":["CustomExplicit","constructor(connection: String, developerConnection: String, url: String)","dev.teogor.winds.api.provider.Scm.CustomExplicit.CustomExplicit"]},{"name":"constructor(description: String)","description":"dev.teogor.winds.gradle.tasks.BaseGeneratorTask.BaseGeneratorTask","location":"api/dev.teogor.winds.gradle.tasks/-base-generator-task/-base-generator-task.html","searchKeys":["BaseGeneratorTask","constructor(description: String)","dev.teogor.winds.gradle.tasks.BaseGeneratorTask.BaseGeneratorTask"]},{"name":"constructor(enabled: Boolean = false, baselineVersion: String = \"\", failOnIncompatibleChanges: Boolean = false)","description":"dev.teogor.winds.api.BinaryCompatibility.BinaryCompatibility","location":"api/dev.teogor.winds.api/-binary-compatibility/-binary-compatibility.html","searchKeys":["BinaryCompatibility","constructor(enabled: Boolean = false, baselineVersion: String = \"\", failOnIncompatibleChanges: Boolean = false)","dev.teogor.winds.api.BinaryCompatibility.BinaryCompatibility"]},{"name":"constructor(enabled: Boolean = false, format: String = \"\", includeFiles: List<String> = emptyList(), excludeFiles: List<String> = emptyList())","description":"dev.teogor.winds.api.SpotlessOptions.SpotlessOptions","location":"api/dev.teogor.winds.api/-spotless-options/-spotless-options.html","searchKeys":["SpotlessOptions","constructor(enabled: Boolean = false, format: String = \"\", includeFiles: List<String> = emptyList(), excludeFiles: List<String> = emptyList())","dev.teogor.winds.api.SpotlessOptions.SpotlessOptions"]},{"name":"constructor(enabled: Boolean = false, outputDirectory: String = \"\", sourceDirectories: List<String> = emptyList(), additionalIncludes: List<String> = emptyList())","description":"dev.teogor.winds.api.DokkaOptions.DokkaOptions","location":"api/dev.teogor.winds.api/-dokka-options/-dokka-options.html","searchKeys":["DokkaOptions","constructor(enabled: Boolean = false, outputDirectory: String = \"\", sourceDirectories: List<String> = emptyList(), additionalIncludes: List<String> = emptyList())","dev.teogor.winds.api.DokkaOptions.DokkaOptions"]},{"name":"constructor(excludedScopes: List<String> = emptyList(), acceptedModules: List<String> = emptyList(), acceptedPaths: List<String> = emptyList())","description":"dev.teogor.winds.api.BomOptions.BomOptions","location":"api/dev.teogor.winds.api/-bom-options/-bom-options.html","searchKeys":["BomOptions","constructor(excludedScopes: List<String> = emptyList(), acceptedModules: List<String> = emptyList(), acceptedPaths: List<String> = emptyList())","dev.teogor.winds.api.BomOptions.BomOptions"]},{"name":"constructor(group: String, artifact: String, version: String)","description":"dev.teogor.winds.api.model.Dependency.Dependency","location":"api/dev.teogor.winds.api.model/-dependency/-dependency.html","searchKeys":["Dependency","constructor(group: String, artifact: String, version: String)","dev.teogor.winds.api.model.Dependency.Dependency"]},{"name":"constructor(group: String, name: String, version: Version, artifactIdFormat: ArtifactIdFormat = ArtifactIdFormat.FULL, nameFormat: NameFormat = NameFormat.FULL)","description":"dev.teogor.winds.api.ArtifactDescriptor.ArtifactDescriptor","location":"api/dev.teogor.winds.api/-artifact-descriptor/-artifact-descriptor.html","searchKeys":["ArtifactDescriptor","constructor(group: String, name: String, version: Version, artifactIdFormat: ArtifactIdFormat = ArtifactIdFormat.FULL, nameFormat: NameFormat = NameFormat.FULL)","dev.teogor.winds.api.ArtifactDescriptor.ArtifactDescriptor"]},{"name":"constructor(id: String = \"\", name: String = \"\", email: String = \"\", url: String = \"\", roles: List<String> = emptyList(), timezone: String = \"\", organization: String = \"\", organizationUrl: String = \"\")","description":"dev.teogor.winds.api.util.DeveloperImpl.DeveloperImpl","location":"api/dev.teogor.winds.api.util/-developer-impl/-developer-impl.html","searchKeys":["DeveloperImpl","constructor(id: String = \"\", name: String = \"\", email: String = \"\", url: String = \"\", roles: List<String> = emptyList(), timezone: String = \"\", organization: String = \"\", organizationUrl: String = \"\")","dev.teogor.winds.api.util.DeveloperImpl.DeveloperImpl"]},{"name":"constructor(id: String = \"\", name: String = \"\", email: String = \"\", url: String = \"\", roles: List<String> = emptyList(), timezone: String = \"\", organization: String = \"\", organizationUrl: String = \"\", properties: Map<String, String> = emptyMap())","description":"dev.teogor.winds.api.Person.Developer.Developer","location":"api/dev.teogor.winds.api/-person/-developer/-developer.html","searchKeys":["Developer","constructor(id: String = \"\", name: String = \"\", email: String = \"\", url: String = \"\", roles: List<String> = emptyList(), timezone: String = \"\", organization: String = \"\", organizationUrl: String = \"\", properties: Map<String, String> = emptyMap())","dev.teogor.winds.api.Person.Developer.Developer"]},{"name":"constructor(id: String = \"\", name: String = \"\", email: String = \"\", url: String = \"\", roles: List<String> = emptyList(), timezone: String = \"\", organization: String = \"\", organizationUrl: String = \"\", properties: Map<String, String> = emptyMap())","description":"dev.teogor.winds.api.Person.DeveloperContributor.DeveloperContributor","location":"api/dev.teogor.winds.api/-person/-developer-contributor/-developer-contributor.html","searchKeys":["DeveloperContributor","constructor(id: String = \"\", name: String = \"\", email: String = \"\", url: String = \"\", roles: List<String> = emptyList(), timezone: String = \"\", organization: String = \"\", organizationUrl: String = \"\", properties: Map<String, String> = emptyMap())","dev.teogor.winds.api.Person.DeveloperContributor.DeveloperContributor"]},{"name":"constructor(major: Int, minor: Int, patch: Int, flag: ReleaseStatus = ReleaseStatus.Stable, isDeprecated: Boolean = false, versionQualifier: Int = 0, versionQualifierPadding: Int = 2)","description":"dev.teogor.winds.api.model.Version.Version","location":"api/dev.teogor.winds.api.model/-version/-version.html","searchKeys":["Version","constructor(major: Int, minor: Int, patch: Int, flag: ReleaseStatus = ReleaseStatus.Stable, isDeprecated: Boolean = false, versionQualifier: Int = 0, versionQualifierPadding: Int = 2)","dev.teogor.winds.api.model.Version.Version"]},{"name":"constructor(message: String)","description":"dev.teogor.winds.api.util.InvalidLicenseException.InvalidLicenseException","location":"api/dev.teogor.winds.api.util/-invalid-license-exception/-invalid-license-exception.html","searchKeys":["InvalidLicenseException","constructor(message: String)","dev.teogor.winds.api.util.InvalidLicenseException.InvalidLicenseException"]},{"name":"constructor(message: String)","description":"dev.teogor.winds.api.util.InvalidPersonException.InvalidPersonException","location":"api/dev.teogor.winds.api.util/-invalid-person-exception/-invalid-person-exception.html","searchKeys":["InvalidPersonException","constructor(message: String)","dev.teogor.winds.api.util.InvalidPersonException.InvalidPersonException"]},{"name":"constructor(message: String)","description":"dev.teogor.winds.api.util.InvalidScmConfigurationException.InvalidScmConfigurationException","location":"api/dev.teogor.winds.api.util/-invalid-scm-configuration-exception/-invalid-scm-configuration-exception.html","searchKeys":["InvalidScmConfigurationException","constructor(message: String)","dev.teogor.winds.api.util.InvalidScmConfigurationException.InvalidScmConfigurationException"]},{"name":"constructor(message: String)","description":"dev.teogor.winds.api.util.MissingRequiredFieldException.MissingRequiredFieldException","location":"api/dev.teogor.winds.api.util/-missing-required-field-exception/-missing-required-field-exception.html","searchKeys":["MissingRequiredFieldException","constructor(message: String)","dev.teogor.winds.api.util.MissingRequiredFieldException.MissingRequiredFieldException"]},{"name":"constructor(message: String)","description":"dev.teogor.winds.api.util.ModuleMetadataException.ModuleMetadataException","location":"api/dev.teogor.winds.api.util/-module-metadata-exception/-module-metadata-exception.html","searchKeys":["ModuleMetadataException","constructor(message: String)","dev.teogor.winds.api.util.ModuleMetadataException.ModuleMetadataException"]},{"name":"constructor(module: String, version: Version, date: Long)","description":"dev.teogor.winds.api.model.ModuleDependencyRecord.ModuleDependencyRecord","location":"api/dev.teogor.winds.api.model/-module-dependency-record/-module-dependency-record.html","searchKeys":["ModuleDependencyRecord","constructor(module: String, version: Version, date: Long)","dev.teogor.winds.api.model.ModuleDependencyRecord.ModuleDependencyRecord"]},{"name":"constructor(name: String = \"\", email: String = \"\", url: String = \"\", organization: String = \"\", organizationUrl: String = \"\", roles: List<String> = emptyList(), timezone: String = \"\", properties: Map<String, String> = emptyMap())","description":"dev.teogor.winds.api.util.ContributorImpl.ContributorImpl","location":"api/dev.teogor.winds.api.util/-contributor-impl/-contributor-impl.html","searchKeys":["ContributorImpl","constructor(name: String = \"\", email: String = \"\", url: String = \"\", organization: String = \"\", organizationUrl: String = \"\", roles: List<String> = emptyList(), timezone: String = \"\", properties: Map<String, String> = emptyMap())","dev.teogor.winds.api.util.ContributorImpl.ContributorImpl"]},{"name":"constructor(name: String = \"\", email: String = \"\", url: String = \"\", roles: List<String> = emptyList(), timezone: String = \"\", organization: String = \"\", organizationUrl: String = \"\", properties: Map<String, String> = emptyMap())","description":"dev.teogor.winds.api.Person.Contributor.Contributor","location":"api/dev.teogor.winds.api/-person/-contributor/-contributor.html","searchKeys":["Contributor","constructor(name: String = \"\", email: String = \"\", url: String = \"\", roles: List<String> = emptyList(), timezone: String = \"\", organization: String = \"\", organizationUrl: String = \"\", properties: Map<String, String> = emptyMap())","dev.teogor.winds.api.Person.Contributor.Contributor"]},{"name":"constructor(name: String, path: Path, artifact: ArtifactDescriptor, dependencies: List<ArtifactDescriptor>, publish: Boolean, isBom: Boolean, completeName: String, description: String?, documentationBuilder: DocumentationBuilder, ticketSystem: TicketSystem?, scm: Scm?)","description":"dev.teogor.winds.api.model.ModuleDescriptor.ModuleDescriptor","location":"api/dev.teogor.winds.api.model/-module-descriptor/-module-descriptor.html","searchKeys":["ModuleDescriptor","constructor(name: String, path: Path, artifact: ArtifactDescriptor, dependencies: List<ArtifactDescriptor>, publish: Boolean, isBom: Boolean, completeName: String, description: String?, documentationBuilder: DocumentationBuilder, ticketSystem: TicketSystem?, scm: Scm?)","dev.teogor.winds.api.model.ModuleDescriptor.ModuleDescriptor"]},{"name":"constructor(name: String, url: String, distribution: Distribution = Distribution.Repo, comments: String? = null)","description":"dev.teogor.winds.api.License.Custom.Custom","location":"api/dev.teogor.winds.api/-license/-custom/-custom.html","searchKeys":["Custom","constructor(name: String, url: String, distribution: Distribution = Distribution.Repo, comments: String? = null)","dev.teogor.winds.api.License.Custom.Custom"]},{"name":"constructor(path: String)","description":"dev.teogor.winds.api.provider.Scm.Local.Local","location":"api/dev.teogor.winds.api.provider/-scm/-local/-local.html","searchKeys":["Local","constructor(path: String)","dev.teogor.winds.api.provider.Scm.Local.Local"]},{"name":"constructor(path: String, repository: String, owner: String)","description":"dev.teogor.winds.api.Scm.Local.Local","location":"api/dev.teogor.winds.api/-scm/-local/-local.html","searchKeys":["Local","constructor(path: String, repository: String, owner: String)","dev.teogor.winds.api.Scm.Local.Local"]},{"name":"constructor(product: String, component: String = \"\", serverUrl: String)","description":"dev.teogor.winds.api.TicketSystem.Bugzilla.Bugzilla","location":"api/dev.teogor.winds.api/-ticket-system/-bugzilla/-bugzilla.html","searchKeys":["Bugzilla","constructor(product: String, component: String = \"\", serverUrl: String)","dev.teogor.winds.api.TicketSystem.Bugzilla.Bugzilla"]},{"name":"constructor(project: String, group: String = \"\")","description":"dev.teogor.winds.api.TicketSystem.GitLab.GitLab","location":"api/dev.teogor.winds.api/-ticket-system/-git-lab/-git-lab.html","searchKeys":["GitLab","constructor(project: String, group: String = \"\")","dev.teogor.winds.api.TicketSystem.GitLab.GitLab"]},{"name":"constructor(projectDir: File, docsGenerator: DocsGenerator)","description":"dev.teogor.winds.api.docs.DocsModuleHandler.DocsModuleHandler","location":"api/dev.teogor.winds.api.docs/-docs-module-handler/-docs-module-handler.html","searchKeys":["DocsModuleHandler","constructor(projectDir: File, docsGenerator: DocsGenerator)","dev.teogor.winds.api.docs.DocsModuleHandler.DocsModuleHandler"]},{"name":"constructor(projectId: String, baseUrl: String)","description":"dev.teogor.winds.api.TicketSystem.Redmine.Redmine","location":"api/dev.teogor.winds.api/-ticket-system/-redmine/-redmine.html","searchKeys":["Redmine","constructor(projectId: String, baseUrl: String)","dev.teogor.winds.api.TicketSystem.Redmine.Redmine"]},{"name":"constructor(projectKey: String, serverUrl: String = \"https://issues.atlassian.com\")","description":"dev.teogor.winds.api.TicketSystem.Jira.Jira","location":"api/dev.teogor.winds.api/-ticket-system/-jira/-jira.html","searchKeys":["Jira","constructor(projectKey: String, serverUrl: String = \"https://issues.atlassian.com\")","dev.teogor.winds.api.TicketSystem.Jira.Jira"]},{"name":"constructor(projectName: String, modulePath: String)","description":"dev.teogor.winds.api.model.LocalProjectDependency.LocalProjectDependency","location":"api/dev.teogor.winds.api.model/-local-project-dependency/-local-project-dependency.html","searchKeys":["LocalProjectDependency","constructor(projectName: String, modulePath: String)","dev.teogor.winds.api.model.LocalProjectDependency.LocalProjectDependency"]},{"name":"constructor(repo: String, owner: String)","description":"dev.teogor.winds.api.provider.Scm.Bitbucket.Bitbucket","location":"api/dev.teogor.winds.api.provider/-scm/-bitbucket/-bitbucket.html","searchKeys":["Bitbucket","constructor(repo: String, owner: String)","dev.teogor.winds.api.provider.Scm.Bitbucket.Bitbucket"]},{"name":"constructor(repo: String, owner: String)","description":"dev.teogor.winds.api.provider.Scm.Git.Git","location":"api/dev.teogor.winds.api.provider/-scm/-git/-git.html","searchKeys":["Git","constructor(repo: String, owner: String)","dev.teogor.winds.api.provider.Scm.Git.Git"]},{"name":"constructor(repo: String, owner: String, domain: String)","description":"dev.teogor.winds.api.provider.Scm.Custom.Custom","location":"api/dev.teogor.winds.api.provider/-scm/-custom/-custom.html","searchKeys":["Custom","constructor(repo: String, owner: String, domain: String)","dev.teogor.winds.api.provider.Scm.Custom.Custom"]},{"name":"constructor(repo: String, owner: String, domain: String)","description":"dev.teogor.winds.api.provider.Scm.SVN.SVN","location":"api/dev.teogor.winds.api.provider/-scm/-s-v-n/-s-v-n.html","searchKeys":["SVN","constructor(repo: String, owner: String, domain: String)","dev.teogor.winds.api.provider.Scm.SVN.SVN"]},{"name":"constructor(repository: String, owner: String)","description":"dev.teogor.winds.api.Scm.GitHub.GitHub","location":"api/dev.teogor.winds.api/-scm/-git-hub/-git-hub.html","searchKeys":["GitHub","constructor(repository: String, owner: String)","dev.teogor.winds.api.Scm.GitHub.GitHub"]},{"name":"constructor(repository: String, owner: String)","description":"dev.teogor.winds.api.TicketSystem.GitHub.GitHub","location":"api/dev.teogor.winds.api/-ticket-system/-git-hub/-git-hub.html","searchKeys":["GitHub","constructor(repository: String, owner: String)","dev.teogor.winds.api.TicketSystem.GitHub.GitHub"]},{"name":"constructor(repository: String, owner: String, domain: String)","description":"dev.teogor.winds.api.Scm.Custom.Custom","location":"api/dev.teogor.winds.api/-scm/-custom/-custom.html","searchKeys":["Custom","constructor(repository: String, owner: String, domain: String)","dev.teogor.winds.api.Scm.Custom.Custom"]},{"name":"constructor(repository: String, owner: String, groupName: String? = null)","description":"dev.teogor.winds.api.Scm.GitLab.GitLab","location":"api/dev.teogor.winds.api/-scm/-git-lab/-git-lab.html","searchKeys":["GitLab","constructor(repository: String, owner: String, groupName: String? = null)","dev.teogor.winds.api.Scm.GitLab.GitLab"]},{"name":"constructor(repository: String, owner: String, workspaceName: String? = null)","description":"dev.teogor.winds.api.Scm.Bitbucket.Bitbucket","location":"api/dev.teogor.winds.api/-scm/-bitbucket/-bitbucket.html","searchKeys":["Bitbucket","constructor(repository: String, owner: String, workspaceName: String? = null)","dev.teogor.winds.api.Scm.Bitbucket.Bitbucket"]},{"name":"constructor(url: String = \"https://opensource.org/licenses/MIT\", distribution: Distribution = Distribution.Repo)","description":"dev.teogor.winds.api.License.MIT.MIT","location":"api/dev.teogor.winds.api/-license/-m-i-t/-m-i-t.html","searchKeys":["MIT","constructor(url: String = \"https://opensource.org/licenses/MIT\", distribution: Distribution = Distribution.Repo)","dev.teogor.winds.api.License.MIT.MIT"]},{"name":"constructor(url: String = \"https://www.apache.org/licenses/LICENSE-2.0\", distribution: Distribution = Distribution.Repo)","description":"dev.teogor.winds.api.License.Apache2.Apache2","location":"api/dev.teogor.winds.api/-license/-apache2/-apache2.html","searchKeys":["Apache2","constructor(url: String = \"https://www.apache.org/licenses/LICENSE-2.0\", distribution: Distribution = Distribution.Repo)","dev.teogor.winds.api.License.Apache2.Apache2"]},{"name":"constructor(url: String = \"https://www.gnu.org/licenses/gpl-3.0.en.html\", distribution: Distribution = Distribution.Repo)","description":"dev.teogor.winds.api.License.GPLv3.GPLv3","location":"api/dev.teogor.winds.api/-license/-g-p-lv3/-g-p-lv3.html","searchKeys":["GPLv3","constructor(url: String = \"https://www.gnu.org/licenses/gpl-3.0.en.html\", distribution: Distribution = Distribution.Repo)","dev.teogor.winds.api.License.GPLv3.GPLv3"]},{"name":"constructor(value: String)","description":"dev.teogor.winds.api.model.Path.Path","location":"api/dev.teogor.winds.api.model/-path/-path.html","searchKeys":["Path","constructor(value: String)","dev.teogor.winds.api.model.Path.Path"]},{"name":"constructor(version: Version, date: Long)","description":"dev.teogor.winds.api.model.BillOfMaterialsRecord.BillOfMaterialsRecord","location":"api/dev.teogor.winds.api.model/-bill-of-materials-record/-bill-of-materials-record.html","searchKeys":["BillOfMaterialsRecord","constructor(version: Version, date: Long)","dev.teogor.winds.api.model.BillOfMaterialsRecord.BillOfMaterialsRecord"]},{"name":"constructor(version: Version, date: Long)","description":"dev.teogor.winds.api.model.VersionedDependencyRecord.VersionedDependencyRecord","location":"api/dev.teogor.winds.api.model/-versioned-dependency-record/-versioned-dependency-record.html","searchKeys":["VersionedDependencyRecord","constructor(version: Version, date: Long)","dev.teogor.winds.api.model.VersionedDependencyRecord.VersionedDependencyRecord"]},{"name":"data class Apache2(val url: String = \"https://www.apache.org/licenses/LICENSE-2.0\", var distribution: Distribution = Distribution.Repo) : License","description":"dev.teogor.winds.api.License.Apache2","location":"api/dev.teogor.winds.api/-license/-apache2/index.html","searchKeys":["Apache2","data class Apache2(val url: String = \"https://www.apache.org/licenses/LICENSE-2.0\", var distribution: Distribution = Distribution.Repo) : License","dev.teogor.winds.api.License.Apache2"]},{"name":"data class ArtifactDescriptor(var group: String, var name: String, var version: Version, var artifactIdFormat: ArtifactIdFormat = ArtifactIdFormat.FULL, var nameFormat: NameFormat = NameFormat.FULL)","description":"dev.teogor.winds.api.ArtifactDescriptor","location":"api/dev.teogor.winds.api/-artifact-descriptor/index.html","searchKeys":["ArtifactDescriptor","data class ArtifactDescriptor(var group: String, var name: String, var version: Version, var artifactIdFormat: ArtifactIdFormat = ArtifactIdFormat.FULL, var nameFormat: NameFormat = NameFormat.FULL)","dev.teogor.winds.api.ArtifactDescriptor"]},{"name":"data class BillOfMaterialsRecord(val version: Version, val date: Long) : VersionedDependencyRecord","description":"dev.teogor.winds.api.model.BillOfMaterialsRecord","location":"api/dev.teogor.winds.api.model/-bill-of-materials-record/index.html","searchKeys":["BillOfMaterialsRecord","data class BillOfMaterialsRecord(val version: Version, val date: Long) : VersionedDependencyRecord","dev.teogor.winds.api.model.BillOfMaterialsRecord"]},{"name":"data class BinaryCompatibility(var enabled: Boolean = false, var baselineVersion: String = \"\", var failOnIncompatibleChanges: Boolean = false)","description":"dev.teogor.winds.api.BinaryCompatibility","location":"api/dev.teogor.winds.api/-binary-compatibility/index.html","searchKeys":["BinaryCompatibility","data class BinaryCompatibility(var enabled: Boolean = false, var baselineVersion: String = \"\", var failOnIncompatibleChanges: Boolean = false)","dev.teogor.winds.api.BinaryCompatibility"]},{"name":"data class Bitbucket(val repo: String, val owner: String) : Scm","description":"dev.teogor.winds.api.provider.Scm.Bitbucket","location":"api/dev.teogor.winds.api.provider/-scm/-bitbucket/index.html","searchKeys":["Bitbucket","data class Bitbucket(val repo: String, val owner: String) : Scm","dev.teogor.winds.api.provider.Scm.Bitbucket"]},{"name":"data class Bitbucket(var repository: String, var owner: String, var workspaceName: String? = null) : Scm","description":"dev.teogor.winds.api.Scm.Bitbucket","location":"api/dev.teogor.winds.api/-scm/-bitbucket/index.html","searchKeys":["Bitbucket","data class Bitbucket(var repository: String, var owner: String, var workspaceName: String? = null) : Scm","dev.teogor.winds.api.Scm.Bitbucket"]},{"name":"data class BomOptions(var acceptedModules: List<String> = emptyList(), var acceptedPaths: List<String> = emptyList())","description":"dev.teogor.winds.api.model.BomOptions","location":"api/dev.teogor.winds.api.model/-bom-options/index.html","searchKeys":["BomOptions","data class BomOptions(var acceptedModules: List<String> = emptyList(), var acceptedPaths: List<String> = emptyList())","dev.teogor.winds.api.model.BomOptions"]},{"name":"data class BomOptions(var excludedScopes: List<String> = emptyList(), var acceptedModules: List<String> = emptyList(), var acceptedPaths: List<String> = emptyList())","description":"dev.teogor.winds.api.BomOptions","location":"api/dev.teogor.winds.api/-bom-options/index.html","searchKeys":["BomOptions","data class BomOptions(var excludedScopes: List<String> = emptyList(), var acceptedModules: List<String> = emptyList(), var acceptedPaths: List<String> = emptyList())","dev.teogor.winds.api.BomOptions"]},{"name":"data class Bugzilla(var product: String, var component: String = \"\", var serverUrl: String) : TicketSystem","description":"dev.teogor.winds.api.TicketSystem.Bugzilla","location":"api/dev.teogor.winds.api/-ticket-system/-bugzilla/index.html","searchKeys":["Bugzilla","data class Bugzilla(var product: String, var component: String = \"\", var serverUrl: String) : TicketSystem","dev.teogor.winds.api.TicketSystem.Bugzilla"]},{"name":"data class Contributor(var name: String = \"\", var email: String = \"\", var url: String = \"\", var roles: List<String> = emptyList(), var timezone: String = \"\", var organization: String = \"\", var organizationUrl: String = \"\", var properties: Map<String, String> = emptyMap()) : Person","description":"dev.teogor.winds.api.Person.Contributor","location":"api/dev.teogor.winds.api/-person/-contributor/index.html","searchKeys":["Contributor","data class Contributor(var name: String = \"\", var email: String = \"\", var url: String = \"\", var roles: List<String> = emptyList(), var timezone: String = \"\", var organization: String = \"\", var organizationUrl: String = \"\", var properties: Map<String, String> = emptyMap()) : Person","dev.teogor.winds.api.Person.Contributor"]},{"name":"data class ContributorImpl(val name: String = \"\", val email: String = \"\", val url: String = \"\", val organization: String = \"\", val organizationUrl: String = \"\", val roles: List<String> = emptyList(), val timezone: String = \"\", val properties: Map<String, String> = emptyMap()) : Contributor","description":"dev.teogor.winds.api.util.ContributorImpl","location":"api/dev.teogor.winds.api.util/-contributor-impl/index.html","searchKeys":["ContributorImpl","data class ContributorImpl(val name: String = \"\", val email: String = \"\", val url: String = \"\", val organization: String = \"\", val organizationUrl: String = \"\", val roles: List<String> = emptyList(), val timezone: String = \"\", val properties: Map<String, String> = emptyMap()) : Contributor","dev.teogor.winds.api.util.ContributorImpl"]},{"name":"data class Custom(val name: String, val url: String, var distribution: Distribution = Distribution.Repo, var comments: String? = null) : License","description":"dev.teogor.winds.api.License.Custom","location":"api/dev.teogor.winds.api/-license/-custom/index.html","searchKeys":["Custom","data class Custom(val name: String, val url: String, var distribution: Distribution = Distribution.Repo, var comments: String? = null) : License","dev.teogor.winds.api.License.Custom"]},{"name":"data class Custom(val repo: String, val owner: String, val domain: String) : Scm","description":"dev.teogor.winds.api.provider.Scm.Custom","location":"api/dev.teogor.winds.api.provider/-scm/-custom/index.html","searchKeys":["Custom","data class Custom(val repo: String, val owner: String, val domain: String) : Scm","dev.teogor.winds.api.provider.Scm.Custom"]},{"name":"data class Custom(var repository: String, var owner: String, var domain: String) : Scm","description":"dev.teogor.winds.api.Scm.Custom","location":"api/dev.teogor.winds.api/-scm/-custom/index.html","searchKeys":["Custom","data class Custom(var repository: String, var owner: String, var domain: String) : Scm","dev.teogor.winds.api.Scm.Custom"]},{"name":"data class CustomExplicit(val connection: String, val developerConnection: String, val url: String) : Scm","description":"dev.teogor.winds.api.provider.Scm.CustomExplicit","location":"api/dev.teogor.winds.api.provider/-scm/-custom-explicit/index.html","searchKeys":["CustomExplicit","data class CustomExplicit(val connection: String, val developerConnection: String, val url: String) : Scm","dev.teogor.winds.api.provider.Scm.CustomExplicit"]},{"name":"data class CustomExplicit(var connection: String, var developerConnection: String, var repository: String, var owner: String, var repositoryUrl: String) : Scm","description":"dev.teogor.winds.api.Scm.CustomExplicit","location":"api/dev.teogor.winds.api/-scm/-custom-explicit/index.html","searchKeys":["CustomExplicit","data class CustomExplicit(var connection: String, var developerConnection: String, var repository: String, var owner: String, var repositoryUrl: String) : Scm","dev.teogor.winds.api.Scm.CustomExplicit"]},{"name":"data class Dependency(val group: String, val artifact: String, val version: String) : DependencyDefinition","description":"dev.teogor.winds.api.model.Dependency","location":"api/dev.teogor.winds.api.model/-dependency/index.html","searchKeys":["Dependency","data class Dependency(val group: String, val artifact: String, val version: String) : DependencyDefinition","dev.teogor.winds.api.model.Dependency"]},{"name":"data class Developer(var id: String = \"\", var name: String = \"\", var email: String = \"\", var url: String = \"\", var roles: List<String> = emptyList(), var timezone: String = \"\", var organization: String = \"\", var organizationUrl: String = \"\", var properties: Map<String, String> = emptyMap()) : Person","description":"dev.teogor.winds.api.Person.Developer","location":"api/dev.teogor.winds.api/-person/-developer/index.html","searchKeys":["Developer","data class Developer(var id: String = \"\", var name: String = \"\", var email: String = \"\", var url: String = \"\", var roles: List<String> = emptyList(), var timezone: String = \"\", var organization: String = \"\", var organizationUrl: String = \"\", var properties: Map<String, String> = emptyMap()) : Person","dev.teogor.winds.api.Person.Developer"]},{"name":"data class DeveloperContributor(var id: String = \"\", var name: String = \"\", var email: String = \"\", var url: String = \"\", var roles: List<String> = emptyList(), var timezone: String = \"\", var organization: String = \"\", var organizationUrl: String = \"\", var properties: Map<String, String> = emptyMap()) : Person","description":"dev.teogor.winds.api.Person.DeveloperContributor","location":"api/dev.teogor.winds.api/-person/-developer-contributor/index.html","searchKeys":["DeveloperContributor","data class DeveloperContributor(var id: String = \"\", var name: String = \"\", var email: String = \"\", var url: String = \"\", var roles: List<String> = emptyList(), var timezone: String = \"\", var organization: String = \"\", var organizationUrl: String = \"\", var properties: Map<String, String> = emptyMap()) : Person","dev.teogor.winds.api.Person.DeveloperContributor"]},{"name":"data class DeveloperImpl(var id: String = \"\", var name: String = \"\", var email: String = \"\", var url: String = \"\", var roles: List<String> = emptyList(), var timezone: String = \"\", var organization: String = \"\", var organizationUrl: String = \"\") : Developer","description":"dev.teogor.winds.api.util.DeveloperImpl","location":"api/dev.teogor.winds.api.util/-developer-impl/index.html","searchKeys":["DeveloperImpl","data class DeveloperImpl(var id: String = \"\", var name: String = \"\", var email: String = \"\", var url: String = \"\", var roles: List<String> = emptyList(), var timezone: String = \"\", var organization: String = \"\", var organizationUrl: String = \"\") : Developer","dev.teogor.winds.api.util.DeveloperImpl"]},{"name":"data class DokkaOptions(var enabled: Boolean = false, var outputDirectory: String = \"\", var sourceDirectories: List<String> = emptyList(), var additionalIncludes: List<String> = emptyList())","description":"dev.teogor.winds.api.DokkaOptions","location":"api/dev.teogor.winds.api/-dokka-options/index.html","searchKeys":["DokkaOptions","data class DokkaOptions(var enabled: Boolean = false, var outputDirectory: String = \"\", var sourceDirectories: List<String> = emptyList(), var additionalIncludes: List<String> = emptyList())","dev.teogor.winds.api.DokkaOptions"]},{"name":"data class GPLv3(val url: String = \"https://www.gnu.org/licenses/gpl-3.0.en.html\", var distribution: Distribution = Distribution.Repo) : License","description":"dev.teogor.winds.api.License.GPLv3","location":"api/dev.teogor.winds.api/-license/-g-p-lv3/index.html","searchKeys":["GPLv3","data class GPLv3(val url: String = \"https://www.gnu.org/licenses/gpl-3.0.en.html\", var distribution: Distribution = Distribution.Repo) : License","dev.teogor.winds.api.License.GPLv3"]},{"name":"data class Git(val repo: String, val owner: String) : Scm","description":"dev.teogor.winds.api.provider.Scm.Git","location":"api/dev.teogor.winds.api.provider/-scm/-git/index.html","searchKeys":["Git","data class Git(val repo: String, val owner: String) : Scm","dev.teogor.winds.api.provider.Scm.Git"]},{"name":"data class GitHub(var repository: String, var owner: String) : Scm","description":"dev.teogor.winds.api.Scm.GitHub","location":"api/dev.teogor.winds.api/-scm/-git-hub/index.html","searchKeys":["GitHub","data class GitHub(var repository: String, var owner: String) : Scm","dev.teogor.winds.api.Scm.GitHub"]},{"name":"data class GitHub(var repository: String, var owner: String) : TicketSystem","description":"dev.teogor.winds.api.TicketSystem.GitHub","location":"api/dev.teogor.winds.api/-ticket-system/-git-hub/index.html","searchKeys":["GitHub","data class GitHub(var repository: String, var owner: String) : TicketSystem","dev.teogor.winds.api.TicketSystem.GitHub"]},{"name":"data class GitLab(var project: String, var group: String = \"\") : TicketSystem","description":"dev.teogor.winds.api.TicketSystem.GitLab","location":"api/dev.teogor.winds.api/-ticket-system/-git-lab/index.html","searchKeys":["GitLab","data class GitLab(var project: String, var group: String = \"\") : TicketSystem","dev.teogor.winds.api.TicketSystem.GitLab"]},{"name":"data class GitLab(var repository: String, var owner: String, var groupName: String? = null) : Scm","description":"dev.teogor.winds.api.Scm.GitLab","location":"api/dev.teogor.winds.api/-scm/-git-lab/index.html","searchKeys":["GitLab","data class GitLab(var repository: String, var owner: String, var groupName: String? = null) : Scm","dev.teogor.winds.api.Scm.GitLab"]},{"name":"data class Jira(var projectKey: String, var serverUrl: String = \"https://issues.atlassian.com\") : TicketSystem","description":"dev.teogor.winds.api.TicketSystem.Jira","location":"api/dev.teogor.winds.api/-ticket-system/-jira/index.html","searchKeys":["Jira","data class Jira(var projectKey: String, var serverUrl: String = \"https://issues.atlassian.com\") : TicketSystem","dev.teogor.winds.api.TicketSystem.Jira"]},{"name":"data class Local(val path: String) : Scm","description":"dev.teogor.winds.api.provider.Scm.Local","location":"api/dev.teogor.winds.api.provider/-scm/-local/index.html","searchKeys":["Local","data class Local(val path: String) : Scm","dev.teogor.winds.api.provider.Scm.Local"]},{"name":"data class Local(var path: String, var repository: String, var owner: String) : Scm","description":"dev.teogor.winds.api.Scm.Local","location":"api/dev.teogor.winds.api/-scm/-local/index.html","searchKeys":["Local","data class Local(var path: String, var repository: String, var owner: String) : Scm","dev.teogor.winds.api.Scm.Local"]},{"name":"data class LocalProjectDependency(val projectName: String, val modulePath: String) : DependencyDefinition","description":"dev.teogor.winds.api.model.LocalProjectDependency","location":"api/dev.teogor.winds.api.model/-local-project-dependency/index.html","searchKeys":["LocalProjectDependency","data class LocalProjectDependency(val projectName: String, val modulePath: String) : DependencyDefinition","dev.teogor.winds.api.model.LocalProjectDependency"]},{"name":"data class MIT(val url: String = \"https://opensource.org/licenses/MIT\", var distribution: Distribution = Distribution.Repo) : License","description":"dev.teogor.winds.api.License.MIT","location":"api/dev.teogor.winds.api/-license/-m-i-t/index.html","searchKeys":["MIT","data class MIT(val url: String = \"https://opensource.org/licenses/MIT\", var distribution: Distribution = Distribution.Repo) : License","dev.teogor.winds.api.License.MIT"]},{"name":"data class ModuleDependencyRecord(val module: String, val version: Version, val date: Long) : VersionedDependencyRecord","description":"dev.teogor.winds.api.model.ModuleDependencyRecord","location":"api/dev.teogor.winds.api.model/-module-dependency-record/index.html","searchKeys":["ModuleDependencyRecord","data class ModuleDependencyRecord(val module: String, val version: Version, val date: Long) : VersionedDependencyRecord","dev.teogor.winds.api.model.ModuleDependencyRecord"]},{"name":"data class ModuleDescriptor(val name: String, val path: Path, val artifact: ArtifactDescriptor, val dependencies: List<ArtifactDescriptor>, val publish: Boolean, val isBom: Boolean, val completeName: String, val description: String?, val documentationBuilder: DocumentationBuilder, val ticketSystem: TicketSystem?, val scm: Scm?)","description":"dev.teogor.winds.api.model.ModuleDescriptor","location":"api/dev.teogor.winds.api.model/-module-descriptor/index.html","searchKeys":["ModuleDescriptor","data class ModuleDescriptor(val name: String, val path: Path, val artifact: ArtifactDescriptor, val dependencies: List<ArtifactDescriptor>, val publish: Boolean, val isBom: Boolean, val completeName: String, val description: String?, val documentationBuilder: DocumentationBuilder, val ticketSystem: TicketSystem?, val scm: Scm?)","dev.teogor.winds.api.model.ModuleDescriptor"]},{"name":"data class ModuleInfo(val completeName: String, val name: String, val displayName: String, val description: String, val groupId: String, val artifactId: String, val version: Version, val path: String, val dependencies: List<DependencyDefinition>, val canBePublished: Boolean, val names: List<String>)","description":"dev.teogor.winds.api.model.ModuleInfo","location":"api/dev.teogor.winds.api.model/-module-info/index.html","searchKeys":["ModuleInfo","data class ModuleInfo(val completeName: String, val name: String, val displayName: String, val description: String, val groupId: String, val artifactId: String, val version: Version, val path: String, val dependencies: List<DependencyDefinition>, val canBePublished: Boolean, val names: List<String>)","dev.teogor.winds.api.model.ModuleInfo"]},{"name":"data class ModuleMetadataDefault(val completeName: String, val name: String, val artifactId: String, val version: Version, val canBePublished: Boolean)","description":"dev.teogor.winds.api.model.ModuleMetadataDefault","location":"api/dev.teogor.winds.api.model/-module-metadata-default/index.html","searchKeys":["ModuleMetadataDefault","data class ModuleMetadataDefault(val completeName: String, val name: String, val artifactId: String, val version: Version, val canBePublished: Boolean)","dev.teogor.winds.api.model.ModuleMetadataDefault"]},{"name":"data class Path(val value: String)","description":"dev.teogor.winds.api.model.Path","location":"api/dev.teogor.winds.api.model/-path/index.html","searchKeys":["Path","data class Path(val value: String)","dev.teogor.winds.api.model.Path"]},{"name":"data class Redmine(var projectId: String, var baseUrl: String) : TicketSystem","description":"dev.teogor.winds.api.TicketSystem.Redmine","location":"api/dev.teogor.winds.api/-ticket-system/-redmine/index.html","searchKeys":["Redmine","data class Redmine(var projectId: String, var baseUrl: String) : TicketSystem","dev.teogor.winds.api.TicketSystem.Redmine"]},{"name":"data class SVN(val repo: String, val owner: String, val domain: String) : Scm","description":"dev.teogor.winds.api.provider.Scm.SVN","location":"api/dev.teogor.winds.api.provider/-scm/-s-v-n/index.html","searchKeys":["SVN","data class SVN(val repo: String, val owner: String, val domain: String) : Scm","dev.teogor.winds.api.provider.Scm.SVN"]},{"name":"data class SpotlessOptions(var enabled: Boolean = false, var format: String = \"\", var includeFiles: List<String> = emptyList(), var excludeFiles: List<String> = emptyList())","description":"dev.teogor.winds.api.SpotlessOptions","location":"api/dev.teogor.winds.api/-spotless-options/index.html","searchKeys":["SpotlessOptions","data class SpotlessOptions(var enabled: Boolean = false, var format: String = \"\", var includeFiles: List<String> = emptyList(), var excludeFiles: List<String> = emptyList())","dev.teogor.winds.api.SpotlessOptions"]},{"name":"data class Version(val major: Int, val minor: Int, val patch: Int, var flag: ReleaseStatus = ReleaseStatus.Stable, var isDeprecated: Boolean = false, versionQualifier: Int = 0, versionQualifierPadding: Int = 2) : Comparable<Version> ","description":"dev.teogor.winds.api.model.Version","location":"api/dev.teogor.winds.api.model/-version/index.html","searchKeys":["Version","data class Version(val major: Int, val minor: Int, val patch: Int, var flag: ReleaseStatus = ReleaseStatus.Stable, var isDeprecated: Boolean = false, versionQualifier: Int = 0, versionQualifierPadding: Int = 2) : Comparable<Version> ","dev.teogor.winds.api.model.Version"]},{"name":"enum ArtifactIdFormat : Enum<ArtifactIdFormat> ","description":"dev.teogor.winds.api.ArtifactIdFormat","location":"api/dev.teogor.winds.api/-artifact-id-format/index.html","searchKeys":["ArtifactIdFormat","enum ArtifactIdFormat : Enum<ArtifactIdFormat> ","dev.teogor.winds.api.ArtifactIdFormat"]},{"name":"enum DependencyType : Enum<DependencyType> ","description":"dev.teogor.winds.api.model.DependencyType","location":"api/dev.teogor.winds.api.model/-dependency-type/index.html","searchKeys":["DependencyType","enum DependencyType : Enum<DependencyType> ","dev.teogor.winds.api.model.DependencyType"]},{"name":"enum LicenseType : Enum<LicenseType> ","description":"dev.teogor.winds.api.model.LicenseType","location":"api/dev.teogor.winds.api.model/-license-type/index.html","searchKeys":["LicenseType","enum LicenseType : Enum<LicenseType> ","dev.teogor.winds.api.model.LicenseType"]},{"name":"enum NameFormat : Enum<NameFormat> ","description":"dev.teogor.winds.api.NameFormat","location":"api/dev.teogor.winds.api/-name-format/index.html","searchKeys":["NameFormat","enum NameFormat : Enum<NameFormat> ","dev.teogor.winds.api.NameFormat"]},{"name":"enum ReleaseStatus : Enum<ReleaseStatus> ","description":"dev.teogor.winds.api.ReleaseStatus","location":"api/dev.teogor.winds.api/-release-status/index.html","searchKeys":["ReleaseStatus","enum ReleaseStatus : Enum<ReleaseStatus> ","dev.teogor.winds.api.ReleaseStatus"]},{"name":"enum WindsFeature : Enum<WindsFeature> ","description":"dev.teogor.winds.api.model.WindsFeature","location":"api/dev.teogor.winds.api.model/-winds-feature/index.html","searchKeys":["WindsFeature","enum WindsFeature : Enum<WindsFeature> ","dev.teogor.winds.api.model.WindsFeature"]},{"name":"fun <T : License> List<T>.filterNonEmptyLicenses(): List<T>","description":"dev.teogor.winds.ktx.filterNonEmptyLicenses","location":"api/dev.teogor.winds.ktx/filter-non-empty-licenses.html","searchKeys":["filterNonEmptyLicenses","fun <T : License> List<T>.filterNonEmptyLicenses(): List<T>","dev.teogor.winds.ktx.filterNonEmptyLicenses"]},{"name":"fun <T : Person> List<T>.filterContributors(): List<T>","description":"dev.teogor.winds.ktx.filterContributors","location":"api/dev.teogor.winds.ktx/filter-contributors.html","searchKeys":["filterContributors","fun <T : Person> List<T>.filterContributors(): List<T>","dev.teogor.winds.ktx.filterContributors"]},{"name":"fun <T : Person> List<T>.filterDevelopers(): List<T>","description":"dev.teogor.winds.ktx.filterDevelopers","location":"api/dev.teogor.winds.ktx/filter-developers.html","searchKeys":["filterDevelopers","fun <T : Person> List<T>.filterDevelopers(): List<T>","dev.teogor.winds.ktx.filterDevelopers"]},{"name":"fun <T> Collection<T>.hasDuplicates(): Boolean","description":"dev.teogor.winds.ktx.hasDuplicates","location":"api/dev.teogor.winds.ktx/has-duplicates.html","searchKeys":["hasDuplicates","fun <T> Collection<T>.hasDuplicates(): Boolean","dev.teogor.winds.ktx.hasDuplicates"]},{"name":"fun ArtifactDescriptor.getShowcaseCoordinates(): String","description":"dev.teogor.winds.ktx.getShowcaseCoordinates","location":"api/dev.teogor.winds.ktx/get-showcase-coordinates.html","searchKeys":["getShowcaseCoordinates","fun ArtifactDescriptor.getShowcaseCoordinates(): String","dev.teogor.winds.ktx.getShowcaseCoordinates"]},{"name":"fun Iterable<ModuleDescriptor>.groupByModule(): Map<String?, List<ModuleDescriptor>>","description":"dev.teogor.winds.ktx.groupByModule","location":"api/dev.teogor.winds.ktx/group-by-module.html","searchKeys":["groupByModule","fun Iterable<ModuleDescriptor>.groupByModule(): Map<String?, List<ModuleDescriptor>>","dev.teogor.winds.ktx.groupByModule"]},{"name":"fun ModuleMetadata.copyVersion(block: Version.VersionBuilder.() -> Unit = {}): Version","description":"dev.teogor.winds.ktx.copyVersion","location":"api/dev.teogor.winds.ktx/copy-version.html","searchKeys":["copyVersion","fun ModuleMetadata.copyVersion(block: Version.VersionBuilder.() -> Unit = {}): Version","dev.teogor.winds.ktx.copyVersion"]},{"name":"fun MutableList<ModuleInfo>.bom(): ModuleInfo?","description":"dev.teogor.winds.ktx.bom","location":"api/dev.teogor.winds.ktx/bom.html","searchKeys":["bom","fun MutableList<ModuleInfo>.bom(): ModuleInfo?","dev.teogor.winds.ktx.bom"]},{"name":"fun MutableList<ModuleInfo>.sortByPath(): MutableList<ModuleInfo>","description":"dev.teogor.winds.ktx.sortByPath","location":"api/dev.teogor.winds.ktx/sort-by-path.html","searchKeys":["sortByPath","fun MutableList<ModuleInfo>.sortByPath(): MutableList<ModuleInfo>","dev.teogor.winds.ktx.sortByPath"]},{"name":"fun Project.hasPublishGradlePlugin(): Boolean","description":"dev.teogor.winds.ktx.hasPublishGradlePlugin","location":"api/dev.teogor.winds.ktx/has-publish-gradle-plugin.html","searchKeys":["hasPublishGradlePlugin","fun Project.hasPublishGradlePlugin(): Boolean","dev.teogor.winds.ktx.hasPublishGradlePlugin"]},{"name":"fun Project.hasWindsPlugin(): Boolean","description":"dev.teogor.winds.ktx.hasWindsPlugin","location":"api/dev.teogor.winds.ktx/has-winds-plugin.html","searchKeys":["hasWindsPlugin","fun Project.hasWindsPlugin(): Boolean","dev.teogor.winds.ktx.hasWindsPlugin"]},{"name":"fun Project.inheritFromParentWinds(winds: Winds)","description":"dev.teogor.winds.ktx.inheritFromParentWinds","location":"api/dev.teogor.winds.ktx/inherit-from-parent-winds.html","searchKeys":["inheritFromParentWinds","fun Project.inheritFromParentWinds(winds: Winds)","dev.teogor.winds.ktx.inheritFromParentWinds"]},{"name":"fun Project.isRootProject(): Boolean","description":"dev.teogor.winds.ktx.isRootProject","location":"api/dev.teogor.winds.ktx/is-root-project.html","searchKeys":["isRootProject","fun Project.isRootProject(): Boolean","dev.teogor.winds.ktx.isRootProject"]},{"name":"fun Scm.validate(): Scm","description":"dev.teogor.winds.ktx.validate","location":"api/dev.teogor.winds.ktx/validate.html","searchKeys":["validate","fun Scm.validate(): Scm","dev.teogor.winds.ktx.validate"]},{"name":"fun String.sanitizeArtifactId(): String","description":"dev.teogor.winds.ktx.sanitizeArtifactId","location":"api/dev.teogor.winds.ktx/sanitize-artifact-id.html","searchKeys":["sanitizeArtifactId","fun String.sanitizeArtifactId(): String","dev.teogor.winds.ktx.sanitizeArtifactId"]},{"name":"fun String.toValidArtifactId(): String","description":"dev.teogor.winds.ktx.toValidArtifactId","location":"api/dev.teogor.winds.ktx/to-valid-artifact-id.html","searchKeys":["toValidArtifactId","fun String.toValidArtifactId(): String","dev.teogor.winds.ktx.toValidArtifactId"]},{"name":"fun String.validateAndFormatArtifactId(): String","description":"dev.teogor.winds.ktx.validateAndFormatArtifactId","location":"api/dev.teogor.winds.ktx/validate-and-format-artifact-id.html","searchKeys":["validateAndFormatArtifactId","fun String.validateAndFormatArtifactId(): String","dev.teogor.winds.ktx.validateAndFormatArtifactId"]},{"name":"fun TicketSystem.validate(): TicketSystem","description":"dev.teogor.winds.ktx.validate","location":"api/dev.teogor.winds.ktx/validate.html","searchKeys":["validate","fun TicketSystem.validate(): TicketSystem","dev.teogor.winds.ktx.validate"]},{"name":"fun Version.getEmoji(): String?","description":"dev.teogor.winds.ktx.getEmoji","location":"api/dev.teogor.winds.ktx/get-emoji.html","searchKeys":["getEmoji","fun Version.getEmoji(): String?","dev.teogor.winds.ktx.getEmoji"]},{"name":"fun addArtifact(vararg artifact: ArtifactDescriptor)","description":"dev.teogor.winds.api.ArtifactDescriptor.addArtifact","location":"api/dev.teogor.winds.api/-artifact-descriptor/add-artifact.html","searchKeys":["addArtifact","fun addArtifact(vararg artifact: ArtifactDescriptor)","dev.teogor.winds.api.ArtifactDescriptor.addArtifact"]},{"name":"fun alphaRelease(version: Int): Version.VersionBuilder","description":"dev.teogor.winds.api.model.Version.VersionBuilder.alphaRelease","location":"api/dev.teogor.winds.api.model/-version/-version-builder/alpha-release.html","searchKeys":["alphaRelease","fun alphaRelease(version: Int): Version.VersionBuilder","dev.teogor.winds.api.model.Version.VersionBuilder.alphaRelease"]},{"name":"fun asPartialLocalPath(): String","description":"dev.teogor.winds.api.model.Path.asPartialLocalPath","location":"api/dev.teogor.winds.api.model/-path/as-partial-local-path.html","searchKeys":["asPartialLocalPath","fun asPartialLocalPath(): String","dev.teogor.winds.api.model.Path.asPartialLocalPath"]},{"name":"fun betaRelease(version: Int): Version.VersionBuilder","description":"dev.teogor.winds.api.model.Version.VersionBuilder.betaRelease","location":"api/dev.teogor.winds.api.model/-version/-version-builder/beta-release.html","searchKeys":["betaRelease","fun betaRelease(version: Int): Version.VersionBuilder","dev.teogor.winds.api.model.Version.VersionBuilder.betaRelease"]},{"name":"fun build(): Version","description":"dev.teogor.winds.api.model.Version.VersionBuilder.build","location":"api/dev.teogor.winds.api.model/-version/-version-builder/build.html","searchKeys":["build","fun build(): Version","dev.teogor.winds.api.model.Version.VersionBuilder.build"]},{"name":"fun createVersion(major: Int, minor: Int, patch: Int, block: Version.VersionBuilder.() -> Unit = {}): Version","description":"dev.teogor.winds.ktx.createVersion","location":"api/dev.teogor.winds.ktx/create-version.html","searchKeys":["createVersion","fun createVersion(major: Int, minor: Int, patch: Int, block: Version.VersionBuilder.() -> Unit = {}): Version","dev.teogor.winds.ktx.createVersion"]},{"name":"fun default(type: KClass<out Person>): Person?","description":"dev.teogor.winds.api.Person.Companion.default","location":"api/dev.teogor.winds.api/-person/-companion/default.html","searchKeys":["default","fun default(type: KClass<out Person>): Person?","dev.teogor.winds.api.Person.Companion.default"]},{"name":"fun default(type: KClass<out Scm>): Scm?","description":"dev.teogor.winds.api.Scm.Companion.default","location":"api/dev.teogor.winds.api/-scm/-companion/default.html","searchKeys":["default","fun default(type: KClass<out Scm>): Scm?","dev.teogor.winds.api.Scm.Companion.default"]},{"name":"fun default(type: KClass<out TicketSystem>): TicketSystem?","description":"dev.teogor.winds.api.TicketSystem.Companion.default","location":"api/dev.teogor.winds.api/-ticket-system/-companion/default.html","searchKeys":["default","fun default(type: KClass<out TicketSystem>): TicketSystem?","dev.teogor.winds.api.TicketSystem.Companion.default"]},{"name":"fun fixPath(path: String): String","description":"dev.teogor.winds.api.model.Path.Companion.fixPath","location":"api/dev.teogor.winds.api.model/-path/-companion/fix-path.html","searchKeys":["fixPath","fun fixPath(path: String): String","dev.teogor.winds.api.model.Path.Companion.fixPath"]},{"name":"fun from(project: Project): Path","description":"dev.teogor.winds.api.model.Path.Companion.from","location":"api/dev.teogor.winds.api.model/-path/-companion/from.html","searchKeys":["from","fun from(project: Project): Path","dev.teogor.winds.api.model.Path.Companion.from"]},{"name":"fun from(root: String, newPath: String): Path","description":"dev.teogor.winds.api.model.Path.Companion.from","location":"api/dev.teogor.winds.api.model/-path/-companion/from.html","searchKeys":["from","fun from(root: String, newPath: String): Path","dev.teogor.winds.api.model.Path.Companion.from"]},{"name":"fun from(versionString: String): Version?","description":"dev.teogor.winds.api.model.Version.Companion.from","location":"api/dev.teogor.winds.api.model/-version/-companion/from.html","searchKeys":["from","fun from(versionString: String): Version?","dev.teogor.winds.api.model.Version.Companion.from"]},{"name":"fun isRoot(): Boolean","description":"dev.teogor.winds.api.model.Path.isRoot","location":"api/dev.teogor.winds.api.model/-path/is-root.html","searchKeys":["isRoot","fun isRoot(): Boolean","dev.teogor.winds.api.model.Path.isRoot"]},{"name":"fun moduleMetadataException(message: String): Nothing","description":"dev.teogor.winds.api.util.moduleMetadataException","location":"api/dev.teogor.winds.api.util/module-metadata-exception.html","searchKeys":["moduleMetadataException","fun moduleMetadataException(message: String): Nothing","dev.teogor.winds.api.util.moduleMetadataException"]},{"name":"fun setIsDeprecated(): Version.VersionBuilder","description":"dev.teogor.winds.api.model.Version.VersionBuilder.setIsDeprecated","location":"api/dev.teogor.winds.api.model/-version/-version-builder/set-is-deprecated.html","searchKeys":["setIsDeprecated","fun setIsDeprecated(): Version.VersionBuilder","dev.teogor.winds.api.model.Version.VersionBuilder.setIsDeprecated"]},{"name":"fun toBuilder(): Version.VersionBuilder","description":"dev.teogor.winds.api.model.Version.toBuilder","location":"api/dev.teogor.winds.api.model/-version/to-builder.html","searchKeys":["toBuilder","fun toBuilder(): Version.VersionBuilder","dev.teogor.winds.api.model.Version.toBuilder"]},{"name":"fun valueOf(value: String): ArtifactIdFormat","description":"dev.teogor.winds.api.ArtifactIdFormat.valueOf","location":"api/dev.teogor.winds.api/-artifact-id-format/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ArtifactIdFormat","dev.teogor.winds.api.ArtifactIdFormat.valueOf"]},{"name":"fun valueOf(value: String): DependencyType","description":"dev.teogor.winds.api.model.DependencyType.valueOf","location":"api/dev.teogor.winds.api.model/-dependency-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): DependencyType","dev.teogor.winds.api.model.DependencyType.valueOf"]},{"name":"fun valueOf(value: String): LicenseType","description":"dev.teogor.winds.api.model.LicenseType.valueOf","location":"api/dev.teogor.winds.api.model/-license-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): LicenseType","dev.teogor.winds.api.model.LicenseType.valueOf"]},{"name":"fun valueOf(value: String): NameFormat","description":"dev.teogor.winds.api.NameFormat.valueOf","location":"api/dev.teogor.winds.api/-name-format/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): NameFormat","dev.teogor.winds.api.NameFormat.valueOf"]},{"name":"fun valueOf(value: String): ReleaseStatus","description":"dev.teogor.winds.api.ReleaseStatus.valueOf","location":"api/dev.teogor.winds.api/-release-status/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ReleaseStatus","dev.teogor.winds.api.ReleaseStatus.valueOf"]},{"name":"fun valueOf(value: String): WindsFeature","description":"dev.teogor.winds.api.model.WindsFeature.valueOf","location":"api/dev.teogor.winds.api.model/-winds-feature/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): WindsFeature","dev.teogor.winds.api.model.WindsFeature.valueOf"]},{"name":"fun values(): Array<ArtifactIdFormat>","description":"dev.teogor.winds.api.ArtifactIdFormat.values","location":"api/dev.teogor.winds.api/-artifact-id-format/values.html","searchKeys":["values","fun values(): Array<ArtifactIdFormat>","dev.teogor.winds.api.ArtifactIdFormat.values"]},{"name":"fun values(): Array<DependencyType>","description":"dev.teogor.winds.api.model.DependencyType.values","location":"api/dev.teogor.winds.api.model/-dependency-type/values.html","searchKeys":["values","fun values(): Array<DependencyType>","dev.teogor.winds.api.model.DependencyType.values"]},{"name":"fun values(): Array<LicenseType>","description":"dev.teogor.winds.api.model.LicenseType.values","location":"api/dev.teogor.winds.api.model/-license-type/values.html","searchKeys":["values","fun values(): Array<LicenseType>","dev.teogor.winds.api.model.LicenseType.values"]},{"name":"fun values(): Array<NameFormat>","description":"dev.teogor.winds.api.NameFormat.values","location":"api/dev.teogor.winds.api/-name-format/values.html","searchKeys":["values","fun values(): Array<NameFormat>","dev.teogor.winds.api.NameFormat.values"]},{"name":"fun values(): Array<ReleaseStatus>","description":"dev.teogor.winds.api.ReleaseStatus.values","location":"api/dev.teogor.winds.api/-release-status/values.html","searchKeys":["values","fun values(): Array<ReleaseStatus>","dev.teogor.winds.api.ReleaseStatus.values"]},{"name":"fun values(): Array<WindsFeature>","description":"dev.teogor.winds.api.model.WindsFeature.values","location":"api/dev.teogor.winds.api.model/-winds-feature/values.html","searchKeys":["values","fun values(): Array<WindsFeature>","dev.teogor.winds.api.model.WindsFeature.values"]},{"name":"fun versionOf(block: Version.VersionBuilder.() -> Unit): Version","description":"dev.teogor.winds.ktx.versionOf","location":"api/dev.teogor.winds.ktx/version-of.html","searchKeys":["versionOf","fun versionOf(block: Version.VersionBuilder.() -> Unit): Version","dev.teogor.winds.ktx.versionOf"]},{"name":"fun versionQualifier(versionQualifier: Int): Version.VersionBuilder","description":"dev.teogor.winds.api.model.Version.VersionBuilder.versionQualifier","location":"api/dev.teogor.winds.api.model/-version/-version-builder/version-qualifier.html","searchKeys":["versionQualifier","fun versionQualifier(versionQualifier: Int): Version.VersionBuilder","dev.teogor.winds.api.model.Version.VersionBuilder.versionQualifier"]},{"name":"fun versionQualifierPadding(versionQualifierPadding: Int): Version.VersionBuilder","description":"dev.teogor.winds.api.model.Version.VersionBuilder.versionQualifierPadding","location":"api/dev.teogor.winds.api.model/-version/-version-builder/version-qualifier-padding.html","searchKeys":["versionQualifierPadding","fun versionQualifierPadding(versionQualifierPadding: Int): Version.VersionBuilder","dev.teogor.winds.api.model.Version.VersionBuilder.versionQualifierPadding"]},{"name":"fun writeMkDocs(mkDocsPath: String, section: String, version: String)","description":"dev.teogor.winds.api.docs.DocsModuleHandler.writeMkDocs","location":"api/dev.teogor.winds.api.docs/-docs-module-handler/write-mk-docs.html","searchKeys":["writeMkDocs","fun writeMkDocs(mkDocsPath: String, section: String, version: String)","dev.teogor.winds.api.docs.DocsModuleHandler.writeMkDocs"]},{"name":"infix fun File.directory(path: String): File","description":"dev.teogor.winds.gradle.tasks.BaseGeneratorTask.directory","location":"api/dev.teogor.winds.gradle.tasks/-base-generator-task/directory.html","searchKeys":["directory","infix fun File.directory(path: String): File","dev.teogor.winds.gradle.tasks.BaseGeneratorTask.directory"]},{"name":"infix fun File.directory(path: String): File","description":"dev.teogor.winds.ktx.directory","location":"api/dev.teogor.winds.ktx/directory.html","searchKeys":["directory","infix fun File.directory(path: String): File","dev.teogor.winds.ktx.directory"]},{"name":"infix fun File.file(path: String): File","description":"dev.teogor.winds.gradle.tasks.BaseGeneratorTask.file","location":"api/dev.teogor.winds.gradle.tasks/-base-generator-task/file.html","searchKeys":["file","infix fun File.file(path: String): File","dev.teogor.winds.gradle.tasks.BaseGeneratorTask.file"]},{"name":"infix fun File.file(path: String): File","description":"dev.teogor.winds.ktx.file","location":"api/dev.teogor.winds.ktx/file.html","searchKeys":["file","infix fun File.file(path: String): File","dev.teogor.winds.ktx.file"]},{"name":"infix fun File.read(block: BufferedReader.() -> Unit)","description":"dev.teogor.winds.gradle.tasks.BaseGeneratorTask.read","location":"api/dev.teogor.winds.gradle.tasks/-base-generator-task/read.html","searchKeys":["read","infix fun File.read(block: BufferedReader.() -> Unit)","dev.teogor.winds.gradle.tasks.BaseGeneratorTask.read"]},{"name":"infix fun File.read(block: BufferedReader.() -> Unit)","description":"dev.teogor.winds.ktx.read","location":"api/dev.teogor.winds.ktx/read.html","searchKeys":["read","infix fun File.read(block: BufferedReader.() -> Unit)","dev.teogor.winds.ktx.read"]},{"name":"infix fun File.write(block: BufferedWriter.() -> Unit)","description":"dev.teogor.winds.gradle.tasks.BaseGeneratorTask.write","location":"api/dev.teogor.winds.gradle.tasks/-base-generator-task/write.html","searchKeys":["write","infix fun File.write(block: BufferedWriter.() -> Unit)","dev.teogor.winds.gradle.tasks.BaseGeneratorTask.write"]},{"name":"infix fun File.write(block: BufferedWriter.() -> Unit)","description":"dev.teogor.winds.ktx.write","location":"api/dev.teogor.winds.ktx/write.html","searchKeys":["write","infix fun File.write(block: BufferedWriter.() -> Unit)","dev.teogor.winds.ktx.write"]},{"name":"inline fun <T : Person> ModuleMetadata.person(noinline block: T.() -> Unit)","description":"dev.teogor.winds.ktx.person","location":"api/dev.teogor.winds.ktx/person.html","searchKeys":["person","inline fun <T : Person> ModuleMetadata.person(noinline block: T.() -> Unit)","dev.teogor.winds.ktx.person"]},{"name":"inline fun <T : Person> default(): Person?","description":"dev.teogor.winds.api.Person.Companion.default","location":"api/dev.teogor.winds.api/-person/-companion/default.html","searchKeys":["default","inline fun <T : Person> default(): Person?","dev.teogor.winds.api.Person.Companion.default"]},{"name":"inline fun <T : Scm> ModuleMetadata.scm(noinline block: T.() -> Unit)","description":"dev.teogor.winds.ktx.scm","location":"api/dev.teogor.winds.ktx/scm.html","searchKeys":["scm","inline fun <T : Scm> ModuleMetadata.scm(noinline block: T.() -> Unit)","dev.teogor.winds.ktx.scm"]},{"name":"inline fun <T : Scm> default(): Scm?","description":"dev.teogor.winds.api.Scm.Companion.default","location":"api/dev.teogor.winds.api/-scm/-companion/default.html","searchKeys":["default","inline fun <T : Scm> default(): Scm?","dev.teogor.winds.api.Scm.Companion.default"]},{"name":"inline fun <T : TicketSystem> ModuleMetadata.ticketSystem(noinline block: T.() -> Unit)","description":"dev.teogor.winds.ktx.ticketSystem","location":"api/dev.teogor.winds.ktx/ticket-system.html","searchKeys":["ticketSystem","inline fun <T : TicketSystem> ModuleMetadata.ticketSystem(noinline block: T.() -> Unit)","dev.teogor.winds.ktx.ticketSystem"]},{"name":"inline fun <T : TicketSystem> default(): TicketSystem?","description":"dev.teogor.winds.api.TicketSystem.Companion.default","location":"api/dev.teogor.winds.api/-ticket-system/-companion/default.html","searchKeys":["default","inline fun <T : TicketSystem> default(): TicketSystem?","dev.teogor.winds.api.TicketSystem.Companion.default"]},{"name":"inline fun Project.processProjectsWithWinds(includeRoot: Boolean = false, crossinline action: Project.() -> Unit)","description":"dev.teogor.winds.ktx.processProjectsWithWinds","location":"api/dev.teogor.winds.ktx/process-projects-with-winds.html","searchKeys":["processProjectsWithWinds","inline fun Project.processProjectsWithWinds(includeRoot: Boolean = false, crossinline action: Project.() -> Unit)","dev.teogor.winds.ktx.processProjectsWithWinds"]},{"name":"inline operator fun <T> Winds.getValue(thisRef: Nothing?, property: KProperty<*>): T","description":"dev.teogor.winds.ktx.getValue","location":"api/dev.teogor.winds.ktx/get-value.html","searchKeys":["getValue","inline operator fun <T> Winds.getValue(thisRef: Nothing?, property: KProperty<*>): T","dev.teogor.winds.ktx.getValue"]},{"name":"inline operator fun <T> WindsLegacy.getValue(thisRef: Nothing?, property: KProperty<*>): T","description":"dev.teogor.winds.api.getValue","location":"api/dev.teogor.winds.api/get-value.html","searchKeys":["getValue","inline operator fun <T> WindsLegacy.getValue(thisRef: Nothing?, property: KProperty<*>): T","dev.teogor.winds.api.getValue"]},{"name":"interface BaseWindsPlugin : Plugin<Project> ","description":"dev.teogor.winds.gradle.BaseWindsPlugin","location":"api/dev.teogor.winds.gradle/-base-winds-plugin/index.html","searchKeys":["BaseWindsPlugin","interface BaseWindsPlugin : Plugin<Project> ","dev.teogor.winds.gradle.BaseWindsPlugin"]},{"name":"interface BuildFeatures","description":"dev.teogor.winds.api.BuildFeatures","location":"api/dev.teogor.winds.api/-build-features/index.html","searchKeys":["BuildFeatures","interface BuildFeatures","dev.teogor.winds.api.BuildFeatures"]},{"name":"interface CodeGen","description":"dev.teogor.winds.api.CodeGen","location":"api/dev.teogor.winds.api/-code-gen/index.html","searchKeys":["CodeGen","interface CodeGen","dev.teogor.winds.api.CodeGen"]},{"name":"interface CodebaseOptions","description":"dev.teogor.winds.api.CodebaseOptions","location":"api/dev.teogor.winds.api/-codebase-options/index.html","searchKeys":["CodebaseOptions","interface CodebaseOptions","dev.teogor.winds.api.CodebaseOptions"]},{"name":"interface Contributor","description":"dev.teogor.winds.api.model.Contributor","location":"api/dev.teogor.winds.api.model/-contributor/index.html","searchKeys":["Contributor","interface Contributor","dev.teogor.winds.api.model.Contributor"]},{"name":"interface DependencyDefinition","description":"dev.teogor.winds.api.model.DependencyDefinition","location":"api/dev.teogor.winds.api.model/-dependency-definition/index.html","searchKeys":["DependencyDefinition","interface DependencyDefinition","dev.teogor.winds.api.model.DependencyDefinition"]},{"name":"interface Developer","description":"dev.teogor.winds.api.model.Developer","location":"api/dev.teogor.winds.api.model/-developer/index.html","searchKeys":["Developer","interface Developer","dev.teogor.winds.api.model.Developer"]},{"name":"interface Distribution","description":"dev.teogor.winds.api.Distribution","location":"api/dev.teogor.winds.api/-distribution/index.html","searchKeys":["Distribution","interface Distribution","dev.teogor.winds.api.Distribution"]},{"name":"interface DocsGenerator : TaskBuilder","description":"dev.teogor.winds.api.DocsGenerator","location":"api/dev.teogor.winds.api/-docs-generator/index.html","searchKeys":["DocsGenerator","interface DocsGenerator : TaskBuilder","dev.teogor.winds.api.DocsGenerator"]},{"name":"interface DocumentationBuilder","description":"dev.teogor.winds.api.DocumentationBuilder","location":"api/dev.teogor.winds.api/-documentation-builder/index.html","searchKeys":["DocumentationBuilder","interface DocumentationBuilder","dev.teogor.winds.api.DocumentationBuilder"]},{"name":"interface License","description":"dev.teogor.winds.api.License","location":"api/dev.teogor.winds.api/-license/index.html","searchKeys":["License","interface License","dev.teogor.winds.api.License"]},{"name":"interface MavenPublish","description":"dev.teogor.winds.api.MavenPublish","location":"api/dev.teogor.winds.api/-maven-publish/index.html","searchKeys":["MavenPublish","interface MavenPublish","dev.teogor.winds.api.MavenPublish"]},{"name":"interface ModuleMetadata","description":"dev.teogor.winds.api.ModuleMetadata","location":"api/dev.teogor.winds.api/-module-metadata/index.html","searchKeys":["ModuleMetadata","interface ModuleMetadata","dev.teogor.winds.api.ModuleMetadata"]},{"name":"interface Person","description":"dev.teogor.winds.api.Person","location":"api/dev.teogor.winds.api/-person/index.html","searchKeys":["Person","interface Person","dev.teogor.winds.api.Person"]},{"name":"interface PublishingOptions","description":"dev.teogor.winds.api.PublishingOptions","location":"api/dev.teogor.winds.api/-publishing-options/index.html","searchKeys":["PublishingOptions","interface PublishingOptions","dev.teogor.winds.api.PublishingOptions"]},{"name":"interface Scm","description":"dev.teogor.winds.api.Scm","location":"api/dev.teogor.winds.api/-scm/index.html","searchKeys":["Scm","interface Scm","dev.teogor.winds.api.Scm"]},{"name":"interface Scm","description":"dev.teogor.winds.api.provider.Scm","location":"api/dev.teogor.winds.api.provider/-scm/index.html","searchKeys":["Scm","interface Scm","dev.teogor.winds.api.provider.Scm"]},{"name":"interface TaskBuilder","description":"dev.teogor.winds.api.TaskBuilder","location":"api/dev.teogor.winds.api/-task-builder/index.html","searchKeys":["TaskBuilder","interface TaskBuilder","dev.teogor.winds.api.TaskBuilder"]},{"name":"interface TicketSystem","description":"dev.teogor.winds.api.TicketSystem","location":"api/dev.teogor.winds.api/-ticket-system/index.html","searchKeys":["TicketSystem","interface TicketSystem","dev.teogor.winds.api.TicketSystem"]},{"name":"interface Winds","description":"dev.teogor.winds.api.Winds","location":"api/dev.teogor.winds.api/-winds/index.html","searchKeys":["Winds","interface Winds","dev.teogor.winds.api.Winds"]},{"name":"interface WindsFeatures","description":"dev.teogor.winds.api.WindsFeatures","location":"api/dev.teogor.winds.api/-winds-features/index.html","searchKeys":["WindsFeatures","interface WindsFeatures","dev.teogor.winds.api.WindsFeatures"]},{"name":"interface WindsLegacy","description":"dev.teogor.winds.api.WindsLegacy","location":"api/dev.teogor.winds.api/-winds-legacy/index.html","searchKeys":["WindsLegacy","interface WindsLegacy","dev.teogor.winds.api.WindsLegacy"]},{"name":"interface WorkflowSynthesizer : TaskBuilder","description":"dev.teogor.winds.api.WorkflowSynthesizer","location":"api/dev.teogor.winds.api/-workflow-synthesizer/index.html","searchKeys":["WorkflowSynthesizer","interface WorkflowSynthesizer : TaskBuilder","dev.teogor.winds.api.WorkflowSynthesizer"]},{"name":"object Binaries : Distribution","description":"dev.teogor.winds.api.Distribution.Binaries","location":"api/dev.teogor.winds.api/-distribution/-binaries/index.html","searchKeys":["Binaries","object Binaries : Distribution","dev.teogor.winds.api.Distribution.Binaries"]},{"name":"object Companion","description":"dev.teogor.winds.api.Person.Companion","location":"api/dev.teogor.winds.api/-person/-companion/index.html","searchKeys":["Companion","object Companion","dev.teogor.winds.api.Person.Companion"]},{"name":"object Companion","description":"dev.teogor.winds.api.Scm.Companion","location":"api/dev.teogor.winds.api/-scm/-companion/index.html","searchKeys":["Companion","object Companion","dev.teogor.winds.api.Scm.Companion"]},{"name":"object Companion","description":"dev.teogor.winds.api.TicketSystem.Companion","location":"api/dev.teogor.winds.api/-ticket-system/-companion/index.html","searchKeys":["Companion","object Companion","dev.teogor.winds.api.TicketSystem.Companion"]},{"name":"object Companion","description":"dev.teogor.winds.api.model.Path.Companion","location":"api/dev.teogor.winds.api.model/-path/-companion/index.html","searchKeys":["Companion","object Companion","dev.teogor.winds.api.model.Path.Companion"]},{"name":"object Companion","description":"dev.teogor.winds.api.model.Version.Companion","location":"api/dev.teogor.winds.api.model/-version/-companion/index.html","searchKeys":["Companion","object Companion","dev.teogor.winds.api.model.Version.Companion"]},{"name":"object Default : Scm","description":"dev.teogor.winds.api.Scm.Default","location":"api/dev.teogor.winds.api/-scm/-default/index.html","searchKeys":["Default","object Default : Scm","dev.teogor.winds.api.Scm.Default"]},{"name":"object Default : TicketSystem","description":"dev.teogor.winds.api.TicketSystem.Default","location":"api/dev.teogor.winds.api/-ticket-system/-default/index.html","searchKeys":["Default","object Default : TicketSystem","dev.teogor.winds.api.TicketSystem.Default"]},{"name":"object Doc : Distribution","description":"dev.teogor.winds.api.Distribution.Doc","location":"api/dev.teogor.winds.api/-distribution/-doc/index.html","searchKeys":["Doc","object Doc : Distribution","dev.teogor.winds.api.Distribution.Doc"]},{"name":"object Emojis","description":"dev.teogor.winds.api.util.Emojis","location":"api/dev.teogor.winds.api.util/-emojis/index.html","searchKeys":["Emojis","object Emojis","dev.teogor.winds.api.util.Emojis"]},{"name":"object None : License","description":"dev.teogor.winds.api.License.None","location":"api/dev.teogor.winds.api/-license/-none/index.html","searchKeys":["None","object None : License","dev.teogor.winds.api.License.None"]},{"name":"object Repo : Distribution","description":"dev.teogor.winds.api.Distribution.Repo","location":"api/dev.teogor.winds.api/-distribution/-repo/index.html","searchKeys":["Repo","object Repo : Distribution","dev.teogor.winds.api.Distribution.Repo"]},{"name":"object Source : Distribution","description":"dev.teogor.winds.api.Distribution.Source","location":"api/dev.teogor.winds.api/-distribution/-source/index.html","searchKeys":["Source","object Source : Distribution","dev.teogor.winds.api.Distribution.Source"]},{"name":"open class ModuleMetadataException(message: String) : RuntimeException","description":"dev.teogor.winds.api.util.ModuleMetadataException","location":"api/dev.teogor.winds.api.util/-module-metadata-exception/index.html","searchKeys":["ModuleMetadataException","open class ModuleMetadataException(message: String) : RuntimeException","dev.teogor.winds.api.util.ModuleMetadataException"]},{"name":"open fun hasVersionControl(): Boolean","description":"dev.teogor.winds.api.Scm.hasVersionControl","location":"api/dev.teogor.winds.api/-scm/has-version-control.html","searchKeys":["hasVersionControl","open fun hasVersionControl(): Boolean","dev.teogor.winds.api.Scm.hasVersionControl"]},{"name":"open fun isContributor(): Boolean","description":"dev.teogor.winds.api.Person.isContributor","location":"api/dev.teogor.winds.api/-person/is-contributor.html","searchKeys":["isContributor","open fun isContributor(): Boolean","dev.teogor.winds.api.Person.isContributor"]},{"name":"open fun isDeveloper(): Boolean","description":"dev.teogor.winds.api.Person.isDeveloper","location":"api/dev.teogor.winds.api/-person/is-developer.html","searchKeys":["isDeveloper","open fun isDeveloper(): Boolean","dev.teogor.winds.api.Person.isDeveloper"]},{"name":"open infix fun isEnabled(feature: WindsFeature): Boolean","description":"dev.teogor.winds.api.Winds.isEnabled","location":"api/dev.teogor.winds.api/-winds/is-enabled.html","searchKeys":["isEnabled","open infix fun isEnabled(feature: WindsFeature): Boolean","dev.teogor.winds.api.Winds.isEnabled"]},{"name":"open infix fun isEnabled(feature: WindsFeature): Boolean","description":"dev.teogor.winds.api.WindsLegacy.isEnabled","location":"api/dev.teogor.winds.api/-winds-legacy/is-enabled.html","searchKeys":["isEnabled","open infix fun isEnabled(feature: WindsFeature): Boolean","dev.teogor.winds.api.WindsLegacy.isEnabled"]},{"name":"open operator override fun compareTo(other: Version): Int","description":"dev.teogor.winds.api.model.Version.compareTo","location":"api/dev.teogor.winds.api.model/-version/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: Version): Int","dev.teogor.winds.api.model.Version.compareTo"]},{"name":"open override fun toString(): String","description":"dev.teogor.winds.api.model.Version.toString","location":"api/dev.teogor.winds.api.model/-version/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.teogor.winds.api.model.Version.toString"]},{"name":"open override val abbreviation: String","description":"dev.teogor.winds.api.Distribution.Binaries.abbreviation","location":"api/dev.teogor.winds.api/-distribution/-binaries/abbreviation.html","searchKeys":["abbreviation","open override val abbreviation: String","dev.teogor.winds.api.Distribution.Binaries.abbreviation"]},{"name":"open override val abbreviation: String","description":"dev.teogor.winds.api.Distribution.Doc.abbreviation","location":"api/dev.teogor.winds.api/-distribution/-doc/abbreviation.html","searchKeys":["abbreviation","open override val abbreviation: String","dev.teogor.winds.api.Distribution.Doc.abbreviation"]},{"name":"open override val abbreviation: String","description":"dev.teogor.winds.api.Distribution.Repo.abbreviation","location":"api/dev.teogor.winds.api/-distribution/-repo/abbreviation.html","searchKeys":["abbreviation","open override val abbreviation: String","dev.teogor.winds.api.Distribution.Repo.abbreviation"]},{"name":"open override val abbreviation: String","description":"dev.teogor.winds.api.Distribution.Source.abbreviation","location":"api/dev.teogor.winds.api/-distribution/-source/abbreviation.html","searchKeys":["abbreviation","open override val abbreviation: String","dev.teogor.winds.api.Distribution.Source.abbreviation"]},{"name":"open override val connection: String","description":"dev.teogor.winds.api.Scm.Bitbucket.connection","location":"api/dev.teogor.winds.api/-scm/-bitbucket/connection.html","searchKeys":["connection","open override val connection: String","dev.teogor.winds.api.Scm.Bitbucket.connection"]},{"name":"open override val connection: String","description":"dev.teogor.winds.api.Scm.Custom.connection","location":"api/dev.teogor.winds.api/-scm/-custom/connection.html","searchKeys":["connection","open override val connection: String","dev.teogor.winds.api.Scm.Custom.connection"]},{"name":"open override val connection: String","description":"dev.teogor.winds.api.Scm.GitHub.connection","location":"api/dev.teogor.winds.api/-scm/-git-hub/connection.html","searchKeys":["connection","open override val connection: String","dev.teogor.winds.api.Scm.GitHub.connection"]},{"name":"open override val connection: String","description":"dev.teogor.winds.api.Scm.GitLab.connection","location":"api/dev.teogor.winds.api/-scm/-git-lab/connection.html","searchKeys":["connection","open override val connection: String","dev.teogor.winds.api.Scm.GitLab.connection"]},{"name":"open override val connection: String","description":"dev.teogor.winds.api.Scm.Local.connection","location":"api/dev.teogor.winds.api/-scm/-local/connection.html","searchKeys":["connection","open override val connection: String","dev.teogor.winds.api.Scm.Local.connection"]},{"name":"open override val connection: String","description":"dev.teogor.winds.api.provider.Scm.Bitbucket.connection","location":"api/dev.teogor.winds.api.provider/-scm/-bitbucket/connection.html","searchKeys":["connection","open override val connection: String","dev.teogor.winds.api.provider.Scm.Bitbucket.connection"]},{"name":"open override val connection: String","description":"dev.teogor.winds.api.provider.Scm.Custom.connection","location":"api/dev.teogor.winds.api.provider/-scm/-custom/connection.html","searchKeys":["connection","open override val connection: String","dev.teogor.winds.api.provider.Scm.Custom.connection"]},{"name":"open override val connection: String","description":"dev.teogor.winds.api.provider.Scm.CustomExplicit.connection","location":"api/dev.teogor.winds.api.provider/-scm/-custom-explicit/connection.html","searchKeys":["connection","open override val connection: String","dev.teogor.winds.api.provider.Scm.CustomExplicit.connection"]},{"name":"open override val connection: String","description":"dev.teogor.winds.api.provider.Scm.Git.connection","location":"api/dev.teogor.winds.api.provider/-scm/-git/connection.html","searchKeys":["connection","open override val connection: String","dev.teogor.winds.api.provider.Scm.Git.connection"]},{"name":"open override val connection: String","description":"dev.teogor.winds.api.provider.Scm.Local.connection","location":"api/dev.teogor.winds.api.provider/-scm/-local/connection.html","searchKeys":["connection","open override val connection: String","dev.teogor.winds.api.provider.Scm.Local.connection"]},{"name":"open override val connection: String","description":"dev.teogor.winds.api.provider.Scm.SVN.connection","location":"api/dev.teogor.winds.api.provider/-scm/-s-v-n/connection.html","searchKeys":["connection","open override val connection: String","dev.teogor.winds.api.provider.Scm.SVN.connection"]},{"name":"open override val date: Long","description":"dev.teogor.winds.api.model.BillOfMaterialsRecord.date","location":"api/dev.teogor.winds.api.model/-bill-of-materials-record/date.html","searchKeys":["date","open override val date: Long","dev.teogor.winds.api.model.BillOfMaterialsRecord.date"]},{"name":"open override val date: Long","description":"dev.teogor.winds.api.model.ModuleDependencyRecord.date","location":"api/dev.teogor.winds.api.model/-module-dependency-record/date.html","searchKeys":["date","open override val date: Long","dev.teogor.winds.api.model.ModuleDependencyRecord.date"]},{"name":"open override val developerConnection: String","description":"dev.teogor.winds.api.Scm.Bitbucket.developerConnection","location":"api/dev.teogor.winds.api/-scm/-bitbucket/developer-connection.html","searchKeys":["developerConnection","open override val developerConnection: String","dev.teogor.winds.api.Scm.Bitbucket.developerConnection"]},{"name":"open override val developerConnection: String","description":"dev.teogor.winds.api.Scm.Custom.developerConnection","location":"api/dev.teogor.winds.api/-scm/-custom/developer-connection.html","searchKeys":["developerConnection","open override val developerConnection: String","dev.teogor.winds.api.Scm.Custom.developerConnection"]},{"name":"open override val developerConnection: String","description":"dev.teogor.winds.api.Scm.GitHub.developerConnection","location":"api/dev.teogor.winds.api/-scm/-git-hub/developer-connection.html","searchKeys":["developerConnection","open override val developerConnection: String","dev.teogor.winds.api.Scm.GitHub.developerConnection"]},{"name":"open override val developerConnection: String","description":"dev.teogor.winds.api.Scm.GitLab.developerConnection","location":"api/dev.teogor.winds.api/-scm/-git-lab/developer-connection.html","searchKeys":["developerConnection","open override val developerConnection: String","dev.teogor.winds.api.Scm.GitLab.developerConnection"]},{"name":"open override val developerConnection: String","description":"dev.teogor.winds.api.Scm.Local.developerConnection","location":"api/dev.teogor.winds.api/-scm/-local/developer-connection.html","searchKeys":["developerConnection","open override val developerConnection: String","dev.teogor.winds.api.Scm.Local.developerConnection"]},{"name":"open override val developerConnection: String","description":"dev.teogor.winds.api.provider.Scm.Bitbucket.developerConnection","location":"api/dev.teogor.winds.api.provider/-scm/-bitbucket/developer-connection.html","searchKeys":["developerConnection","open override val developerConnection: String","dev.teogor.winds.api.provider.Scm.Bitbucket.developerConnection"]},{"name":"open override val developerConnection: String","description":"dev.teogor.winds.api.provider.Scm.Custom.developerConnection","location":"api/dev.teogor.winds.api.provider/-scm/-custom/developer-connection.html","searchKeys":["developerConnection","open override val developerConnection: String","dev.teogor.winds.api.provider.Scm.Custom.developerConnection"]},{"name":"open override val developerConnection: String","description":"dev.teogor.winds.api.provider.Scm.CustomExplicit.developerConnection","location":"api/dev.teogor.winds.api.provider/-scm/-custom-explicit/developer-connection.html","searchKeys":["developerConnection","open override val developerConnection: String","dev.teogor.winds.api.provider.Scm.CustomExplicit.developerConnection"]},{"name":"open override val developerConnection: String","description":"dev.teogor.winds.api.provider.Scm.Git.developerConnection","location":"api/dev.teogor.winds.api.provider/-scm/-git/developer-connection.html","searchKeys":["developerConnection","open override val developerConnection: String","dev.teogor.winds.api.provider.Scm.Git.developerConnection"]},{"name":"open override val developerConnection: String","description":"dev.teogor.winds.api.provider.Scm.Local.developerConnection","location":"api/dev.teogor.winds.api.provider/-scm/-local/developer-connection.html","searchKeys":["developerConnection","open override val developerConnection: String","dev.teogor.winds.api.provider.Scm.Local.developerConnection"]},{"name":"open override val developerConnection: String","description":"dev.teogor.winds.api.provider.Scm.SVN.developerConnection","location":"api/dev.teogor.winds.api.provider/-scm/-s-v-n/developer-connection.html","searchKeys":["developerConnection","open override val developerConnection: String","dev.teogor.winds.api.provider.Scm.SVN.developerConnection"]},{"name":"open override val distribution: Distribution","description":"dev.teogor.winds.api.License.None.distribution","location":"api/dev.teogor.winds.api/-license/-none/distribution.html","searchKeys":["distribution","open override val distribution: Distribution","dev.teogor.winds.api.License.None.distribution"]},{"name":"open override val email: String","description":"dev.teogor.winds.api.util.ContributorImpl.email","location":"api/dev.teogor.winds.api.util/-contributor-impl/email.html","searchKeys":["email","open override val email: String","dev.teogor.winds.api.util.ContributorImpl.email"]},{"name":"open override val name: String","description":"dev.teogor.winds.api.Distribution.Binaries.name","location":"api/dev.teogor.winds.api/-distribution/-binaries/name.html","searchKeys":["name","open override val name: String","dev.teogor.winds.api.Distribution.Binaries.name"]},{"name":"open override val name: String","description":"dev.teogor.winds.api.Distribution.Doc.name","location":"api/dev.teogor.winds.api/-distribution/-doc/name.html","searchKeys":["name","open override val name: String","dev.teogor.winds.api.Distribution.Doc.name"]},{"name":"open override val name: String","description":"dev.teogor.winds.api.Distribution.Repo.name","location":"api/dev.teogor.winds.api/-distribution/-repo/name.html","searchKeys":["name","open override val name: String","dev.teogor.winds.api.Distribution.Repo.name"]},{"name":"open override val name: String","description":"dev.teogor.winds.api.Distribution.Source.name","location":"api/dev.teogor.winds.api/-distribution/-source/name.html","searchKeys":["name","open override val name: String","dev.teogor.winds.api.Distribution.Source.name"]},{"name":"open override val name: String","description":"dev.teogor.winds.api.License.Apache2.name","location":"api/dev.teogor.winds.api/-license/-apache2/name.html","searchKeys":["name","open override val name: String","dev.teogor.winds.api.License.Apache2.name"]},{"name":"open override val name: String","description":"dev.teogor.winds.api.License.Custom.name","location":"api/dev.teogor.winds.api/-license/-custom/name.html","searchKeys":["name","open override val name: String","dev.teogor.winds.api.License.Custom.name"]},{"name":"open override val name: String","description":"dev.teogor.winds.api.License.GPLv3.name","location":"api/dev.teogor.winds.api/-license/-g-p-lv3/name.html","searchKeys":["name","open override val name: String","dev.teogor.winds.api.License.GPLv3.name"]},{"name":"open override val name: String","description":"dev.teogor.winds.api.License.MIT.name","location":"api/dev.teogor.winds.api/-license/-m-i-t/name.html","searchKeys":["name","open override val name: String","dev.teogor.winds.api.License.MIT.name"]},{"name":"open override val name: String","description":"dev.teogor.winds.api.License.None.name","location":"api/dev.teogor.winds.api/-license/-none/name.html","searchKeys":["name","open override val name: String","dev.teogor.winds.api.License.None.name"]},{"name":"open override val name: String","description":"dev.teogor.winds.api.util.ContributorImpl.name","location":"api/dev.teogor.winds.api.util/-contributor-impl/name.html","searchKeys":["name","open override val name: String","dev.teogor.winds.api.util.ContributorImpl.name"]},{"name":"open override val organization: String","description":"dev.teogor.winds.api.util.ContributorImpl.organization","location":"api/dev.teogor.winds.api.util/-contributor-impl/organization.html","searchKeys":["organization","open override val organization: String","dev.teogor.winds.api.util.ContributorImpl.organization"]},{"name":"open override val organizationUrl: String","description":"dev.teogor.winds.api.util.ContributorImpl.organizationUrl","location":"api/dev.teogor.winds.api.util/-contributor-impl/organization-url.html","searchKeys":["organizationUrl","open override val organizationUrl: String","dev.teogor.winds.api.util.ContributorImpl.organizationUrl"]},{"name":"open override val properties: Map<String, String>","description":"dev.teogor.winds.api.util.ContributorImpl.properties","location":"api/dev.teogor.winds.api.util/-contributor-impl/properties.html","searchKeys":["properties","open override val properties: Map<String, String>","dev.teogor.winds.api.util.ContributorImpl.properties"]},{"name":"open override val repositoryUrl: String","description":"dev.teogor.winds.api.Scm.Bitbucket.repositoryUrl","location":"api/dev.teogor.winds.api/-scm/-bitbucket/repository-url.html","searchKeys":["repositoryUrl","open override val repositoryUrl: String","dev.teogor.winds.api.Scm.Bitbucket.repositoryUrl"]},{"name":"open override val repositoryUrl: String","description":"dev.teogor.winds.api.Scm.Custom.repositoryUrl","location":"api/dev.teogor.winds.api/-scm/-custom/repository-url.html","searchKeys":["repositoryUrl","open override val repositoryUrl: String","dev.teogor.winds.api.Scm.Custom.repositoryUrl"]},{"name":"open override val repositoryUrl: String","description":"dev.teogor.winds.api.Scm.GitHub.repositoryUrl","location":"api/dev.teogor.winds.api/-scm/-git-hub/repository-url.html","searchKeys":["repositoryUrl","open override val repositoryUrl: String","dev.teogor.winds.api.Scm.GitHub.repositoryUrl"]},{"name":"open override val repositoryUrl: String","description":"dev.teogor.winds.api.Scm.GitLab.repositoryUrl","location":"api/dev.teogor.winds.api/-scm/-git-lab/repository-url.html","searchKeys":["repositoryUrl","open override val repositoryUrl: String","dev.teogor.winds.api.Scm.GitLab.repositoryUrl"]},{"name":"open override val repositoryUrl: String","description":"dev.teogor.winds.api.Scm.Local.repositoryUrl","location":"api/dev.teogor.winds.api/-scm/-local/repository-url.html","searchKeys":["repositoryUrl","open override val repositoryUrl: String","dev.teogor.winds.api.Scm.Local.repositoryUrl"]},{"name":"open override val roles: List<String>","description":"dev.teogor.winds.api.util.ContributorImpl.roles","location":"api/dev.teogor.winds.api.util/-contributor-impl/roles.html","searchKeys":["roles","open override val roles: List<String>","dev.teogor.winds.api.util.ContributorImpl.roles"]},{"name":"open override val system: String","description":"dev.teogor.winds.api.TicketSystem.Bugzilla.system","location":"api/dev.teogor.winds.api/-ticket-system/-bugzilla/system.html","searchKeys":["system","open override val system: String","dev.teogor.winds.api.TicketSystem.Bugzilla.system"]},{"name":"open override val system: String","description":"dev.teogor.winds.api.TicketSystem.GitHub.system","location":"api/dev.teogor.winds.api/-ticket-system/-git-hub/system.html","searchKeys":["system","open override val system: String","dev.teogor.winds.api.TicketSystem.GitHub.system"]},{"name":"open override val system: String","description":"dev.teogor.winds.api.TicketSystem.GitLab.system","location":"api/dev.teogor.winds.api/-ticket-system/-git-lab/system.html","searchKeys":["system","open override val system: String","dev.teogor.winds.api.TicketSystem.GitLab.system"]},{"name":"open override val system: String","description":"dev.teogor.winds.api.TicketSystem.Jira.system","location":"api/dev.teogor.winds.api/-ticket-system/-jira/system.html","searchKeys":["system","open override val system: String","dev.teogor.winds.api.TicketSystem.Jira.system"]},{"name":"open override val system: String","description":"dev.teogor.winds.api.TicketSystem.Redmine.system","location":"api/dev.teogor.winds.api/-ticket-system/-redmine/system.html","searchKeys":["system","open override val system: String","dev.teogor.winds.api.TicketSystem.Redmine.system"]},{"name":"open override val timezone: String","description":"dev.teogor.winds.api.util.ContributorImpl.timezone","location":"api/dev.teogor.winds.api.util/-contributor-impl/timezone.html","searchKeys":["timezone","open override val timezone: String","dev.teogor.winds.api.util.ContributorImpl.timezone"]},{"name":"open override val url: String","description":"dev.teogor.winds.api.License.Apache2.url","location":"api/dev.teogor.winds.api/-license/-apache2/url.html","searchKeys":["url","open override val url: String","dev.teogor.winds.api.License.Apache2.url"]},{"name":"open override val url: String","description":"dev.teogor.winds.api.License.Custom.url","location":"api/dev.teogor.winds.api/-license/-custom/url.html","searchKeys":["url","open override val url: String","dev.teogor.winds.api.License.Custom.url"]},{"name":"open override val url: String","description":"dev.teogor.winds.api.License.GPLv3.url","location":"api/dev.teogor.winds.api/-license/-g-p-lv3/url.html","searchKeys":["url","open override val url: String","dev.teogor.winds.api.License.GPLv3.url"]},{"name":"open override val url: String","description":"dev.teogor.winds.api.License.MIT.url","location":"api/dev.teogor.winds.api/-license/-m-i-t/url.html","searchKeys":["url","open override val url: String","dev.teogor.winds.api.License.MIT.url"]},{"name":"open override val url: String","description":"dev.teogor.winds.api.License.None.url","location":"api/dev.teogor.winds.api/-license/-none/url.html","searchKeys":["url","open override val url: String","dev.teogor.winds.api.License.None.url"]},{"name":"open override val url: String","description":"dev.teogor.winds.api.TicketSystem.Bugzilla.url","location":"api/dev.teogor.winds.api/-ticket-system/-bugzilla/url.html","searchKeys":["url","open override val url: String","dev.teogor.winds.api.TicketSystem.Bugzilla.url"]},{"name":"open override val url: String","description":"dev.teogor.winds.api.TicketSystem.GitHub.url","location":"api/dev.teogor.winds.api/-ticket-system/-git-hub/url.html","searchKeys":["url","open override val url: String","dev.teogor.winds.api.TicketSystem.GitHub.url"]},{"name":"open override val url: String","description":"dev.teogor.winds.api.TicketSystem.GitLab.url","location":"api/dev.teogor.winds.api/-ticket-system/-git-lab/url.html","searchKeys":["url","open override val url: String","dev.teogor.winds.api.TicketSystem.GitLab.url"]},{"name":"open override val url: String","description":"dev.teogor.winds.api.TicketSystem.Jira.url","location":"api/dev.teogor.winds.api/-ticket-system/-jira/url.html","searchKeys":["url","open override val url: String","dev.teogor.winds.api.TicketSystem.Jira.url"]},{"name":"open override val url: String","description":"dev.teogor.winds.api.TicketSystem.Redmine.url","location":"api/dev.teogor.winds.api/-ticket-system/-redmine/url.html","searchKeys":["url","open override val url: String","dev.teogor.winds.api.TicketSystem.Redmine.url"]},{"name":"open override val url: String","description":"dev.teogor.winds.api.provider.Scm.Bitbucket.url","location":"api/dev.teogor.winds.api.provider/-scm/-bitbucket/url.html","searchKeys":["url","open override val url: String","dev.teogor.winds.api.provider.Scm.Bitbucket.url"]},{"name":"open override val url: String","description":"dev.teogor.winds.api.provider.Scm.Custom.url","location":"api/dev.teogor.winds.api.provider/-scm/-custom/url.html","searchKeys":["url","open override val url: String","dev.teogor.winds.api.provider.Scm.Custom.url"]},{"name":"open override val url: String","description":"dev.teogor.winds.api.provider.Scm.CustomExplicit.url","location":"api/dev.teogor.winds.api.provider/-scm/-custom-explicit/url.html","searchKeys":["url","open override val url: String","dev.teogor.winds.api.provider.Scm.CustomExplicit.url"]},{"name":"open override val url: String","description":"dev.teogor.winds.api.provider.Scm.Git.url","location":"api/dev.teogor.winds.api.provider/-scm/-git/url.html","searchKeys":["url","open override val url: String","dev.teogor.winds.api.provider.Scm.Git.url"]},{"name":"open override val url: String","description":"dev.teogor.winds.api.provider.Scm.Local.url","location":"api/dev.teogor.winds.api.provider/-scm/-local/url.html","searchKeys":["url","open override val url: String","dev.teogor.winds.api.provider.Scm.Local.url"]},{"name":"open override val url: String","description":"dev.teogor.winds.api.provider.Scm.SVN.url","location":"api/dev.teogor.winds.api.provider/-scm/-s-v-n/url.html","searchKeys":["url","open override val url: String","dev.teogor.winds.api.provider.Scm.SVN.url"]},{"name":"open override val url: String","description":"dev.teogor.winds.api.util.ContributorImpl.url","location":"api/dev.teogor.winds.api.util/-contributor-impl/url.html","searchKeys":["url","open override val url: String","dev.teogor.winds.api.util.ContributorImpl.url"]},{"name":"open override val version: Version","description":"dev.teogor.winds.api.model.BillOfMaterialsRecord.version","location":"api/dev.teogor.winds.api.model/-bill-of-materials-record/version.html","searchKeys":["version","open override val version: Version","dev.teogor.winds.api.model.BillOfMaterialsRecord.version"]},{"name":"open override val version: Version","description":"dev.teogor.winds.api.model.ModuleDependencyRecord.version","location":"api/dev.teogor.winds.api.model/-module-dependency-record/version.html","searchKeys":["version","open override val version: Version","dev.teogor.winds.api.model.ModuleDependencyRecord.version"]},{"name":"open override var comments: String?","description":"dev.teogor.winds.api.License.Apache2.comments","location":"api/dev.teogor.winds.api/-license/-apache2/comments.html","searchKeys":["comments","open override var comments: String?","dev.teogor.winds.api.License.Apache2.comments"]},{"name":"open override var comments: String?","description":"dev.teogor.winds.api.License.Custom.comments","location":"api/dev.teogor.winds.api/-license/-custom/comments.html","searchKeys":["comments","open override var comments: String?","dev.teogor.winds.api.License.Custom.comments"]},{"name":"open override var comments: String?","description":"dev.teogor.winds.api.License.GPLv3.comments","location":"api/dev.teogor.winds.api/-license/-g-p-lv3/comments.html","searchKeys":["comments","open override var comments: String?","dev.teogor.winds.api.License.GPLv3.comments"]},{"name":"open override var comments: String?","description":"dev.teogor.winds.api.License.MIT.comments","location":"api/dev.teogor.winds.api/-license/-m-i-t/comments.html","searchKeys":["comments","open override var comments: String?","dev.teogor.winds.api.License.MIT.comments"]},{"name":"open override var comments: String?","description":"dev.teogor.winds.api.License.None.comments","location":"api/dev.teogor.winds.api/-license/-none/comments.html","searchKeys":["comments","open override var comments: String?","dev.teogor.winds.api.License.None.comments"]},{"name":"open override var connection: String","description":"dev.teogor.winds.api.Scm.CustomExplicit.connection","location":"api/dev.teogor.winds.api/-scm/-custom-explicit/connection.html","searchKeys":["connection","open override var connection: String","dev.teogor.winds.api.Scm.CustomExplicit.connection"]},{"name":"open override var connection: String","description":"dev.teogor.winds.api.Scm.Default.connection","location":"api/dev.teogor.winds.api/-scm/-default/connection.html","searchKeys":["connection","open override var connection: String","dev.teogor.winds.api.Scm.Default.connection"]},{"name":"open override var developerConnection: String","description":"dev.teogor.winds.api.Scm.CustomExplicit.developerConnection","location":"api/dev.teogor.winds.api/-scm/-custom-explicit/developer-connection.html","searchKeys":["developerConnection","open override var developerConnection: String","dev.teogor.winds.api.Scm.CustomExplicit.developerConnection"]},{"name":"open override var developerConnection: String","description":"dev.teogor.winds.api.Scm.Default.developerConnection","location":"api/dev.teogor.winds.api/-scm/-default/developer-connection.html","searchKeys":["developerConnection","open override var developerConnection: String","dev.teogor.winds.api.Scm.Default.developerConnection"]},{"name":"open override var distribution: Distribution","description":"dev.teogor.winds.api.License.Apache2.distribution","location":"api/dev.teogor.winds.api/-license/-apache2/distribution.html","searchKeys":["distribution","open override var distribution: Distribution","dev.teogor.winds.api.License.Apache2.distribution"]},{"name":"open override var distribution: Distribution","description":"dev.teogor.winds.api.License.Custom.distribution","location":"api/dev.teogor.winds.api/-license/-custom/distribution.html","searchKeys":["distribution","open override var distribution: Distribution","dev.teogor.winds.api.License.Custom.distribution"]},{"name":"open override var distribution: Distribution","description":"dev.teogor.winds.api.License.GPLv3.distribution","location":"api/dev.teogor.winds.api/-license/-g-p-lv3/distribution.html","searchKeys":["distribution","open override var distribution: Distribution","dev.teogor.winds.api.License.GPLv3.distribution"]},{"name":"open override var distribution: Distribution","description":"dev.teogor.winds.api.License.MIT.distribution","location":"api/dev.teogor.winds.api/-license/-m-i-t/distribution.html","searchKeys":["distribution","open override var distribution: Distribution","dev.teogor.winds.api.License.MIT.distribution"]},{"name":"open override var email: String","description":"dev.teogor.winds.api.Person.Contributor.email","location":"api/dev.teogor.winds.api/-person/-contributor/email.html","searchKeys":["email","open override var email: String","dev.teogor.winds.api.Person.Contributor.email"]},{"name":"open override var email: String","description":"dev.teogor.winds.api.Person.Developer.email","location":"api/dev.teogor.winds.api/-person/-developer/email.html","searchKeys":["email","open override var email: String","dev.teogor.winds.api.Person.Developer.email"]},{"name":"open override var email: String","description":"dev.teogor.winds.api.Person.DeveloperContributor.email","location":"api/dev.teogor.winds.api/-person/-developer-contributor/email.html","searchKeys":["email","open override var email: String","dev.teogor.winds.api.Person.DeveloperContributor.email"]},{"name":"open override var email: String","description":"dev.teogor.winds.api.util.DeveloperImpl.email","location":"api/dev.teogor.winds.api.util/-developer-impl/email.html","searchKeys":["email","open override var email: String","dev.teogor.winds.api.util.DeveloperImpl.email"]},{"name":"open override var id: String","description":"dev.teogor.winds.api.util.DeveloperImpl.id","location":"api/dev.teogor.winds.api.util/-developer-impl/id.html","searchKeys":["id","open override var id: String","dev.teogor.winds.api.util.DeveloperImpl.id"]},{"name":"open override var name: String","description":"dev.teogor.winds.api.Person.Contributor.name","location":"api/dev.teogor.winds.api/-person/-contributor/name.html","searchKeys":["name","open override var name: String","dev.teogor.winds.api.Person.Contributor.name"]},{"name":"open override var name: String","description":"dev.teogor.winds.api.Person.Developer.name","location":"api/dev.teogor.winds.api/-person/-developer/name.html","searchKeys":["name","open override var name: String","dev.teogor.winds.api.Person.Developer.name"]},{"name":"open override var name: String","description":"dev.teogor.winds.api.Person.DeveloperContributor.name","location":"api/dev.teogor.winds.api/-person/-developer-contributor/name.html","searchKeys":["name","open override var name: String","dev.teogor.winds.api.Person.DeveloperContributor.name"]},{"name":"open override var name: String","description":"dev.teogor.winds.api.util.DeveloperImpl.name","location":"api/dev.teogor.winds.api.util/-developer-impl/name.html","searchKeys":["name","open override var name: String","dev.teogor.winds.api.util.DeveloperImpl.name"]},{"name":"open override var organization: String","description":"dev.teogor.winds.api.Person.Contributor.organization","location":"api/dev.teogor.winds.api/-person/-contributor/organization.html","searchKeys":["organization","open override var organization: String","dev.teogor.winds.api.Person.Contributor.organization"]},{"name":"open override var organization: String","description":"dev.teogor.winds.api.Person.Developer.organization","location":"api/dev.teogor.winds.api/-person/-developer/organization.html","searchKeys":["organization","open override var organization: String","dev.teogor.winds.api.Person.Developer.organization"]},{"name":"open override var organization: String","description":"dev.teogor.winds.api.Person.DeveloperContributor.organization","location":"api/dev.teogor.winds.api/-person/-developer-contributor/organization.html","searchKeys":["organization","open override var organization: String","dev.teogor.winds.api.Person.DeveloperContributor.organization"]},{"name":"open override var organization: String","description":"dev.teogor.winds.api.util.DeveloperImpl.organization","location":"api/dev.teogor.winds.api.util/-developer-impl/organization.html","searchKeys":["organization","open override var organization: String","dev.teogor.winds.api.util.DeveloperImpl.organization"]},{"name":"open override var organizationUrl: String","description":"dev.teogor.winds.api.Person.Contributor.organizationUrl","location":"api/dev.teogor.winds.api/-person/-contributor/organization-url.html","searchKeys":["organizationUrl","open override var organizationUrl: String","dev.teogor.winds.api.Person.Contributor.organizationUrl"]},{"name":"open override var organizationUrl: String","description":"dev.teogor.winds.api.Person.Developer.organizationUrl","location":"api/dev.teogor.winds.api/-person/-developer/organization-url.html","searchKeys":["organizationUrl","open override var organizationUrl: String","dev.teogor.winds.api.Person.Developer.organizationUrl"]},{"name":"open override var organizationUrl: String","description":"dev.teogor.winds.api.Person.DeveloperContributor.organizationUrl","location":"api/dev.teogor.winds.api/-person/-developer-contributor/organization-url.html","searchKeys":["organizationUrl","open override var organizationUrl: String","dev.teogor.winds.api.Person.DeveloperContributor.organizationUrl"]},{"name":"open override var organizationUrl: String","description":"dev.teogor.winds.api.util.DeveloperImpl.organizationUrl","location":"api/dev.teogor.winds.api.util/-developer-impl/organization-url.html","searchKeys":["organizationUrl","open override var organizationUrl: String","dev.teogor.winds.api.util.DeveloperImpl.organizationUrl"]},{"name":"open override var owner: String","description":"dev.teogor.winds.api.Scm.Bitbucket.owner","location":"api/dev.teogor.winds.api/-scm/-bitbucket/owner.html","searchKeys":["owner","open override var owner: String","dev.teogor.winds.api.Scm.Bitbucket.owner"]},{"name":"open override var owner: String","description":"dev.teogor.winds.api.Scm.Custom.owner","location":"api/dev.teogor.winds.api/-scm/-custom/owner.html","searchKeys":["owner","open override var owner: String","dev.teogor.winds.api.Scm.Custom.owner"]},{"name":"open override var owner: String","description":"dev.teogor.winds.api.Scm.CustomExplicit.owner","location":"api/dev.teogor.winds.api/-scm/-custom-explicit/owner.html","searchKeys":["owner","open override var owner: String","dev.teogor.winds.api.Scm.CustomExplicit.owner"]},{"name":"open override var owner: String","description":"dev.teogor.winds.api.Scm.Default.owner","location":"api/dev.teogor.winds.api/-scm/-default/owner.html","searchKeys":["owner","open override var owner: String","dev.teogor.winds.api.Scm.Default.owner"]},{"name":"open override var owner: String","description":"dev.teogor.winds.api.Scm.GitHub.owner","location":"api/dev.teogor.winds.api/-scm/-git-hub/owner.html","searchKeys":["owner","open override var owner: String","dev.teogor.winds.api.Scm.GitHub.owner"]},{"name":"open override var owner: String","description":"dev.teogor.winds.api.Scm.GitLab.owner","location":"api/dev.teogor.winds.api/-scm/-git-lab/owner.html","searchKeys":["owner","open override var owner: String","dev.teogor.winds.api.Scm.GitLab.owner"]},{"name":"open override var owner: String","description":"dev.teogor.winds.api.Scm.Local.owner","location":"api/dev.teogor.winds.api/-scm/-local/owner.html","searchKeys":["owner","open override var owner: String","dev.teogor.winds.api.Scm.Local.owner"]},{"name":"open override var properties: Map<String, String>","description":"dev.teogor.winds.api.Person.Contributor.properties","location":"api/dev.teogor.winds.api/-person/-contributor/properties.html","searchKeys":["properties","open override var properties: Map<String, String>","dev.teogor.winds.api.Person.Contributor.properties"]},{"name":"open override var properties: Map<String, String>","description":"dev.teogor.winds.api.Person.Developer.properties","location":"api/dev.teogor.winds.api/-person/-developer/properties.html","searchKeys":["properties","open override var properties: Map<String, String>","dev.teogor.winds.api.Person.Developer.properties"]},{"name":"open override var properties: Map<String, String>","description":"dev.teogor.winds.api.Person.DeveloperContributor.properties","location":"api/dev.teogor.winds.api/-person/-developer-contributor/properties.html","searchKeys":["properties","open override var properties: Map<String, String>","dev.teogor.winds.api.Person.DeveloperContributor.properties"]},{"name":"open override var repository: String","description":"dev.teogor.winds.api.Scm.Bitbucket.repository","location":"api/dev.teogor.winds.api/-scm/-bitbucket/repository.html","searchKeys":["repository","open override var repository: String","dev.teogor.winds.api.Scm.Bitbucket.repository"]},{"name":"open override var repository: String","description":"dev.teogor.winds.api.Scm.Custom.repository","location":"api/dev.teogor.winds.api/-scm/-custom/repository.html","searchKeys":["repository","open override var repository: String","dev.teogor.winds.api.Scm.Custom.repository"]},{"name":"open override var repository: String","description":"dev.teogor.winds.api.Scm.CustomExplicit.repository","location":"api/dev.teogor.winds.api/-scm/-custom-explicit/repository.html","searchKeys":["repository","open override var repository: String","dev.teogor.winds.api.Scm.CustomExplicit.repository"]},{"name":"open override var repository: String","description":"dev.teogor.winds.api.Scm.Default.repository","location":"api/dev.teogor.winds.api/-scm/-default/repository.html","searchKeys":["repository","open override var repository: String","dev.teogor.winds.api.Scm.Default.repository"]},{"name":"open override var repository: String","description":"dev.teogor.winds.api.Scm.GitHub.repository","location":"api/dev.teogor.winds.api/-scm/-git-hub/repository.html","searchKeys":["repository","open override var repository: String","dev.teogor.winds.api.Scm.GitHub.repository"]},{"name":"open override var repository: String","description":"dev.teogor.winds.api.Scm.GitLab.repository","location":"api/dev.teogor.winds.api/-scm/-git-lab/repository.html","searchKeys":["repository","open override var repository: String","dev.teogor.winds.api.Scm.GitLab.repository"]},{"name":"open override var repository: String","description":"dev.teogor.winds.api.Scm.Local.repository","location":"api/dev.teogor.winds.api/-scm/-local/repository.html","searchKeys":["repository","open override var repository: String","dev.teogor.winds.api.Scm.Local.repository"]},{"name":"open override var repositoryUrl: String","description":"dev.teogor.winds.api.Scm.CustomExplicit.repositoryUrl","location":"api/dev.teogor.winds.api/-scm/-custom-explicit/repository-url.html","searchKeys":["repositoryUrl","open override var repositoryUrl: String","dev.teogor.winds.api.Scm.CustomExplicit.repositoryUrl"]},{"name":"open override var repositoryUrl: String","description":"dev.teogor.winds.api.Scm.Default.repositoryUrl","location":"api/dev.teogor.winds.api/-scm/-default/repository-url.html","searchKeys":["repositoryUrl","open override var repositoryUrl: String","dev.teogor.winds.api.Scm.Default.repositoryUrl"]},{"name":"open override var roles: List<String>","description":"dev.teogor.winds.api.Person.Contributor.roles","location":"api/dev.teogor.winds.api/-person/-contributor/roles.html","searchKeys":["roles","open override var roles: List<String>","dev.teogor.winds.api.Person.Contributor.roles"]},{"name":"open override var roles: List<String>","description":"dev.teogor.winds.api.Person.Developer.roles","location":"api/dev.teogor.winds.api/-person/-developer/roles.html","searchKeys":["roles","open override var roles: List<String>","dev.teogor.winds.api.Person.Developer.roles"]},{"name":"open override var roles: List<String>","description":"dev.teogor.winds.api.Person.DeveloperContributor.roles","location":"api/dev.teogor.winds.api/-person/-developer-contributor/roles.html","searchKeys":["roles","open override var roles: List<String>","dev.teogor.winds.api.Person.DeveloperContributor.roles"]},{"name":"open override var roles: List<String>","description":"dev.teogor.winds.api.util.DeveloperImpl.roles","location":"api/dev.teogor.winds.api.util/-developer-impl/roles.html","searchKeys":["roles","open override var roles: List<String>","dev.teogor.winds.api.util.DeveloperImpl.roles"]},{"name":"open override var system: String","description":"dev.teogor.winds.api.TicketSystem.Default.system","location":"api/dev.teogor.winds.api/-ticket-system/-default/system.html","searchKeys":["system","open override var system: String","dev.teogor.winds.api.TicketSystem.Default.system"]},{"name":"open override var timezone: String","description":"dev.teogor.winds.api.Person.Contributor.timezone","location":"api/dev.teogor.winds.api/-person/-contributor/timezone.html","searchKeys":["timezone","open override var timezone: String","dev.teogor.winds.api.Person.Contributor.timezone"]},{"name":"open override var timezone: String","description":"dev.teogor.winds.api.Person.Developer.timezone","location":"api/dev.teogor.winds.api/-person/-developer/timezone.html","searchKeys":["timezone","open override var timezone: String","dev.teogor.winds.api.Person.Developer.timezone"]},{"name":"open override var timezone: String","description":"dev.teogor.winds.api.Person.DeveloperContributor.timezone","location":"api/dev.teogor.winds.api/-person/-developer-contributor/timezone.html","searchKeys":["timezone","open override var timezone: String","dev.teogor.winds.api.Person.DeveloperContributor.timezone"]},{"name":"open override var timezone: String","description":"dev.teogor.winds.api.util.DeveloperImpl.timezone","location":"api/dev.teogor.winds.api.util/-developer-impl/timezone.html","searchKeys":["timezone","open override var timezone: String","dev.teogor.winds.api.util.DeveloperImpl.timezone"]},{"name":"open override var url: String","description":"dev.teogor.winds.api.Person.Contributor.url","location":"api/dev.teogor.winds.api/-person/-contributor/url.html","searchKeys":["url","open override var url: String","dev.teogor.winds.api.Person.Contributor.url"]},{"name":"open override var url: String","description":"dev.teogor.winds.api.Person.Developer.url","location":"api/dev.teogor.winds.api/-person/-developer/url.html","searchKeys":["url","open override var url: String","dev.teogor.winds.api.Person.Developer.url"]},{"name":"open override var url: String","description":"dev.teogor.winds.api.Person.DeveloperContributor.url","location":"api/dev.teogor.winds.api/-person/-developer-contributor/url.html","searchKeys":["url","open override var url: String","dev.teogor.winds.api.Person.DeveloperContributor.url"]},{"name":"open override var url: String","description":"dev.teogor.winds.api.TicketSystem.Default.url","location":"api/dev.teogor.winds.api/-ticket-system/-default/url.html","searchKeys":["url","open override var url: String","dev.teogor.winds.api.TicketSystem.Default.url"]},{"name":"open override var url: String","description":"dev.teogor.winds.api.util.DeveloperImpl.url","location":"api/dev.teogor.winds.api.util/-developer-impl/url.html","searchKeys":["url","open override var url: String","dev.teogor.winds.api.util.DeveloperImpl.url"]},{"name":"open val date: Long","description":"dev.teogor.winds.api.model.VersionedDependencyRecord.date","location":"api/dev.teogor.winds.api.model/-versioned-dependency-record/date.html","searchKeys":["date","open val date: Long","dev.teogor.winds.api.model.VersionedDependencyRecord.date"]},{"name":"open val version: Version","description":"dev.teogor.winds.api.model.VersionedDependencyRecord.version","location":"api/dev.teogor.winds.api.model/-versioned-dependency-record/version.html","searchKeys":["version","open val version: Version","dev.teogor.winds.api.model.VersionedDependencyRecord.version"]},{"name":"typealias Emoji = String","description":"dev.teogor.winds.api.util.Emoji","location":"api/dev.teogor.winds.api.util/-emoji/index.html","searchKeys":["Emoji","typealias Emoji = String","dev.teogor.winds.api.util.Emoji"]},{"name":"val absolutePath: String","description":"dev.teogor.winds.api.model.Path.absolutePath","location":"api/dev.teogor.winds.api.model/-path/absolute-path.html","searchKeys":["absolutePath","val absolutePath: String","dev.teogor.winds.api.model.Path.absolutePath"]},{"name":"val artifact: ArtifactDescriptor","description":"dev.teogor.winds.api.model.ModuleDescriptor.artifact","location":"api/dev.teogor.winds.api.model/-module-descriptor/artifact.html","searchKeys":["artifact","val artifact: ArtifactDescriptor","dev.teogor.winds.api.model.ModuleDescriptor.artifact"]},{"name":"val artifact: String","description":"dev.teogor.winds.api.model.Dependency.artifact","location":"api/dev.teogor.winds.api.model/-dependency/artifact.html","searchKeys":["artifact","val artifact: String","dev.teogor.winds.api.model.Dependency.artifact"]},{"name":"val artifactId: String","description":"dev.teogor.winds.api.ArtifactDescriptor.artifactId","location":"api/dev.teogor.winds.api/-artifact-descriptor/artifact-id.html","searchKeys":["artifactId","val artifactId: String","dev.teogor.winds.api.ArtifactDescriptor.artifactId"]},{"name":"val artifactId: String","description":"dev.teogor.winds.api.model.ModuleInfo.artifactId","location":"api/dev.teogor.winds.api.model/-module-info/artifact-id.html","searchKeys":["artifactId","val artifactId: String","dev.teogor.winds.api.model.ModuleInfo.artifactId"]},{"name":"val artifactId: String","description":"dev.teogor.winds.api.model.ModuleMetadataDefault.artifactId","location":"api/dev.teogor.winds.api.model/-module-metadata-default/artifact-id.html","searchKeys":["artifactId","val artifactId: String","dev.teogor.winds.api.model.ModuleMetadataDefault.artifactId"]},{"name":"val artifactNames: List<String>","description":"dev.teogor.winds.api.ArtifactDescriptor.artifactNames","location":"api/dev.teogor.winds.api/-artifact-descriptor/artifact-names.html","searchKeys":["artifactNames","val artifactNames: List<String>","dev.teogor.winds.api.ArtifactDescriptor.artifactNames"]},{"name":"val artifacts: List<ArtifactDescriptor>","description":"dev.teogor.winds.api.ArtifactDescriptor.artifacts","location":"api/dev.teogor.winds.api/-artifact-descriptor/artifacts.html","searchKeys":["artifacts","val artifacts: List<ArtifactDescriptor>","dev.teogor.winds.api.ArtifactDescriptor.artifacts"]},{"name":"val canBePublished: Boolean","description":"dev.teogor.winds.api.model.ModuleInfo.canBePublished","location":"api/dev.teogor.winds.api.model/-module-info/can-be-published.html","searchKeys":["canBePublished","val canBePublished: Boolean","dev.teogor.winds.api.model.ModuleInfo.canBePublished"]},{"name":"val canBePublished: Boolean","description":"dev.teogor.winds.api.model.ModuleMetadataDefault.canBePublished","location":"api/dev.teogor.winds.api.model/-module-metadata-default/can-be-published.html","searchKeys":["canBePublished","val canBePublished: Boolean","dev.teogor.winds.api.model.ModuleMetadataDefault.canBePublished"]},{"name":"val completeName: String","description":"dev.teogor.winds.api.ArtifactDescriptor.completeName","location":"api/dev.teogor.winds.api/-artifact-descriptor/complete-name.html","searchKeys":["completeName","val completeName: String","dev.teogor.winds.api.ArtifactDescriptor.completeName"]},{"name":"val completeName: String","description":"dev.teogor.winds.api.model.ModuleDescriptor.completeName","location":"api/dev.teogor.winds.api.model/-module-descriptor/complete-name.html","searchKeys":["completeName","val completeName: String","dev.teogor.winds.api.model.ModuleDescriptor.completeName"]},{"name":"val completeName: String","description":"dev.teogor.winds.api.model.ModuleInfo.completeName","location":"api/dev.teogor.winds.api.model/-module-info/complete-name.html","searchKeys":["completeName","val completeName: String","dev.teogor.winds.api.model.ModuleInfo.completeName"]},{"name":"val completeName: String","description":"dev.teogor.winds.api.model.ModuleMetadataDefault.completeName","location":"api/dev.teogor.winds.api.model/-module-metadata-default/complete-name.html","searchKeys":["completeName","val completeName: String","dev.teogor.winds.api.model.ModuleMetadataDefault.completeName"]},{"name":"val coordinates: String","description":"dev.teogor.winds.api.ArtifactDescriptor.coordinates","location":"api/dev.teogor.winds.api/-artifact-descriptor/coordinates.html","searchKeys":["coordinates","val coordinates: String","dev.teogor.winds.api.ArtifactDescriptor.coordinates"]},{"name":"val coordinates: String","description":"dev.teogor.winds.api.model.ModuleInfo.coordinates","location":"api/dev.teogor.winds.api.model/-module-info/coordinates.html","searchKeys":["coordinates","val coordinates: String","dev.teogor.winds.api.model.ModuleInfo.coordinates"]},{"name":"val dateFormatted: String","description":"dev.teogor.winds.api.model.VersionedDependencyRecord.dateFormatted","location":"api/dev.teogor.winds.api.model/-versioned-dependency-record/date-formatted.html","searchKeys":["dateFormatted","val dateFormatted: String","dev.teogor.winds.api.model.VersionedDependencyRecord.dateFormatted"]},{"name":"val dependencies: List<ArtifactDescriptor>","description":"dev.teogor.winds.api.model.ModuleDescriptor.dependencies","location":"api/dev.teogor.winds.api.model/-module-descriptor/dependencies.html","searchKeys":["dependencies","val dependencies: List<ArtifactDescriptor>","dev.teogor.winds.api.model.ModuleDescriptor.dependencies"]},{"name":"val dependencies: List<DependencyDefinition>","description":"dev.teogor.winds.api.model.ModuleInfo.dependencies","location":"api/dev.teogor.winds.api.model/-module-info/dependencies.html","searchKeys":["dependencies","val dependencies: List<DependencyDefinition>","dev.teogor.winds.api.model.ModuleInfo.dependencies"]},{"name":"val description: String","description":"dev.teogor.winds.api.model.ModuleInfo.description","location":"api/dev.teogor.winds.api.model/-module-info/description.html","searchKeys":["description","val description: String","dev.teogor.winds.api.model.ModuleInfo.description"]},{"name":"val description: String?","description":"dev.teogor.winds.api.model.ModuleDescriptor.description","location":"api/dev.teogor.winds.api.model/-module-descriptor/description.html","searchKeys":["description","val description: String?","dev.teogor.winds.api.model.ModuleDescriptor.description"]},{"name":"val displayName: String","description":"dev.teogor.winds.api.model.ModuleInfo.displayName","location":"api/dev.teogor.winds.api.model/-module-info/display-name.html","searchKeys":["displayName","val displayName: String","dev.teogor.winds.api.model.ModuleInfo.displayName"]},{"name":"val distribution: String","description":"dev.teogor.winds.api.model.LicenseType.distribution","location":"api/dev.teogor.winds.api.model/-license-type/distribution.html","searchKeys":["distribution","val distribution: String","dev.teogor.winds.api.model.LicenseType.distribution"]},{"name":"val documentationBuilder: DocumentationBuilder","description":"dev.teogor.winds.api.model.ModuleDescriptor.documentationBuilder","location":"api/dev.teogor.winds.api.model/-module-descriptor/documentation-builder.html","searchKeys":["documentationBuilder","val documentationBuilder: DocumentationBuilder","dev.teogor.winds.api.model.ModuleDescriptor.documentationBuilder"]},{"name":"val domain: String","description":"dev.teogor.winds.api.provider.Scm.Custom.domain","location":"api/dev.teogor.winds.api.provider/-scm/-custom/domain.html","searchKeys":["domain","val domain: String","dev.teogor.winds.api.provider.Scm.Custom.domain"]},{"name":"val domain: String","description":"dev.teogor.winds.api.provider.Scm.SVN.domain","location":"api/dev.teogor.winds.api.provider/-scm/-s-v-n/domain.html","searchKeys":["domain","val domain: String","dev.teogor.winds.api.provider.Scm.SVN.domain"]},{"name":"val emoji: String?","description":"dev.teogor.winds.api.model.ModuleInfo.emoji","location":"api/dev.teogor.winds.api.model/-module-info/emoji.html","searchKeys":["emoji","val emoji: String?","dev.teogor.winds.api.model.ModuleInfo.emoji"]},{"name":"val entries: EnumEntries<ArtifactIdFormat>","description":"dev.teogor.winds.api.ArtifactIdFormat.entries","location":"api/dev.teogor.winds.api/-artifact-id-format/entries.html","searchKeys":["entries","val entries: EnumEntries<ArtifactIdFormat>","dev.teogor.winds.api.ArtifactIdFormat.entries"]},{"name":"val entries: EnumEntries<DependencyType>","description":"dev.teogor.winds.api.model.DependencyType.entries","location":"api/dev.teogor.winds.api.model/-dependency-type/entries.html","searchKeys":["entries","val entries: EnumEntries<DependencyType>","dev.teogor.winds.api.model.DependencyType.entries"]},{"name":"val entries: EnumEntries<LicenseType>","description":"dev.teogor.winds.api.model.LicenseType.entries","location":"api/dev.teogor.winds.api.model/-license-type/entries.html","searchKeys":["entries","val entries: EnumEntries<LicenseType>","dev.teogor.winds.api.model.LicenseType.entries"]},{"name":"val entries: EnumEntries<NameFormat>","description":"dev.teogor.winds.api.NameFormat.entries","location":"api/dev.teogor.winds.api/-name-format/entries.html","searchKeys":["entries","val entries: EnumEntries<NameFormat>","dev.teogor.winds.api.NameFormat.entries"]},{"name":"val entries: EnumEntries<ReleaseStatus>","description":"dev.teogor.winds.api.ReleaseStatus.entries","location":"api/dev.teogor.winds.api/-release-status/entries.html","searchKeys":["entries","val entries: EnumEntries<ReleaseStatus>","dev.teogor.winds.api.ReleaseStatus.entries"]},{"name":"val entries: EnumEntries<WindsFeature>","description":"dev.teogor.winds.api.model.WindsFeature.entries","location":"api/dev.teogor.winds.api.model/-winds-feature/entries.html","searchKeys":["entries","val entries: EnumEntries<WindsFeature>","dev.teogor.winds.api.model.WindsFeature.entries"]},{"name":"val gradleDependency: String","description":"dev.teogor.winds.api.model.ModuleInfo.gradleDependency","location":"api/dev.teogor.winds.api.model/-module-info/gradle-dependency.html","searchKeys":["gradleDependency","val gradleDependency: String","dev.teogor.winds.api.model.ModuleInfo.gradleDependency"]},{"name":"val group: String","description":"dev.teogor.winds.api.model.Dependency.group","location":"api/dev.teogor.winds.api.model/-dependency/group.html","searchKeys":["group","val group: String","dev.teogor.winds.api.model.Dependency.group"]},{"name":"val groupId: String","description":"dev.teogor.winds.api.model.ModuleInfo.groupId","location":"api/dev.teogor.winds.api.model/-module-info/group-id.html","searchKeys":["groupId","val groupId: String","dev.teogor.winds.api.model.ModuleInfo.groupId"]},{"name":"val isAlphaRelease: Boolean","description":"dev.teogor.winds.api.model.Version.isAlphaRelease","location":"api/dev.teogor.winds.api.model/-version/is-alpha-release.html","searchKeys":["isAlphaRelease","val isAlphaRelease: Boolean","dev.teogor.winds.api.model.Version.isAlphaRelease"]},{"name":"val isBetaRelease: Boolean","description":"dev.teogor.winds.api.model.Version.isBetaRelease","location":"api/dev.teogor.winds.api.model/-version/is-beta-release.html","searchKeys":["isBetaRelease","val isBetaRelease: Boolean","dev.teogor.winds.api.model.Version.isBetaRelease"]},{"name":"val isBoM: Boolean","description":"dev.teogor.winds.api.model.ModuleInfo.isBoM","location":"api/dev.teogor.winds.api.model/-module-info/is-bo-m.html","searchKeys":["isBoM","val isBoM: Boolean","dev.teogor.winds.api.model.ModuleInfo.isBoM"]},{"name":"val isBom: Boolean","description":"dev.teogor.winds.api.model.ModuleDescriptor.isBom","location":"api/dev.teogor.winds.api.model/-module-descriptor/is-bom.html","searchKeys":["isBom","val isBom: Boolean","dev.teogor.winds.api.model.ModuleDescriptor.isBom"]},{"name":"val localPath: String","description":"dev.teogor.winds.api.model.ModuleInfo.localPath","location":"api/dev.teogor.winds.api.model/-module-info/local-path.html","searchKeys":["localPath","val localPath: String","dev.teogor.winds.api.model.ModuleInfo.localPath"]},{"name":"val major: Int","description":"dev.teogor.winds.api.model.Version.major","location":"api/dev.teogor.winds.api.model/-version/major.html","searchKeys":["major","val major: Int","dev.teogor.winds.api.model.Version.major"]},{"name":"val minor: Int","description":"dev.teogor.winds.api.model.Version.minor","location":"api/dev.teogor.winds.api.model/-version/minor.html","searchKeys":["minor","val minor: Int","dev.teogor.winds.api.model.Version.minor"]},{"name":"val module: String","description":"dev.teogor.winds.api.ArtifactDescriptor.module","location":"api/dev.teogor.winds.api/-artifact-descriptor/module.html","searchKeys":["module","val module: String","dev.teogor.winds.api.ArtifactDescriptor.module"]},{"name":"val module: String","description":"dev.teogor.winds.api.model.ModuleDependencyRecord.module","location":"api/dev.teogor.winds.api.model/-module-dependency-record/module.html","searchKeys":["module","val module: String","dev.teogor.winds.api.model.ModuleDependencyRecord.module"]},{"name":"val module: String","description":"dev.teogor.winds.api.model.ModuleInfo.module","location":"api/dev.teogor.winds.api.model/-module-info/module.html","searchKeys":["module","val module: String","dev.teogor.winds.api.model.ModuleInfo.module"]},{"name":"val modulePath: String","description":"dev.teogor.winds.api.model.LocalProjectDependency.modulePath","location":"api/dev.teogor.winds.api.model/-local-project-dependency/module-path.html","searchKeys":["modulePath","val modulePath: String","dev.teogor.winds.api.model.LocalProjectDependency.modulePath"]},{"name":"val name: String","description":"dev.teogor.winds.api.model.ModuleDescriptor.name","location":"api/dev.teogor.winds.api.model/-module-descriptor/name.html","searchKeys":["name","val name: String","dev.teogor.winds.api.model.ModuleDescriptor.name"]},{"name":"val name: String","description":"dev.teogor.winds.api.model.ModuleInfo.name","location":"api/dev.teogor.winds.api.model/-module-info/name.html","searchKeys":["name","val name: String","dev.teogor.winds.api.model.ModuleInfo.name"]},{"name":"val name: String","description":"dev.teogor.winds.api.model.ModuleMetadataDefault.name","location":"api/dev.teogor.winds.api.model/-module-metadata-default/name.html","searchKeys":["name","val name: String","dev.teogor.winds.api.model.ModuleMetadataDefault.name"]},{"name":"val names: List<String>","description":"dev.teogor.winds.api.model.ModuleInfo.names","location":"api/dev.teogor.winds.api.model/-module-info/names.html","searchKeys":["names","val names: List<String>","dev.teogor.winds.api.model.ModuleInfo.names"]},{"name":"val owner: String","description":"dev.teogor.winds.api.provider.Scm.Bitbucket.owner","location":"api/dev.teogor.winds.api.provider/-scm/-bitbucket/owner.html","searchKeys":["owner","val owner: String","dev.teogor.winds.api.provider.Scm.Bitbucket.owner"]},{"name":"val owner: String","description":"dev.teogor.winds.api.provider.Scm.Custom.owner","location":"api/dev.teogor.winds.api.provider/-scm/-custom/owner.html","searchKeys":["owner","val owner: String","dev.teogor.winds.api.provider.Scm.Custom.owner"]},{"name":"val owner: String","description":"dev.teogor.winds.api.provider.Scm.Git.owner","location":"api/dev.teogor.winds.api.provider/-scm/-git/owner.html","searchKeys":["owner","val owner: String","dev.teogor.winds.api.provider.Scm.Git.owner"]},{"name":"val owner: String","description":"dev.teogor.winds.api.provider.Scm.SVN.owner","location":"api/dev.teogor.winds.api.provider/-scm/-s-v-n/owner.html","searchKeys":["owner","val owner: String","dev.teogor.winds.api.provider.Scm.SVN.owner"]},{"name":"val patch: Int","description":"dev.teogor.winds.api.model.Version.patch","location":"api/dev.teogor.winds.api.model/-version/patch.html","searchKeys":["patch","val patch: Int","dev.teogor.winds.api.model.Version.patch"]},{"name":"val path: Path","description":"dev.teogor.winds.api.model.ModuleDescriptor.path","location":"api/dev.teogor.winds.api.model/-module-descriptor/path.html","searchKeys":["path","val path: Path","dev.teogor.winds.api.model.ModuleDescriptor.path"]},{"name":"val path: String","description":"dev.teogor.winds.api.model.ModuleInfo.path","location":"api/dev.teogor.winds.api.model/-module-info/path.html","searchKeys":["path","val path: String","dev.teogor.winds.api.model.ModuleInfo.path"]},{"name":"val path: String","description":"dev.teogor.winds.api.provider.Scm.Local.path","location":"api/dev.teogor.winds.api.provider/-scm/-local/path.html","searchKeys":["path","val path: String","dev.teogor.winds.api.provider.Scm.Local.path"]},{"name":"val projectName: String","description":"dev.teogor.winds.api.model.LocalProjectDependency.projectName","location":"api/dev.teogor.winds.api.model/-local-project-dependency/project-name.html","searchKeys":["projectName","val projectName: String","dev.teogor.winds.api.model.LocalProjectDependency.projectName"]},{"name":"val publish: Boolean","description":"dev.teogor.winds.api.model.ModuleDescriptor.publish","location":"api/dev.teogor.winds.api.model/-module-descriptor/publish.html","searchKeys":["publish","val publish: Boolean","dev.teogor.winds.api.model.ModuleDescriptor.publish"]},{"name":"val repo: String","description":"dev.teogor.winds.api.provider.Scm.Bitbucket.repo","location":"api/dev.teogor.winds.api.provider/-scm/-bitbucket/repo.html","searchKeys":["repo","val repo: String","dev.teogor.winds.api.provider.Scm.Bitbucket.repo"]},{"name":"val repo: String","description":"dev.teogor.winds.api.provider.Scm.Custom.repo","location":"api/dev.teogor.winds.api.provider/-scm/-custom/repo.html","searchKeys":["repo","val repo: String","dev.teogor.winds.api.provider.Scm.Custom.repo"]},{"name":"val repo: String","description":"dev.teogor.winds.api.provider.Scm.Git.repo","location":"api/dev.teogor.winds.api.provider/-scm/-git/repo.html","searchKeys":["repo","val repo: String","dev.teogor.winds.api.provider.Scm.Git.repo"]},{"name":"val repo: String","description":"dev.teogor.winds.api.provider.Scm.SVN.repo","location":"api/dev.teogor.winds.api.provider/-scm/-s-v-n/repo.html","searchKeys":["repo","val repo: String","dev.teogor.winds.api.provider.Scm.SVN.repo"]},{"name":"val scm: Scm?","description":"dev.teogor.winds.api.model.ModuleDescriptor.scm","location":"api/dev.teogor.winds.api.model/-module-descriptor/scm.html","searchKeys":["scm","val scm: Scm?","dev.teogor.winds.api.model.ModuleDescriptor.scm"]},{"name":"val ticketSystem: TicketSystem?","description":"dev.teogor.winds.api.model.ModuleDescriptor.ticketSystem","location":"api/dev.teogor.winds.api.model/-module-descriptor/ticket-system.html","searchKeys":["ticketSystem","val ticketSystem: TicketSystem?","dev.teogor.winds.api.model.ModuleDescriptor.ticketSystem"]},{"name":"val title: String","description":"dev.teogor.winds.api.model.LicenseType.title","location":"api/dev.teogor.winds.api.model/-license-type/title.html","searchKeys":["title","val title: String","dev.teogor.winds.api.model.LicenseType.title"]},{"name":"val url: String","description":"dev.teogor.winds.api.model.LicenseType.url","location":"api/dev.teogor.winds.api.model/-license-type/url.html","searchKeys":["url","val url: String","dev.teogor.winds.api.model.LicenseType.url"]},{"name":"val value: String","description":"dev.teogor.winds.api.model.Path.value","location":"api/dev.teogor.winds.api.model/-path/value.html","searchKeys":["value","val value: String","dev.teogor.winds.api.model.Path.value"]},{"name":"val version: String","description":"dev.teogor.winds.api.model.Dependency.version","location":"api/dev.teogor.winds.api.model/-dependency/version.html","searchKeys":["version","val version: String","dev.teogor.winds.api.model.Dependency.version"]},{"name":"val version: Version","description":"dev.teogor.winds.api.model.ModuleInfo.version","location":"api/dev.teogor.winds.api.model/-module-info/version.html","searchKeys":["version","val version: Version","dev.teogor.winds.api.model.ModuleInfo.version"]},{"name":"val version: Version","description":"dev.teogor.winds.api.model.ModuleMetadataDefault.version","location":"api/dev.teogor.winds.api.model/-module-metadata-default/version.html","searchKeys":["version","val version: Version","dev.teogor.winds.api.model.ModuleMetadataDefault.version"]},{"name":"var acceptedModules: List<String>","description":"dev.teogor.winds.api.BomOptions.acceptedModules","location":"api/dev.teogor.winds.api/-bom-options/accepted-modules.html","searchKeys":["acceptedModules","var acceptedModules: List<String>","dev.teogor.winds.api.BomOptions.acceptedModules"]},{"name":"var acceptedModules: List<String>","description":"dev.teogor.winds.api.model.BomOptions.acceptedModules","location":"api/dev.teogor.winds.api.model/-bom-options/accepted-modules.html","searchKeys":["acceptedModules","var acceptedModules: List<String>","dev.teogor.winds.api.model.BomOptions.acceptedModules"]},{"name":"var acceptedPaths: List<String>","description":"dev.teogor.winds.api.BomOptions.acceptedPaths","location":"api/dev.teogor.winds.api/-bom-options/accepted-paths.html","searchKeys":["acceptedPaths","var acceptedPaths: List<String>","dev.teogor.winds.api.BomOptions.acceptedPaths"]},{"name":"var acceptedPaths: List<String>","description":"dev.teogor.winds.api.model.BomOptions.acceptedPaths","location":"api/dev.teogor.winds.api.model/-bom-options/accepted-paths.html","searchKeys":["acceptedPaths","var acceptedPaths: List<String>","dev.teogor.winds.api.model.BomOptions.acceptedPaths"]},{"name":"var additionalIncludes: List<String>","description":"dev.teogor.winds.api.DokkaOptions.additionalIncludes","location":"api/dev.teogor.winds.api/-dokka-options/additional-includes.html","searchKeys":["additionalIncludes","var additionalIncludes: List<String>","dev.teogor.winds.api.DokkaOptions.additionalIncludes"]},{"name":"var artifactIdFormat: ArtifactIdFormat","description":"dev.teogor.winds.api.ArtifactDescriptor.artifactIdFormat","location":"api/dev.teogor.winds.api/-artifact-descriptor/artifact-id-format.html","searchKeys":["artifactIdFormat","var artifactIdFormat: ArtifactIdFormat","dev.teogor.winds.api.ArtifactDescriptor.artifactIdFormat"]},{"name":"var baseUrl: String","description":"dev.teogor.winds.api.TicketSystem.Redmine.baseUrl","location":"api/dev.teogor.winds.api/-ticket-system/-redmine/base-url.html","searchKeys":["baseUrl","var baseUrl: String","dev.teogor.winds.api.TicketSystem.Redmine.baseUrl"]},{"name":"var baselineVersion: String","description":"dev.teogor.winds.api.BinaryCompatibility.baselineVersion","location":"api/dev.teogor.winds.api/-binary-compatibility/baseline-version.html","searchKeys":["baselineVersion","var baselineVersion: String","dev.teogor.winds.api.BinaryCompatibility.baselineVersion"]},{"name":"var component: String","description":"dev.teogor.winds.api.TicketSystem.Bugzilla.component","location":"api/dev.teogor.winds.api/-ticket-system/-bugzilla/component.html","searchKeys":["component","var component: String","dev.teogor.winds.api.TicketSystem.Bugzilla.component"]},{"name":"var domain: String","description":"dev.teogor.winds.api.Scm.Custom.domain","location":"api/dev.teogor.winds.api/-scm/-custom/domain.html","searchKeys":["domain","var domain: String","dev.teogor.winds.api.Scm.Custom.domain"]},{"name":"var enabled: Boolean","description":"dev.teogor.winds.api.BinaryCompatibility.enabled","location":"api/dev.teogor.winds.api/-binary-compatibility/enabled.html","searchKeys":["enabled","var enabled: Boolean","dev.teogor.winds.api.BinaryCompatibility.enabled"]},{"name":"var enabled: Boolean","description":"dev.teogor.winds.api.DokkaOptions.enabled","location":"api/dev.teogor.winds.api/-dokka-options/enabled.html","searchKeys":["enabled","var enabled: Boolean","dev.teogor.winds.api.DokkaOptions.enabled"]},{"name":"var enabled: Boolean","description":"dev.teogor.winds.api.SpotlessOptions.enabled","location":"api/dev.teogor.winds.api/-spotless-options/enabled.html","searchKeys":["enabled","var enabled: Boolean","dev.teogor.winds.api.SpotlessOptions.enabled"]},{"name":"var excludeFiles: List<String>","description":"dev.teogor.winds.api.SpotlessOptions.excludeFiles","location":"api/dev.teogor.winds.api/-spotless-options/exclude-files.html","searchKeys":["excludeFiles","var excludeFiles: List<String>","dev.teogor.winds.api.SpotlessOptions.excludeFiles"]},{"name":"var excludedScopes: List<String>","description":"dev.teogor.winds.api.BomOptions.excludedScopes","location":"api/dev.teogor.winds.api/-bom-options/excluded-scopes.html","searchKeys":["excludedScopes","var excludedScopes: List<String>","dev.teogor.winds.api.BomOptions.excludedScopes"]},{"name":"var failOnIncompatibleChanges: Boolean","description":"dev.teogor.winds.api.BinaryCompatibility.failOnIncompatibleChanges","location":"api/dev.teogor.winds.api/-binary-compatibility/fail-on-incompatible-changes.html","searchKeys":["failOnIncompatibleChanges","var failOnIncompatibleChanges: Boolean","dev.teogor.winds.api.BinaryCompatibility.failOnIncompatibleChanges"]},{"name":"var flag: ReleaseStatus","description":"dev.teogor.winds.api.model.Version.flag","location":"api/dev.teogor.winds.api.model/-version/flag.html","searchKeys":["flag","var flag: ReleaseStatus","dev.teogor.winds.api.model.Version.flag"]},{"name":"var format: String","description":"dev.teogor.winds.api.SpotlessOptions.format","location":"api/dev.teogor.winds.api/-spotless-options/format.html","searchKeys":["format","var format: String","dev.teogor.winds.api.SpotlessOptions.format"]},{"name":"var group: String","description":"dev.teogor.winds.api.ArtifactDescriptor.group","location":"api/dev.teogor.winds.api/-artifact-descriptor/group.html","searchKeys":["group","var group: String","dev.teogor.winds.api.ArtifactDescriptor.group"]},{"name":"var group: String","description":"dev.teogor.winds.api.TicketSystem.GitLab.group","location":"api/dev.teogor.winds.api/-ticket-system/-git-lab/group.html","searchKeys":["group","var group: String","dev.teogor.winds.api.TicketSystem.GitLab.group"]},{"name":"var groupName: String?","description":"dev.teogor.winds.api.Scm.GitLab.groupName","location":"api/dev.teogor.winds.api/-scm/-git-lab/group-name.html","searchKeys":["groupName","var groupName: String?","dev.teogor.winds.api.Scm.GitLab.groupName"]},{"name":"var id: String","description":"dev.teogor.winds.api.Person.Developer.id","location":"api/dev.teogor.winds.api/-person/-developer/id.html","searchKeys":["id","var id: String","dev.teogor.winds.api.Person.Developer.id"]},{"name":"var id: String","description":"dev.teogor.winds.api.Person.DeveloperContributor.id","location":"api/dev.teogor.winds.api/-person/-developer-contributor/id.html","searchKeys":["id","var id: String","dev.teogor.winds.api.Person.DeveloperContributor.id"]},{"name":"var includeFiles: List<String>","description":"dev.teogor.winds.api.SpotlessOptions.includeFiles","location":"api/dev.teogor.winds.api/-spotless-options/include-files.html","searchKeys":["includeFiles","var includeFiles: List<String>","dev.teogor.winds.api.SpotlessOptions.includeFiles"]},{"name":"var isDeprecated: Boolean","description":"dev.teogor.winds.api.model.Version.isDeprecated","location":"api/dev.teogor.winds.api.model/-version/is-deprecated.html","searchKeys":["isDeprecated","var isDeprecated: Boolean","dev.teogor.winds.api.model.Version.isDeprecated"]},{"name":"var major: Int","description":"dev.teogor.winds.api.model.Version.VersionBuilder.major","location":"api/dev.teogor.winds.api.model/-version/-version-builder/major.html","searchKeys":["major","var major: Int","dev.teogor.winds.api.model.Version.VersionBuilder.major"]},{"name":"var minor: Int","description":"dev.teogor.winds.api.model.Version.VersionBuilder.minor","location":"api/dev.teogor.winds.api.model/-version/-version-builder/minor.html","searchKeys":["minor","var minor: Int","dev.teogor.winds.api.model.Version.VersionBuilder.minor"]},{"name":"var name: String","description":"dev.teogor.winds.api.ArtifactDescriptor.name","location":"api/dev.teogor.winds.api/-artifact-descriptor/name.html","searchKeys":["name","var name: String","dev.teogor.winds.api.ArtifactDescriptor.name"]},{"name":"var nameFormat: NameFormat","description":"dev.teogor.winds.api.ArtifactDescriptor.nameFormat","location":"api/dev.teogor.winds.api/-artifact-descriptor/name-format.html","searchKeys":["nameFormat","var nameFormat: NameFormat","dev.teogor.winds.api.ArtifactDescriptor.nameFormat"]},{"name":"var outputDirectory: String","description":"dev.teogor.winds.api.DokkaOptions.outputDirectory","location":"api/dev.teogor.winds.api/-dokka-options/output-directory.html","searchKeys":["outputDirectory","var outputDirectory: String","dev.teogor.winds.api.DokkaOptions.outputDirectory"]},{"name":"var owner: String","description":"dev.teogor.winds.api.TicketSystem.GitHub.owner","location":"api/dev.teogor.winds.api/-ticket-system/-git-hub/owner.html","searchKeys":["owner","var owner: String","dev.teogor.winds.api.TicketSystem.GitHub.owner"]},{"name":"var patch: Int","description":"dev.teogor.winds.api.model.Version.VersionBuilder.patch","location":"api/dev.teogor.winds.api.model/-version/-version-builder/patch.html","searchKeys":["patch","var patch: Int","dev.teogor.winds.api.model.Version.VersionBuilder.patch"]},{"name":"var path: String","description":"dev.teogor.winds.api.Scm.Local.path","location":"api/dev.teogor.winds.api/-scm/-local/path.html","searchKeys":["path","var path: String","dev.teogor.winds.api.Scm.Local.path"]},{"name":"var product: String","description":"dev.teogor.winds.api.TicketSystem.Bugzilla.product","location":"api/dev.teogor.winds.api/-ticket-system/-bugzilla/product.html","searchKeys":["product","var product: String","dev.teogor.winds.api.TicketSystem.Bugzilla.product"]},{"name":"var project: String","description":"dev.teogor.winds.api.TicketSystem.GitLab.project","location":"api/dev.teogor.winds.api/-ticket-system/-git-lab/project.html","searchKeys":["project","var project: String","dev.teogor.winds.api.TicketSystem.GitLab.project"]},{"name":"var projectId: String","description":"dev.teogor.winds.api.TicketSystem.Redmine.projectId","location":"api/dev.teogor.winds.api/-ticket-system/-redmine/project-id.html","searchKeys":["projectId","var projectId: String","dev.teogor.winds.api.TicketSystem.Redmine.projectId"]},{"name":"var projectKey: String","description":"dev.teogor.winds.api.TicketSystem.Jira.projectKey","location":"api/dev.teogor.winds.api/-ticket-system/-jira/project-key.html","searchKeys":["projectKey","var projectKey: String","dev.teogor.winds.api.TicketSystem.Jira.projectKey"]},{"name":"var repository: String","description":"dev.teogor.winds.api.TicketSystem.GitHub.repository","location":"api/dev.teogor.winds.api/-ticket-system/-git-hub/repository.html","searchKeys":["repository","var repository: String","dev.teogor.winds.api.TicketSystem.GitHub.repository"]},{"name":"var serverUrl: String","description":"dev.teogor.winds.api.TicketSystem.Bugzilla.serverUrl","location":"api/dev.teogor.winds.api/-ticket-system/-bugzilla/server-url.html","searchKeys":["serverUrl","var serverUrl: String","dev.teogor.winds.api.TicketSystem.Bugzilla.serverUrl"]},{"name":"var serverUrl: String","description":"dev.teogor.winds.api.TicketSystem.Jira.serverUrl","location":"api/dev.teogor.winds.api/-ticket-system/-jira/server-url.html","searchKeys":["serverUrl","var serverUrl: String","dev.teogor.winds.api.TicketSystem.Jira.serverUrl"]},{"name":"var sourceDirectories: List<String>","description":"dev.teogor.winds.api.DokkaOptions.sourceDirectories","location":"api/dev.teogor.winds.api/-dokka-options/source-directories.html","searchKeys":["sourceDirectories","var sourceDirectories: List<String>","dev.teogor.winds.api.DokkaOptions.sourceDirectories"]},{"name":"var version: Version","description":"dev.teogor.winds.api.ArtifactDescriptor.version","location":"api/dev.teogor.winds.api/-artifact-descriptor/version.html","searchKeys":["version","var version: Version","dev.teogor.winds.api.ArtifactDescriptor.version"]},{"name":"var workspaceName: String?","description":"dev.teogor.winds.api.Scm.Bitbucket.workspaceName","location":"api/dev.teogor.winds.api/-scm/-bitbucket/workspace-name.html","searchKeys":["workspaceName","var workspaceName: String?","dev.teogor.winds.api.Scm.Bitbucket.workspaceName"]}]