[{"name":"Center","description":"dev.teogor.winds.common.MarkdownTable.Align.Center","location":"common/dev.teogor.winds.common/-markdown-table/-align/-center/index.html","searchKeys":["Center","Center","dev.teogor.winds.common.MarkdownTable.Align.Center"]},{"name":"Left","description":"dev.teogor.winds.common.MarkdownTable.Align.Left","location":"common/dev.teogor.winds.common/-markdown-table/-align/-left/index.html","searchKeys":["Left","Left","dev.teogor.winds.common.MarkdownTable.Align.Left"]},{"name":"Right","description":"dev.teogor.winds.common.MarkdownTable.Align.Right","location":"common/dev.teogor.winds.common/-markdown-table/-align/-right/index.html","searchKeys":["Right","Right","dev.teogor.winds.common.MarkdownTable.Align.Right"]},{"name":"abstract val errorId: Int","description":"dev.teogor.winds.common.ErrorId.errorId","location":"common/dev.teogor.winds.common/-error-id/error-id.html","searchKeys":["errorId","abstract val errorId: Int","dev.teogor.winds.common.ErrorId.errorId"]},{"name":"class Builder","description":"dev.teogor.winds.common.MarkdownTable.Builder","location":"common/dev.teogor.winds.common/-markdown-table/-builder/index.html","searchKeys":["Builder","class Builder","dev.teogor.winds.common.MarkdownTable.Builder"]},{"name":"class MarkdownTable(columnTitles: List<String>, columnAlignments: List<MarkdownTable.Align>, rows: MutableList<List<String>> = mutableListOf())","description":"dev.teogor.winds.common.MarkdownTable","location":"common/dev.teogor.winds.common/-markdown-table/index.html","searchKeys":["MarkdownTable","class MarkdownTable(columnTitles: List<String>, columnAlignments: List<MarkdownTable.Align>, rows: MutableList<List<String>> = mutableListOf())","dev.teogor.winds.common.MarkdownTable"]},{"name":"constructor()","description":"dev.teogor.winds.common.MarkdownTable.Builder.Builder","location":"common/dev.teogor.winds.common/-markdown-table/-builder/-builder.html","searchKeys":["Builder","constructor()","dev.teogor.winds.common.MarkdownTable.Builder.Builder"]},{"name":"constructor(columnTitles: List<String>, columnAlignments: List<MarkdownTable.Align>, rows: MutableList<List<String>> = mutableListOf())","description":"dev.teogor.winds.common.MarkdownTable.MarkdownTable","location":"common/dev.teogor.winds.common/-markdown-table/-markdown-table.html","searchKeys":["MarkdownTable","constructor(columnTitles: List<String>, columnAlignments: List<MarkdownTable.Align>, rows: MutableList<List<String>> = mutableListOf())","dev.teogor.winds.common.MarkdownTable.MarkdownTable"]},{"name":"constructor(isAddingAt: Boolean)","description":"dev.teogor.winds.common.MarkdownTable.Builder.RowBuilder.RowBuilder","location":"common/dev.teogor.winds.common/-markdown-table/-builder/-row-builder/-row-builder.html","searchKeys":["RowBuilder","constructor(isAddingAt: Boolean)","dev.teogor.winds.common.MarkdownTable.Builder.RowBuilder.RowBuilder"]},{"name":"constructor(message: String, authors: MutableList<String> = mutableListOf(), elements: MutableList<Int> = mutableListOf())","description":"dev.teogor.winds.common.utils.ChangelogItem.ChangelogItem","location":"common/dev.teogor.winds.common.utils/-changelog-item/-changelog-item.html","searchKeys":["ChangelogItem","constructor(message: String, authors: MutableList<String> = mutableListOf(), elements: MutableList<Int> = mutableListOf())","dev.teogor.winds.common.utils.ChangelogItem.ChangelogItem"]},{"name":"constructor(type: String, items: List<ChangelogItem>)","description":"dev.teogor.winds.common.utils.ChangelogSection.ChangelogSection","location":"common/dev.teogor.winds.common.utils/-changelog-section/-changelog-section.html","searchKeys":["ChangelogSection","constructor(type: String, items: List<ChangelogItem>)","dev.teogor.winds.common.utils.ChangelogSection.ChangelogSection"]},{"name":"constructor(version: Version, previousVersion: Version?, info: String?, content: String?, sections: List<ChangelogSection>?)","description":"dev.teogor.winds.common.utils.ChangelogEntry.ChangelogEntry","location":"common/dev.teogor.winds.common.utils/-changelog-entry/-changelog-entry.html","searchKeys":["ChangelogEntry","constructor(version: Version, previousVersion: Version?, info: String?, content: String?, sections: List<ChangelogSection>?)","dev.teogor.winds.common.utils.ChangelogEntry.ChangelogEntry"]},{"name":"data class ChangelogEntry(val version: Version, val previousVersion: Version?, val info: String?, val content: String?, val sections: List<ChangelogSection>?)","description":"dev.teogor.winds.common.utils.ChangelogEntry","location":"common/dev.teogor.winds.common.utils/-changelog-entry/index.html","searchKeys":["ChangelogEntry","data class ChangelogEntry(val version: Version, val previousVersion: Version?, val info: String?, val content: String?, val sections: List<ChangelogSection>?)","dev.teogor.winds.common.utils.ChangelogEntry"]},{"name":"data class ChangelogItem(val message: String, val authors: MutableList<String> = mutableListOf(), val elements: MutableList<Int> = mutableListOf())","description":"dev.teogor.winds.common.utils.ChangelogItem","location":"common/dev.teogor.winds.common.utils/-changelog-item/index.html","searchKeys":["ChangelogItem","data class ChangelogItem(val message: String, val authors: MutableList<String> = mutableListOf(), val elements: MutableList<Int> = mutableListOf())","dev.teogor.winds.common.utils.ChangelogItem"]},{"name":"data class ChangelogSection(val type: String, val items: List<ChangelogItem>)","description":"dev.teogor.winds.common.utils.ChangelogSection","location":"common/dev.teogor.winds.common.utils/-changelog-section/index.html","searchKeys":["ChangelogSection","data class ChangelogSection(val type: String, val items: List<ChangelogItem>)","dev.teogor.winds.common.utils.ChangelogSection"]},{"name":"enum Align : Enum<MarkdownTable.Align> ","description":"dev.teogor.winds.common.MarkdownTable.Align","location":"common/dev.teogor.winds.common/-markdown-table/-align/index.html","searchKeys":["Align","enum Align : Enum<MarkdownTable.Align> ","dev.teogor.winds.common.MarkdownTable.Align"]},{"name":"fun Map<*, *>.decodeAsChangelogs(): List<ChangelogEntry>","description":"dev.teogor.winds.common.utils.decodeAsChangelogs","location":"common/dev.teogor.winds.common.utils/decode-as-changelogs.html","searchKeys":["decodeAsChangelogs","fun Map<*, *>.decodeAsChangelogs(): List<ChangelogEntry>","dev.teogor.winds.common.utils.decodeAsChangelogs"]},{"name":"fun Project.configureMavenPublishing(winds: Winds, configureAction: MavenPublishBaseExtension.() -> Unit = {})","description":"dev.teogor.winds.common.maven.configureMavenPublishing","location":"common/dev.teogor.winds.common.maven/configure-maven-publishing.html","searchKeys":["configureMavenPublishing","fun Project.configureMavenPublishing(winds: Winds, configureAction: MavenPublishBaseExtension.() -> Unit = {})","dev.teogor.winds.common.maven.configureMavenPublishing"]},{"name":"fun Project.getVanniktechMavenPlugin(): MavenPublishPlugin","description":"dev.teogor.winds.common.ktx.getVanniktechMavenPlugin","location":"common/dev.teogor.winds.common.ktx/get-vanniktech-maven-plugin.html","searchKeys":["getVanniktechMavenPlugin","fun Project.getVanniktechMavenPlugin(): MavenPublishPlugin","dev.teogor.winds.common.ktx.getVanniktechMavenPlugin"]},{"name":"fun Project.hasAndroidLibraryPlugin(): Boolean","description":"dev.teogor.winds.common.utils.hasAndroidLibraryPlugin","location":"common/dev.teogor.winds.common.utils/has-android-library-plugin.html","searchKeys":["hasAndroidLibraryPlugin","fun Project.hasAndroidLibraryPlugin(): Boolean","dev.teogor.winds.common.utils.hasAndroidLibraryPlugin"]},{"name":"fun Project.hasKotlinDslPlugin(): Boolean","description":"dev.teogor.winds.common.utils.hasKotlinDslPlugin","location":"common/dev.teogor.winds.common.utils/has-kotlin-dsl-plugin.html","searchKeys":["hasKotlinDslPlugin","fun Project.hasKotlinDslPlugin(): Boolean","dev.teogor.winds.common.utils.hasKotlinDslPlugin"]},{"name":"fun Project.hasKotlinMultiplatformPlugin(): Boolean","description":"dev.teogor.winds.common.utils.hasKotlinMultiplatformPlugin","location":"common/dev.teogor.winds.common.utils/has-kotlin-multiplatform-plugin.html","searchKeys":["hasKotlinMultiplatformPlugin","fun Project.hasKotlinMultiplatformPlugin(): Boolean","dev.teogor.winds.common.utils.hasKotlinMultiplatformPlugin"]},{"name":"fun Project.hasPublishPlugin(): Boolean","description":"dev.teogor.winds.common.utils.hasPublishPlugin","location":"common/dev.teogor.winds.common.utils/has-publish-plugin.html","searchKeys":["hasPublishPlugin","fun Project.hasPublishPlugin(): Boolean","dev.teogor.winds.common.utils.hasPublishPlugin"]},{"name":"fun Project.hasVanniktechMavenPlugin(): Boolean","description":"dev.teogor.winds.common.ktx.hasVanniktechMavenPlugin","location":"common/dev.teogor.winds.common.ktx/has-vanniktech-maven-plugin.html","searchKeys":["hasVanniktechMavenPlugin","fun Project.hasVanniktechMavenPlugin(): Boolean","dev.teogor.winds.common.ktx.hasVanniktechMavenPlugin"]},{"name":"fun Project.hasWindsPlugin(): Boolean","description":"dev.teogor.winds.common.utils.hasWindsPlugin","location":"common/dev.teogor.winds.common.utils/has-winds-plugin.html","searchKeys":["hasWindsPlugin","fun Project.hasWindsPlugin(): Boolean","dev.teogor.winds.common.utils.hasWindsPlugin"]},{"name":"fun addColumn(title: String, alignment: MarkdownTable.Align = Align.Center)","description":"dev.teogor.winds.common.MarkdownTable.Builder.addColumn","location":"common/dev.teogor.winds.common/-markdown-table/-builder/add-column.html","searchKeys":["addColumn","fun addColumn(title: String, alignment: MarkdownTable.Align = Align.Center)","dev.teogor.winds.common.MarkdownTable.Builder.addColumn"]},{"name":"fun addRow(row: List<String>)","description":"dev.teogor.winds.common.MarkdownTable.addRow","location":"common/dev.teogor.winds.common/-markdown-table/add-row.html","searchKeys":["addRow","fun addRow(row: List<String>)","dev.teogor.winds.common.MarkdownTable.addRow"]},{"name":"fun addRows(vararg rows: List<String>)","description":"dev.teogor.winds.common.MarkdownTable.addRows","location":"common/dev.teogor.winds.common/-markdown-table/add-rows.html","searchKeys":["addRows","fun addRows(vararg rows: List<String>)","dev.teogor.winds.common.MarkdownTable.addRows"]},{"name":"fun addValue(value: String)","description":"dev.teogor.winds.common.MarkdownTable.Builder.RowBuilder.addValue","location":"common/dev.teogor.winds.common/-markdown-table/-builder/-row-builder/add-value.html","searchKeys":["addValue","fun addValue(value: String)","dev.teogor.winds.common.MarkdownTable.Builder.RowBuilder.addValue"]},{"name":"fun addValueAt(index: Int, value: String)","description":"dev.teogor.winds.common.MarkdownTable.Builder.RowBuilder.addValueAt","location":"common/dev.teogor.winds.common/-markdown-table/-builder/-row-builder/add-value-at.html","searchKeys":["addValueAt","fun addValueAt(index: Int, value: String)","dev.teogor.winds.common.MarkdownTable.Builder.RowBuilder.addValueAt"]},{"name":"fun addValues(vararg values: String)","description":"dev.teogor.winds.common.MarkdownTable.Builder.RowBuilder.addValues","location":"common/dev.teogor.winds.common/-markdown-table/-builder/-row-builder/add-values.html","searchKeys":["addValues","fun addValues(vararg values: String)","dev.teogor.winds.common.MarkdownTable.Builder.RowBuilder.addValues"]},{"name":"fun attachMavenData(pom: MavenPom, metadata: ModuleMetadata)","description":"dev.teogor.winds.common.ktx.attachMavenData","location":"common/dev.teogor.winds.common.ktx/attach-maven-data.html","searchKeys":["attachMavenData","fun attachMavenData(pom: MavenPom, metadata: ModuleMetadata)","dev.teogor.winds.common.ktx.attachMavenData"]},{"name":"fun build(): MarkdownTable","description":"dev.teogor.winds.common.MarkdownTable.Builder.build","location":"common/dev.teogor.winds.common/-markdown-table/-builder/build.html","searchKeys":["build","fun build(): MarkdownTable","dev.teogor.winds.common.MarkdownTable.Builder.build"]},{"name":"fun build(): String","description":"dev.teogor.winds.common.MarkdownTable.build","location":"common/dev.teogor.winds.common/-markdown-table/build.html","searchKeys":["build","fun build(): String","dev.teogor.winds.common.MarkdownTable.build"]},{"name":"fun markdownTable(init: MarkdownTable.Builder.() -> Unit): MarkdownTable","description":"dev.teogor.winds.common.markdownTable","location":"common/dev.teogor.winds.common/markdown-table.html","searchKeys":["markdownTable","fun markdownTable(init: MarkdownTable.Builder.() -> Unit): MarkdownTable","dev.teogor.winds.common.markdownTable"]},{"name":"fun row(addValuesAt: Boolean = false, init: MarkdownTable.Builder.RowBuilder.() -> Unit)","description":"dev.teogor.winds.common.MarkdownTable.Builder.row","location":"common/dev.teogor.winds.common/-markdown-table/-builder/row.html","searchKeys":["row","fun row(addValuesAt: Boolean = false, init: MarkdownTable.Builder.RowBuilder.() -> Unit)","dev.teogor.winds.common.MarkdownTable.Builder.row"]},{"name":"fun valueOf(value: String): MarkdownTable.Align","description":"dev.teogor.winds.common.MarkdownTable.Align.valueOf","location":"common/dev.teogor.winds.common/-markdown-table/-align/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): MarkdownTable.Align","dev.teogor.winds.common.MarkdownTable.Align.valueOf"]},{"name":"fun values(): Array<MarkdownTable.Align>","description":"dev.teogor.winds.common.MarkdownTable.Align.values","location":"common/dev.teogor.winds.common/-markdown-table/-align/values.html","searchKeys":["values","fun values(): Array<MarkdownTable.Align>","dev.teogor.winds.common.MarkdownTable.Align.values"]},{"name":"infix fun <T : Person> List<T>.toContributorsSpec(pom: MavenPom)","description":"dev.teogor.winds.common.ktx.toContributorsSpec","location":"common/dev.teogor.winds.common.ktx/to-contributors-spec.html","searchKeys":["toContributorsSpec","infix fun <T : Person> List<T>.toContributorsSpec(pom: MavenPom)","dev.teogor.winds.common.ktx.toContributorsSpec"]},{"name":"infix fun <T : Person> List<T>.toDevelopersSpec(pom: MavenPom)","description":"dev.teogor.winds.common.ktx.toDevelopersSpec","location":"common/dev.teogor.winds.common.ktx/to-developers-spec.html","searchKeys":["toDevelopersSpec","infix fun <T : Person> List<T>.toDevelopersSpec(pom: MavenPom)","dev.teogor.winds.common.ktx.toDevelopersSpec"]},{"name":"infix fun ModuleMetadata.toLicensesSpec(pom: MavenPom)","description":"dev.teogor.winds.common.ktx.toLicensesSpec","location":"common/dev.teogor.winds.common.ktx/to-licenses-spec.html","searchKeys":["toLicensesSpec","infix fun ModuleMetadata.toLicensesSpec(pom: MavenPom)","dev.teogor.winds.common.ktx.toLicensesSpec"]},{"name":"infix fun ModuleMetadata.toPom(pom: MavenPom)","description":"dev.teogor.winds.common.ktx.toPom","location":"common/dev.teogor.winds.common.ktx/to-pom.html","searchKeys":["toPom","infix fun ModuleMetadata.toPom(pom: MavenPom)","dev.teogor.winds.common.ktx.toPom"]},{"name":"inline fun <T : Task> TaskContainer.register(name: String, crossinline block: T.() -> Unit)","description":"dev.teogor.winds.common.ktx.register","location":"common/dev.teogor.winds.common.ktx/register.html","searchKeys":["register","inline fun <T : Task> TaskContainer.register(name: String, crossinline block: T.() -> Unit)","dev.teogor.winds.common.ktx.register"]},{"name":"inline fun Project.processWindsChildProjects(crossinline action: Project.() -> Unit)","description":"dev.teogor.winds.common.utils.processWindsChildProjects","location":"common/dev.teogor.winds.common.utils/process-winds-child-projects.html","searchKeys":["processWindsChildProjects","inline fun Project.processWindsChildProjects(crossinline action: Project.() -> Unit)","dev.teogor.winds.common.utils.processWindsChildProjects"]},{"name":"inner class RowBuilder(isAddingAt: Boolean)","description":"dev.teogor.winds.common.MarkdownTable.Builder.RowBuilder","location":"common/dev.teogor.winds.common/-markdown-table/-builder/-row-builder/index.html","searchKeys":["RowBuilder","inner class RowBuilder(isAddingAt: Boolean)","dev.teogor.winds.common.MarkdownTable.Builder.RowBuilder"]},{"name":"object BomLibraryError : ErrorId","description":"dev.teogor.winds.common.ErrorId.BomLibraryError","location":"common/dev.teogor.winds.common/-error-id/-bom-library-error/index.html","searchKeys":["BomLibraryError","object BomLibraryError : ErrorId","dev.teogor.winds.common.ErrorId.BomLibraryError"]},{"name":"object BomOptionsError : ErrorId","description":"dev.teogor.winds.common.ErrorId.BomOptionsError","location":"common/dev.teogor.winds.common/-error-id/-bom-options-error/index.html","searchKeys":["BomOptionsError","object BomOptionsError : ErrorId","dev.teogor.winds.common.ErrorId.BomOptionsError"]},{"name":"object GenericError : ErrorId","description":"dev.teogor.winds.common.ErrorId.GenericError","location":"common/dev.teogor.winds.common/-error-id/-generic-error/index.html","searchKeys":["GenericError","object GenericError : ErrorId","dev.teogor.winds.common.ErrorId.GenericError"]},{"name":"object PomContributorError : ErrorId","description":"dev.teogor.winds.common.ErrorId.PomContributorError","location":"common/dev.teogor.winds.common/-error-id/-pom-contributor-error/index.html","searchKeys":["PomContributorError","object PomContributorError : ErrorId","dev.teogor.winds.common.ErrorId.PomContributorError"]},{"name":"object PomDeveloperError : ErrorId","description":"dev.teogor.winds.common.ErrorId.PomDeveloperError","location":"common/dev.teogor.winds.common/-error-id/-pom-developer-error/index.html","searchKeys":["PomDeveloperError","object PomDeveloperError : ErrorId","dev.teogor.winds.common.ErrorId.PomDeveloperError"]},{"name":"object PomLicenseError : ErrorId","description":"dev.teogor.winds.common.ErrorId.PomLicenseError","location":"common/dev.teogor.winds.common/-error-id/-pom-license-error/index.html","searchKeys":["PomLicenseError","object PomLicenseError : ErrorId","dev.teogor.winds.common.ErrorId.PomLicenseError"]},{"name":"open fun getErrorIdString(): String","description":"dev.teogor.winds.common.ErrorId.getErrorIdString","location":"common/dev.teogor.winds.common/-error-id/get-error-id-string.html","searchKeys":["getErrorIdString","open fun getErrorIdString(): String","dev.teogor.winds.common.ErrorId.getErrorIdString"]},{"name":"open override val errorId: Int = 1000","description":"dev.teogor.winds.common.ErrorId.GenericError.errorId","location":"common/dev.teogor.winds.common/-error-id/-generic-error/error-id.html","searchKeys":["errorId","open override val errorId: Int = 1000","dev.teogor.winds.common.ErrorId.GenericError.errorId"]},{"name":"open override val errorId: Int = 1001","description":"dev.teogor.winds.common.ErrorId.BomOptionsError.errorId","location":"common/dev.teogor.winds.common/-error-id/-bom-options-error/error-id.html","searchKeys":["errorId","open override val errorId: Int = 1001","dev.teogor.winds.common.ErrorId.BomOptionsError.errorId"]},{"name":"open override val errorId: Int = 1002","description":"dev.teogor.winds.common.ErrorId.BomLibraryError.errorId","location":"common/dev.teogor.winds.common/-error-id/-bom-library-error/error-id.html","searchKeys":["errorId","open override val errorId: Int = 1002","dev.teogor.winds.common.ErrorId.BomLibraryError.errorId"]},{"name":"open override val errorId: Int = 1003","description":"dev.teogor.winds.common.ErrorId.PomLicenseError.errorId","location":"common/dev.teogor.winds.common/-error-id/-pom-license-error/error-id.html","searchKeys":["errorId","open override val errorId: Int = 1003","dev.teogor.winds.common.ErrorId.PomLicenseError.errorId"]},{"name":"open override val errorId: Int = 1004","description":"dev.teogor.winds.common.ErrorId.PomDeveloperError.errorId","location":"common/dev.teogor.winds.common/-error-id/-pom-developer-error/error-id.html","searchKeys":["errorId","open override val errorId: Int = 1004","dev.teogor.winds.common.ErrorId.PomDeveloperError.errorId"]},{"name":"open override val errorId: Int = 1005","description":"dev.teogor.winds.common.ErrorId.PomContributorError.errorId","location":"common/dev.teogor.winds.common/-error-id/-pom-contributor-error/error-id.html","searchKeys":["errorId","open override val errorId: Int = 1005","dev.teogor.winds.common.ErrorId.PomContributorError.errorId"]},{"name":"open val errorIdFormatted: String","description":"dev.teogor.winds.common.ErrorId.errorIdFormatted","location":"common/dev.teogor.winds.common/-error-id/error-id-formatted.html","searchKeys":["errorIdFormatted","open val errorIdFormatted: String","dev.teogor.winds.common.ErrorId.errorIdFormatted"]},{"name":"sealed interface ErrorId","description":"dev.teogor.winds.common.ErrorId","location":"common/dev.teogor.winds.common/-error-id/index.html","searchKeys":["ErrorId","sealed interface ErrorId","dev.teogor.winds.common.ErrorId"]},{"name":"val authors: MutableList<String>","description":"dev.teogor.winds.common.utils.ChangelogItem.authors","location":"common/dev.teogor.winds.common.utils/-changelog-item/authors.html","searchKeys":["authors","val authors: MutableList<String>","dev.teogor.winds.common.utils.ChangelogItem.authors"]},{"name":"val content: String?","description":"dev.teogor.winds.common.utils.ChangelogEntry.content","location":"common/dev.teogor.winds.common.utils/-changelog-entry/content.html","searchKeys":["content","val content: String?","dev.teogor.winds.common.utils.ChangelogEntry.content"]},{"name":"val elements: MutableList<Int>","description":"dev.teogor.winds.common.utils.ChangelogItem.elements","location":"common/dev.teogor.winds.common.utils/-changelog-item/elements.html","searchKeys":["elements","val elements: MutableList<Int>","dev.teogor.winds.common.utils.ChangelogItem.elements"]},{"name":"val entries: EnumEntries<MarkdownTable.Align>","description":"dev.teogor.winds.common.MarkdownTable.Align.entries","location":"common/dev.teogor.winds.common/-markdown-table/-align/entries.html","searchKeys":["entries","val entries: EnumEntries<MarkdownTable.Align>","dev.teogor.winds.common.MarkdownTable.Align.entries"]},{"name":"val info: String?","description":"dev.teogor.winds.common.utils.ChangelogEntry.info","location":"common/dev.teogor.winds.common.utils/-changelog-entry/info.html","searchKeys":["info","val info: String?","dev.teogor.winds.common.utils.ChangelogEntry.info"]},{"name":"val items: List<ChangelogItem>","description":"dev.teogor.winds.common.utils.ChangelogSection.items","location":"common/dev.teogor.winds.common.utils/-changelog-section/items.html","searchKeys":["items","val items: List<ChangelogItem>","dev.teogor.winds.common.utils.ChangelogSection.items"]},{"name":"val message: String","description":"dev.teogor.winds.common.utils.ChangelogItem.message","location":"common/dev.teogor.winds.common.utils/-changelog-item/message.html","searchKeys":["message","val message: String","dev.teogor.winds.common.utils.ChangelogItem.message"]},{"name":"val previousVersion: Version?","description":"dev.teogor.winds.common.utils.ChangelogEntry.previousVersion","location":"common/dev.teogor.winds.common.utils/-changelog-entry/previous-version.html","searchKeys":["previousVersion","val previousVersion: Version?","dev.teogor.winds.common.utils.ChangelogEntry.previousVersion"]},{"name":"val row: MutableList<String>","description":"dev.teogor.winds.common.MarkdownTable.Builder.RowBuilder.row","location":"common/dev.teogor.winds.common/-markdown-table/-builder/-row-builder/row.html","searchKeys":["row","val row: MutableList<String>","dev.teogor.winds.common.MarkdownTable.Builder.RowBuilder.row"]},{"name":"val sections: List<ChangelogSection>?","description":"dev.teogor.winds.common.utils.ChangelogEntry.sections","location":"common/dev.teogor.winds.common.utils/-changelog-entry/sections.html","searchKeys":["sections","val sections: List<ChangelogSection>?","dev.teogor.winds.common.utils.ChangelogEntry.sections"]},{"name":"val type: String","description":"dev.teogor.winds.common.utils.ChangelogSection.type","location":"common/dev.teogor.winds.common.utils/-changelog-section/type.html","searchKeys":["type","val type: String","dev.teogor.winds.common.utils.ChangelogSection.type"]},{"name":"val version: Version","description":"dev.teogor.winds.common.utils.ChangelogEntry.version","location":"common/dev.teogor.winds.common.utils/-changelog-entry/version.html","searchKeys":["version","val version: Version","dev.teogor.winds.common.utils.ChangelogEntry.version"]},{"name":"ApiReference","description":"dev.teogor.winds.gradle.codegen.RegionTag.ApiReference","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/-region-tag/-api-reference/index.html","searchKeys":["ApiReference","ApiReference","dev.teogor.winds.gradle.codegen.RegionTag.ApiReference"]},{"name":"BomToLibraryVersionMapping","description":"dev.teogor.winds.gradle.codegen.RegionTag.BomToLibraryVersionMapping","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/-region-tag/-bom-to-library-version-mapping/index.html","searchKeys":["BomToLibraryVersionMapping","BomToLibraryVersionMapping","dev.teogor.winds.gradle.codegen.RegionTag.BomToLibraryVersionMapping"]},{"name":"BomWithVersionCatalog","description":"dev.teogor.winds.gradle.codegen.RegionTag.BomWithVersionCatalog","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/-region-tag/-bom-with-version-catalog/index.html","searchKeys":["BomWithVersionCatalog","BomWithVersionCatalog","dev.teogor.winds.gradle.codegen.RegionTag.BomWithVersionCatalog"]},{"name":"Dependencies","description":"dev.teogor.winds.gradle.codegen.RegionTag.Dependencies","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/-region-tag/-dependencies/index.html","searchKeys":["Dependencies","Dependencies","dev.teogor.winds.gradle.codegen.RegionTag.Dependencies"]},{"name":"DifferentLibraryVersionUsage","description":"dev.teogor.winds.gradle.codegen.RegionTag.DifferentLibraryVersionUsage","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/-region-tag/-different-library-version-usage/index.html","searchKeys":["DifferentLibraryVersionUsage","DifferentLibraryVersionUsage","dev.teogor.winds.gradle.codegen.RegionTag.DifferentLibraryVersionUsage"]},{"name":"Feedback","description":"dev.teogor.winds.gradle.codegen.RegionTag.Feedback","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/-region-tag/-feedback/index.html","searchKeys":["Feedback","Feedback","dev.teogor.winds.gradle.codegen.RegionTag.Feedback"]},{"name":"GroupOverview","description":"dev.teogor.winds.gradle.codegen.RegionTag.GroupOverview","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/-region-tag/-group-overview/index.html","searchKeys":["GroupOverview","GroupOverview","dev.teogor.winds.gradle.codegen.RegionTag.GroupOverview"]},{"name":"GroupVersionOverview","description":"dev.teogor.winds.gradle.codegen.RegionTag.GroupVersionOverview","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/-region-tag/-group-version-overview/index.html","searchKeys":["GroupVersionOverview","GroupVersionOverview","dev.teogor.winds.gradle.codegen.RegionTag.GroupVersionOverview"]},{"name":"ReleaseTable","description":"dev.teogor.winds.gradle.codegen.RegionTag.ReleaseTable","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/-region-tag/-release-table/index.html","searchKeys":["ReleaseTable","ReleaseTable","dev.teogor.winds.gradle.codegen.RegionTag.ReleaseTable"]},{"name":"ReportIssueFeedback","description":"dev.teogor.winds.gradle.codegen.RegionTag.ReportIssueFeedback","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/-region-tag/-report-issue-feedback/index.html","searchKeys":["ReportIssueFeedback","ReportIssueFeedback","dev.teogor.winds.gradle.codegen.RegionTag.ReportIssueFeedback"]},{"name":"VersionChangelog","description":"dev.teogor.winds.gradle.codegen.RegionTag.VersionChangelog","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/-region-tag/-version-changelog/index.html","searchKeys":["VersionChangelog","VersionChangelog","dev.teogor.winds.gradle.codegen.RegionTag.VersionChangelog"]},{"name":"abstract class DocsModuleHandler(bundle: ModuleDescriptor, projectDir: File, outputDir: File, buildOutputDir: File, forceDateUpdate: Boolean)","description":"dev.teogor.winds.gradle.docs.DocsModuleHandler","location":"gradle-plugin/dev.teogor.winds.gradle.docs/-docs-module-handler/index.html","searchKeys":["DocsModuleHandler","abstract class DocsModuleHandler(bundle: ModuleDescriptor, projectDir: File, outputDir: File, buildOutputDir: File, forceDateUpdate: Boolean)","dev.teogor.winds.gradle.docs.DocsModuleHandler"]},{"name":"abstract class ReleaseNotesTask : DefaultTask","description":"dev.teogor.winds.gradle.tasks.ReleaseNotesTask","location":"gradle-plugin/dev.teogor.winds.gradle.tasks/-release-notes-task/index.html","searchKeys":["ReleaseNotesTask","abstract class ReleaseNotesTask : DefaultTask","dev.teogor.winds.gradle.tasks.ReleaseNotesTask"]},{"name":"abstract class WindsImpl(project: Project) : Winds","description":"dev.teogor.winds.api.impl.WindsImpl","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/index.html","searchKeys":["WindsImpl","abstract class WindsImpl(project: Project) : Winds","dev.teogor.winds.api.impl.WindsImpl"]},{"name":"abstract fun createDependencyDocumentation()","description":"dev.teogor.winds.gradle.docs.DocsModuleHandler.createDependencyDocumentation","location":"gradle-plugin/dev.teogor.winds.gradle.docs/-docs-module-handler/create-dependency-documentation.html","searchKeys":["createDependencyDocumentation","abstract fun createDependencyDocumentation()","dev.teogor.winds.gradle.docs.DocsModuleHandler.createDependencyDocumentation"]},{"name":"abstract fun createReleaseNotes()","description":"dev.teogor.winds.gradle.docs.DocsModuleHandler.createReleaseNotes","location":"gradle-plugin/dev.teogor.winds.gradle.docs/-docs-module-handler/create-release-notes.html","searchKeys":["createReleaseNotes","abstract fun createReleaseNotes()","dev.teogor.winds.gradle.docs.DocsModuleHandler.createReleaseNotes"]},{"name":"abstract fun createRootNotes()","description":"dev.teogor.winds.gradle.docs.DocsModuleHandler.createRootNotes","location":"gradle-plugin/dev.teogor.winds.gradle.docs/-docs-module-handler/create-root-notes.html","searchKeys":["createRootNotes","abstract fun createRootNotes()","dev.teogor.winds.gradle.docs.DocsModuleHandler.createRootNotes"]},{"name":"abstract fun updateDependencyBundles()","description":"dev.teogor.winds.gradle.docs.DocsModuleHandler.updateDependencyBundles","location":"gradle-plugin/dev.teogor.winds.gradle.docs/-docs-module-handler/update-dependency-bundles.html","searchKeys":["updateDependencyBundles","abstract fun updateDependencyBundles()","dev.teogor.winds.gradle.docs.DocsModuleHandler.updateDependencyBundles"]},{"name":"class BomDocsModuleHandler(bundle: ModuleDescriptor, dependencies: List<ModuleDescriptor>, projectDir: File, outputDir: File, buildOutputDir: File, forceDateUpdate: Boolean) : DocsModuleHandler","description":"dev.teogor.winds.gradle.docs.BomDocsModuleHandler","location":"gradle-plugin/dev.teogor.winds.gradle.docs/-bom-docs-module-handler/index.html","searchKeys":["BomDocsModuleHandler","class BomDocsModuleHandler(bundle: ModuleDescriptor, dependencies: List<ModuleDescriptor>, projectDir: File, outputDir: File, buildOutputDir: File, forceDateUpdate: Boolean) : DocsModuleHandler","dev.teogor.winds.gradle.docs.BomDocsModuleHandler"]},{"name":"class CodebaseOptionsImpl : CodebaseOptions","description":"dev.teogor.winds.api.impl.CodebaseOptionsImpl","location":"gradle-plugin/dev.teogor.winds.api.impl/-codebase-options-impl/index.html","searchKeys":["CodebaseOptionsImpl","class CodebaseOptionsImpl : CodebaseOptions","dev.teogor.winds.api.impl.CodebaseOptionsImpl"]},{"name":"class DocsGeneratorImpl : DocsGenerator","description":"dev.teogor.winds.api.impl.DocsGeneratorImpl","location":"gradle-plugin/dev.teogor.winds.api.impl/-docs-generator-impl/index.html","searchKeys":["DocsGeneratorImpl","class DocsGeneratorImpl : DocsGenerator","dev.teogor.winds.api.impl.DocsGeneratorImpl"]},{"name":"class DocsModuleHandlerFactory","description":"dev.teogor.winds.gradle.docs.factory.DocsModuleHandlerFactory","location":"gradle-plugin/dev.teogor.winds.gradle.docs.factory/-docs-module-handler-factory/index.html","searchKeys":["DocsModuleHandlerFactory","class DocsModuleHandlerFactory","dev.teogor.winds.gradle.docs.factory.DocsModuleHandlerFactory"]},{"name":"class DocumentationBuilderImpl : DocumentationBuilder","description":"dev.teogor.winds.api.impl.DocumentationBuilderImpl","location":"gradle-plugin/dev.teogor.winds.api.impl/-documentation-builder-impl/index.html","searchKeys":["DocumentationBuilderImpl","class DocumentationBuilderImpl : DocumentationBuilder","dev.teogor.winds.api.impl.DocumentationBuilderImpl"]},{"name":"class ModuleCodeGenWriter(module: ModuleDescriptor, modules: List<ModuleDescriptor>)","description":"dev.teogor.winds.gradle.codegen.ModuleCodeGenWriter","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/-module-code-gen-writer/index.html","searchKeys":["ModuleCodeGenWriter","class ModuleCodeGenWriter(module: ModuleDescriptor, modules: List<ModuleDescriptor>)","dev.teogor.winds.gradle.codegen.ModuleCodeGenWriter"]},{"name":"class StandardDocsModuleHandler(bundle: ModuleDescriptor, dependencies: List<ModuleDescriptor>, projectDir: File, outputDir: File, buildOutputDir: File, forceDateUpdate: Boolean) : DocsModuleHandler","description":"dev.teogor.winds.gradle.docs.StandardDocsModuleHandler","location":"gradle-plugin/dev.teogor.winds.gradle.docs/-standard-docs-module-handler/index.html","searchKeys":["StandardDocsModuleHandler","class StandardDocsModuleHandler(bundle: ModuleDescriptor, dependencies: List<ModuleDescriptor>, projectDir: File, outputDir: File, buildOutputDir: File, forceDateUpdate: Boolean) : DocsModuleHandler","dev.teogor.winds.gradle.docs.StandardDocsModuleHandler"]},{"name":"class WindsPlugin : BaseWindsPlugin","description":"dev.teogor.winds.gradle.WindsPlugin","location":"gradle-plugin/dev.teogor.winds.gradle/-winds-plugin/index.html","searchKeys":["WindsPlugin","class WindsPlugin : BaseWindsPlugin","dev.teogor.winds.gradle.WindsPlugin"]},{"name":"class WorkflowSynthesizerImpl : WorkflowSynthesizer","description":"dev.teogor.winds.api.impl.WorkflowSynthesizerImpl","location":"gradle-plugin/dev.teogor.winds.api.impl/-workflow-synthesizer-impl/index.html","searchKeys":["WorkflowSynthesizerImpl","class WorkflowSynthesizerImpl : WorkflowSynthesizer","dev.teogor.winds.api.impl.WorkflowSynthesizerImpl"]},{"name":"const val MIN_GRADLE_VERSION: String","description":"dev.teogor.winds.gradle.WindsPlugin.Companion.MIN_GRADLE_VERSION","location":"gradle-plugin/dev.teogor.winds.gradle/-winds-plugin/-companion/-m-i-n_-g-r-a-d-l-e_-v-e-r-s-i-o-n.html","searchKeys":["MIN_GRADLE_VERSION","const val MIN_GRADLE_VERSION: String","dev.teogor.winds.gradle.WindsPlugin.Companion.MIN_GRADLE_VERSION"]},{"name":"const val bomVersionCatalogLibraries: String","description":"dev.teogor.winds.gradle.codegen.bomVersionCatalogLibraries","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/bom-version-catalog-libraries.html","searchKeys":["bomVersionCatalogLibraries","const val bomVersionCatalogLibraries: String","dev.teogor.winds.gradle.codegen.bomVersionCatalogLibraries"]},{"name":"const val dependenciesBomVersionCatalog: String","description":"dev.teogor.winds.gradle.codegen.dependenciesBomVersionCatalog","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/dependencies-bom-version-catalog.html","searchKeys":["dependenciesBomVersionCatalog","const val dependenciesBomVersionCatalog: String","dev.teogor.winds.gradle.codegen.dependenciesBomVersionCatalog"]},{"name":"const val implementationPlatformBom: String","description":"dev.teogor.winds.gradle.codegen.implementationPlatformBom","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/implementation-platform-bom.html","searchKeys":["implementationPlatformBom","const val implementationPlatformBom: String","dev.teogor.winds.gradle.codegen.implementationPlatformBom"]},{"name":"const val importLibraryByVersionCoordinates: String","description":"dev.teogor.winds.gradle.codegen.importLibraryByVersionCoordinates","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/import-library-by-version-coordinates.html","searchKeys":["importLibraryByVersionCoordinates","const val importLibraryByVersionCoordinates: String","dev.teogor.winds.gradle.codegen.importLibraryByVersionCoordinates"]},{"name":"const val importLibraryByVersionName: String","description":"dev.teogor.winds.gradle.codegen.importLibraryByVersionName","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/import-library-by-version-name.html","searchKeys":["importLibraryByVersionName","const val importLibraryByVersionName: String","dev.teogor.winds.gradle.codegen.importLibraryByVersionName"]},{"name":"const val importLibraryCoordinates: String","description":"dev.teogor.winds.gradle.codegen.importLibraryCoordinates","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/import-library-coordinates.html","searchKeys":["importLibraryCoordinates","const val importLibraryCoordinates: String","dev.teogor.winds.gradle.codegen.importLibraryCoordinates"]},{"name":"const val issueTrackerLink: String","description":"dev.teogor.winds.gradle.codegen.issueTrackerLink","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/issue-tracker-link.html","searchKeys":["issueTrackerLink","const val issueTrackerLink: String","dev.teogor.winds.gradle.codegen.issueTrackerLink"]},{"name":"const val libraryName: String","description":"dev.teogor.winds.gradle.codegen.libraryName","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/library-name.html","searchKeys":["libraryName","const val libraryName: String","dev.teogor.winds.gradle.codegen.libraryName"]},{"name":"const val libraryNameLowercase: String","description":"dev.teogor.winds.gradle.codegen.libraryNameLowercase","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/library-name-lowercase.html","searchKeys":["libraryNameLowercase","const val libraryNameLowercase: String","dev.teogor.winds.gradle.codegen.libraryNameLowercase"]},{"name":"constructor()","description":"dev.teogor.winds.api.impl.CodebaseOptionsImpl.CodebaseOptionsImpl","location":"gradle-plugin/dev.teogor.winds.api.impl/-codebase-options-impl/-codebase-options-impl.html","searchKeys":["CodebaseOptionsImpl","constructor()","dev.teogor.winds.api.impl.CodebaseOptionsImpl.CodebaseOptionsImpl"]},{"name":"constructor()","description":"dev.teogor.winds.api.impl.DocsGeneratorImpl.DocsGeneratorImpl","location":"gradle-plugin/dev.teogor.winds.api.impl/-docs-generator-impl/-docs-generator-impl.html","searchKeys":["DocsGeneratorImpl","constructor()","dev.teogor.winds.api.impl.DocsGeneratorImpl.DocsGeneratorImpl"]},{"name":"constructor()","description":"dev.teogor.winds.api.impl.DocumentationBuilderImpl.DocumentationBuilderImpl","location":"gradle-plugin/dev.teogor.winds.api.impl/-documentation-builder-impl/-documentation-builder-impl.html","searchKeys":["DocumentationBuilderImpl","constructor()","dev.teogor.winds.api.impl.DocumentationBuilderImpl.DocumentationBuilderImpl"]},{"name":"constructor()","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.ModuleMetadataImpl","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/-module-metadata-impl.html","searchKeys":["ModuleMetadataImpl","constructor()","dev.teogor.winds.api.impl.ModuleMetadataImpl.ModuleMetadataImpl"]},{"name":"constructor()","description":"dev.teogor.winds.api.impl.PublishingImpl.PublishingImpl","location":"gradle-plugin/dev.teogor.winds.api.impl/-publishing-impl/-publishing-impl.html","searchKeys":["PublishingImpl","constructor()","dev.teogor.winds.api.impl.PublishingImpl.PublishingImpl"]},{"name":"constructor()","description":"dev.teogor.winds.api.impl.PublishingOptionsImpl.PublishingOptionsImpl","location":"gradle-plugin/dev.teogor.winds.api.impl/-publishing-options-impl/-publishing-options-impl.html","searchKeys":["PublishingOptionsImpl","constructor()","dev.teogor.winds.api.impl.PublishingOptionsImpl.PublishingOptionsImpl"]},{"name":"constructor()","description":"dev.teogor.winds.api.impl.WindsFeaturesImpl.WindsFeaturesImpl","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-features-impl/-winds-features-impl.html","searchKeys":["WindsFeaturesImpl","constructor()","dev.teogor.winds.api.impl.WindsFeaturesImpl.WindsFeaturesImpl"]},{"name":"constructor()","description":"dev.teogor.winds.api.impl.WorkflowSynthesizerImpl.WorkflowSynthesizerImpl","location":"gradle-plugin/dev.teogor.winds.api.impl/-workflow-synthesizer-impl/-workflow-synthesizer-impl.html","searchKeys":["WorkflowSynthesizerImpl","constructor()","dev.teogor.winds.api.impl.WorkflowSynthesizerImpl.WorkflowSynthesizerImpl"]},{"name":"constructor()","description":"dev.teogor.winds.gradle.WindsPlugin.WindsPlugin","location":"gradle-plugin/dev.teogor.winds.gradle/-winds-plugin/-winds-plugin.html","searchKeys":["WindsPlugin","constructor()","dev.teogor.winds.gradle.WindsPlugin.WindsPlugin"]},{"name":"constructor()","description":"dev.teogor.winds.gradle.docs.factory.DocsModuleHandlerFactory.DocsModuleHandlerFactory","location":"gradle-plugin/dev.teogor.winds.gradle.docs.factory/-docs-module-handler-factory/-docs-module-handler-factory.html","searchKeys":["DocsModuleHandlerFactory","constructor()","dev.teogor.winds.gradle.docs.factory.DocsModuleHandlerFactory.DocsModuleHandlerFactory"]},{"name":"constructor()","description":"dev.teogor.winds.gradle.tasks.ReleaseNotesTask.ReleaseNotesTask","location":"gradle-plugin/dev.teogor.winds.gradle.tasks/-release-notes-task/-release-notes-task.html","searchKeys":["ReleaseNotesTask","constructor()","dev.teogor.winds.gradle.tasks.ReleaseNotesTask.ReleaseNotesTask"]},{"name":"constructor(bundle: ModuleDescriptor, dependencies: List<ModuleDescriptor>, projectDir: File, outputDir: File, buildOutputDir: File, forceDateUpdate: Boolean)","description":"dev.teogor.winds.gradle.docs.BomDocsModuleHandler.BomDocsModuleHandler","location":"gradle-plugin/dev.teogor.winds.gradle.docs/-bom-docs-module-handler/-bom-docs-module-handler.html","searchKeys":["BomDocsModuleHandler","constructor(bundle: ModuleDescriptor, dependencies: List<ModuleDescriptor>, projectDir: File, outputDir: File, buildOutputDir: File, forceDateUpdate: Boolean)","dev.teogor.winds.gradle.docs.BomDocsModuleHandler.BomDocsModuleHandler"]},{"name":"constructor(bundle: ModuleDescriptor, dependencies: List<ModuleDescriptor>, projectDir: File, outputDir: File, buildOutputDir: File, forceDateUpdate: Boolean)","description":"dev.teogor.winds.gradle.docs.StandardDocsModuleHandler.StandardDocsModuleHandler","location":"gradle-plugin/dev.teogor.winds.gradle.docs/-standard-docs-module-handler/-standard-docs-module-handler.html","searchKeys":["StandardDocsModuleHandler","constructor(bundle: ModuleDescriptor, dependencies: List<ModuleDescriptor>, projectDir: File, outputDir: File, buildOutputDir: File, forceDateUpdate: Boolean)","dev.teogor.winds.gradle.docs.StandardDocsModuleHandler.StandardDocsModuleHandler"]},{"name":"constructor(bundle: ModuleDescriptor, projectDir: File, outputDir: File, buildOutputDir: File, forceDateUpdate: Boolean)","description":"dev.teogor.winds.gradle.docs.DocsModuleHandler.DocsModuleHandler","location":"gradle-plugin/dev.teogor.winds.gradle.docs/-docs-module-handler/-docs-module-handler.html","searchKeys":["DocsModuleHandler","constructor(bundle: ModuleDescriptor, projectDir: File, outputDir: File, buildOutputDir: File, forceDateUpdate: Boolean)","dev.teogor.winds.gradle.docs.DocsModuleHandler.DocsModuleHandler"]},{"name":"constructor(mavenPublishing: Boolean = false, docsGenerator: Boolean = false, workflowSynthesizer: Boolean = false)","description":"dev.teogor.winds.api.impl.FeaturesImpl.FeaturesImpl","location":"gradle-plugin/dev.teogor.winds.api.impl/-features-impl/-features-impl.html","searchKeys":["FeaturesImpl","constructor(mavenPublishing: Boolean = false, docsGenerator: Boolean = false, workflowSynthesizer: Boolean = false)","dev.teogor.winds.api.impl.FeaturesImpl.FeaturesImpl"]},{"name":"constructor(module: ModuleDescriptor, modules: List<ModuleDescriptor>)","description":"dev.teogor.winds.gradle.codegen.ModuleCodeGenWriter.ModuleCodeGenWriter","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/-module-code-gen-writer/-module-code-gen-writer.html","searchKeys":["ModuleCodeGenWriter","constructor(module: ModuleDescriptor, modules: List<ModuleDescriptor>)","dev.teogor.winds.gradle.codegen.ModuleCodeGenWriter.ModuleCodeGenWriter"]},{"name":"constructor(project: Project)","description":"dev.teogor.winds.api.impl.WindsImpl.WindsImpl","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/-winds-impl.html","searchKeys":["WindsImpl","constructor(project: Project)","dev.teogor.winds.api.impl.WindsImpl.WindsImpl"]},{"name":"data class FeaturesImpl(var mavenPublishing: Boolean = false, var docsGenerator: Boolean = false, var workflowSynthesizer: Boolean = false) : Features","description":"dev.teogor.winds.api.impl.FeaturesImpl","location":"gradle-plugin/dev.teogor.winds.api.impl/-features-impl/index.html","searchKeys":["FeaturesImpl","data class FeaturesImpl(var mavenPublishing: Boolean = false, var docsGenerator: Boolean = false, var workflowSynthesizer: Boolean = false) : Features","dev.teogor.winds.api.impl.FeaturesImpl"]},{"name":"enum RegionTag : Enum<RegionTag> ","description":"dev.teogor.winds.gradle.codegen.RegionTag","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/-region-tag/index.html","searchKeys":["RegionTag","enum RegionTag : Enum<RegionTag> ","dev.teogor.winds.gradle.codegen.RegionTag"]},{"name":"fun File.replaceContentsWithinRegion(region: RegionTag, trimReplacement: Boolean = true, additionalReplacements: StringBuilder.() -> Unit = {}, stringBuilder: StringBuilder.() -> Unit)","description":"dev.teogor.winds.gradle.codegen.replaceContentsWithinRegion","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/replace-contents-within-region.html","searchKeys":["replaceContentsWithinRegion","fun File.replaceContentsWithinRegion(region: RegionTag, trimReplacement: Boolean = true, additionalReplacements: StringBuilder.() -> Unit = {}, stringBuilder: StringBuilder.() -> Unit)","dev.teogor.winds.gradle.codegen.replaceContentsWithinRegion"]},{"name":"fun ModuleDescriptor.isBomLibrary(): Boolean","description":"dev.teogor.winds.gradle.utils.isBomLibrary","location":"gradle-plugin/dev.teogor.winds.gradle.utils/is-bom-library.html","searchKeys":["isBomLibrary","fun ModuleDescriptor.isBomLibrary(): Boolean","dev.teogor.winds.gradle.utils.isBomLibrary"]},{"name":"fun ModuleDescriptor.isLibrary(): Boolean","description":"dev.teogor.winds.gradle.utils.isLibrary","location":"gradle-plugin/dev.teogor.winds.gradle.utils/is-library.html","searchKeys":["isLibrary","fun ModuleDescriptor.isLibrary(): Boolean","dev.teogor.winds.gradle.utils.isLibrary"]},{"name":"fun Project.configureBomModule(publishing: Publishing, bomOptions: BomOptions?)","description":"dev.teogor.winds.gradle.tasks.configureBomModule","location":"gradle-plugin/dev.teogor.winds.gradle.tasks/configure-bom-module.html","searchKeys":["configureBomModule","fun Project.configureBomModule(publishing: Publishing, bomOptions: BomOptions?)","dev.teogor.winds.gradle.tasks.configureBomModule"]},{"name":"fun Project.configureMavenPublish(winds: Winds)","description":"dev.teogor.winds.gradle.tasks.configureMavenPublish","location":"gradle-plugin/dev.teogor.winds.gradle.tasks/configure-maven-publish.html","searchKeys":["configureMavenPublish","fun Project.configureMavenPublish(winds: Winds)","dev.teogor.winds.gradle.tasks.configureMavenPublish"]},{"name":"fun Project.withWinds(block: Winds.() -> Unit): Winds","description":"dev.teogor.winds.gradle.withWinds","location":"gradle-plugin/dev.teogor.winds.gradle/with-winds.html","searchKeys":["withWinds","fun Project.withWinds(block: Winds.() -> Unit): Winds","dev.teogor.winds.gradle.withWinds"]},{"name":"fun Project.withWinds(onWindsAvailable: Winds.() -> Unit = {}, onWindsReady: Winds.() -> Unit)","description":"dev.teogor.winds.gradle.withWinds","location":"gradle-plugin/dev.teogor.winds.gradle/with-winds.html","searchKeys":["withWinds","fun Project.withWinds(onWindsAvailable: Winds.() -> Unit = {}, onWindsReady: Winds.() -> Unit)","dev.teogor.winds.gradle.withWinds"]},{"name":"fun String.appendTo(writer: StringBuilder)","description":"dev.teogor.winds.gradle.utils.appendTo","location":"gradle-plugin/dev.teogor.winds.gradle.utils/append-to.html","searchKeys":["appendTo","fun String.appendTo(writer: StringBuilder)","dev.teogor.winds.gradle.utils.appendTo"]},{"name":"fun String.escapeAlias(separator: String): String","description":"dev.teogor.winds.gradle.utils.escapeAlias","location":"gradle-plugin/dev.teogor.winds.gradle.utils/escape-alias.html","searchKeys":["escapeAlias","fun String.escapeAlias(separator: String): String","dev.teogor.winds.gradle.utils.escapeAlias"]},{"name":"fun StringBuilder.indent(indent: String): StringBuilder","description":"dev.teogor.winds.gradle.ktx.indent","location":"gradle-plugin/dev.teogor.winds.gradle.ktx/indent.html","searchKeys":["indent","fun StringBuilder.indent(indent: String): StringBuilder","dev.teogor.winds.gradle.ktx.indent"]},{"name":"fun StringBuilder.replace(oldValue: String, newValue: String): StringBuilder","description":"dev.teogor.winds.gradle.ktx.replace","location":"gradle-plugin/dev.teogor.winds.gradle.ktx/replace.html","searchKeys":["replace","fun StringBuilder.replace(oldValue: String, newValue: String): StringBuilder","dev.teogor.winds.gradle.ktx.replace"]},{"name":"fun StringBuilder.replace(oldValue: String, stringBuilder: StringBuilder.() -> Unit): StringBuilder","description":"dev.teogor.winds.gradle.ktx.replace","location":"gradle-plugin/dev.teogor.winds.gradle.ktx/replace.html","searchKeys":["replace","fun StringBuilder.replace(oldValue: String, stringBuilder: StringBuilder.() -> Unit): StringBuilder","dev.teogor.winds.gradle.ktx.replace"]},{"name":"fun action()","description":"dev.teogor.winds.gradle.tasks.ReleaseNotesTask.action","location":"gradle-plugin/dev.teogor.winds.gradle.tasks/-release-notes-task/action.html","searchKeys":["action","fun action()","dev.teogor.winds.gradle.tasks.ReleaseNotesTask.action"]},{"name":"fun addModuleDescriptor(moduleDescriptor: ModuleDescriptor)","description":"dev.teogor.winds.gradle.tasks.ReleaseNotesTask.addModuleDescriptor","location":"gradle-plugin/dev.teogor.winds.gradle.tasks/-release-notes-task/add-module-descriptor.html","searchKeys":["addModuleDescriptor","fun addModuleDescriptor(moduleDescriptor: ModuleDescriptor)","dev.teogor.winds.gradle.tasks.ReleaseNotesTask.addModuleDescriptor"]},{"name":"fun asVersionCatalogImpl(library: ModuleDescriptor, versionRef: Boolean, owner: String?, includeOwner: Boolean = true, asModule: Boolean = false): String","description":"dev.teogor.winds.gradle.docs.utils.asVersionCatalogImpl","location":"gradle-plugin/dev.teogor.winds.gradle.docs.utils/as-version-catalog-impl.html","searchKeys":["asVersionCatalogImpl","fun asVersionCatalogImpl(library: ModuleDescriptor, versionRef: Boolean, owner: String?, includeOwner: Boolean = true, asModule: Boolean = false): String","dev.teogor.winds.gradle.docs.utils.asVersionCatalogImpl"]},{"name":"fun asVersionCatalogValue(library: ModuleDescriptor, versionRef: Boolean, owner: String?, pluginId: String? = null, includeOwner: Boolean = true, asModule: Boolean = false, versionAlias: String = if (includeOwner && owner != null) {\n    \"$owner ${library.completeName}\"\n  } else {\n    library.completeName\n  }.escapeAlias(\"-\")): String","description":"dev.teogor.winds.gradle.utils.asVersionCatalogValue","location":"gradle-plugin/dev.teogor.winds.gradle.utils/as-version-catalog-value.html","searchKeys":["asVersionCatalogValue","fun asVersionCatalogValue(library: ModuleDescriptor, versionRef: Boolean, owner: String?, pluginId: String? = null, includeOwner: Boolean = true, asModule: Boolean = false, versionAlias: String = if (includeOwner && owner != null) {\n    \"$owner ${library.completeName}\"\n  } else {\n    library.completeName\n  }.escapeAlias(\"-\")): String","dev.teogor.winds.gradle.utils.asVersionCatalogValue"]},{"name":"fun bomMappingMd(inputDir: File, bomModule: ModuleDescriptor, modules: List<ModuleDescriptor>)","description":"dev.teogor.winds.gradle.docs.utils.bomMappingMd","location":"gradle-plugin/dev.teogor.winds.gradle.docs.utils/bom-mapping-md.html","searchKeys":["bomMappingMd","fun bomMappingMd(inputDir: File, bomModule: ModuleDescriptor, modules: List<ModuleDescriptor>)","dev.teogor.winds.gradle.docs.utils.bomMappingMd"]},{"name":"fun bomMd(inputDir: File, bomModule: ModuleDescriptor, modules: List<ModuleDescriptor>, includeOwner: Boolean, asModule: Boolean)","description":"dev.teogor.winds.gradle.docs.utils.bomMd","location":"gradle-plugin/dev.teogor.winds.gradle.docs.utils/bom-md.html","searchKeys":["bomMd","fun bomMd(inputDir: File, bomModule: ModuleDescriptor, modules: List<ModuleDescriptor>, includeOwner: Boolean, asModule: Boolean)","dev.teogor.winds.gradle.docs.utils.bomMd"]},{"name":"fun createBomGroupNotes(bundle: ModuleDescriptor, bundlesInfo: List<DependencyBundle>, dependencies: List<ModuleDescriptor>, inputDir: File, outputDir: File, fileName: String, includeOwner: Boolean, asModule: Boolean)","description":"dev.teogor.winds.gradle.docs.utils.createBomGroupNotes","location":"gradle-plugin/dev.teogor.winds.gradle.docs.utils/create-bom-group-notes.html","searchKeys":["createBomGroupNotes","fun createBomGroupNotes(bundle: ModuleDescriptor, bundlesInfo: List<DependencyBundle>, dependencies: List<ModuleDescriptor>, inputDir: File, outputDir: File, fileName: String, includeOwner: Boolean, asModule: Boolean)","dev.teogor.winds.gradle.docs.utils.createBomGroupNotes"]},{"name":"fun createBomNotes(module: ModuleDescriptor, modules: List<ModuleDescriptor>, inputDir: File, outputDir: File, includeOwner: Boolean, asModule: Boolean)","description":"dev.teogor.winds.gradle.docs.utils.createBomNotes","location":"gradle-plugin/dev.teogor.winds.gradle.docs.utils/create-bom-notes.html","searchKeys":["createBomNotes","fun createBomNotes(module: ModuleDescriptor, modules: List<ModuleDescriptor>, inputDir: File, outputDir: File, includeOwner: Boolean, asModule: Boolean)","dev.teogor.winds.gradle.docs.utils.createBomNotes"]},{"name":"fun createHandler(projectDir: File, bundle: ModuleDescriptor, dependencies: List<ModuleDescriptor>, outputDir: File, buildOutputDir: File, forceDateUpdate: Boolean): DocsModuleHandler","description":"dev.teogor.winds.gradle.docs.factory.DocsModuleHandlerFactory.createHandler","location":"gradle-plugin/dev.teogor.winds.gradle.docs.factory/-docs-module-handler-factory/create-handler.html","searchKeys":["createHandler","fun createHandler(projectDir: File, bundle: ModuleDescriptor, dependencies: List<ModuleDescriptor>, outputDir: File, buildOutputDir: File, forceDateUpdate: Boolean): DocsModuleHandler","dev.teogor.winds.gradle.docs.factory.DocsModuleHandlerFactory.createHandler"]},{"name":"fun createModuleNotes(module: ModuleDescriptor, modules: List<ModuleDescriptor>, inputDir: File, outputDir: File, includeOwner: Boolean, asModule: Boolean, fileName: String, isBom: Boolean = false)","description":"dev.teogor.winds.gradle.docs.utils.createModuleNotes","location":"gradle-plugin/dev.teogor.winds.gradle.docs.utils/create-module-notes.html","searchKeys":["createModuleNotes","fun createModuleNotes(module: ModuleDescriptor, modules: List<ModuleDescriptor>, inputDir: File, outputDir: File, includeOwner: Boolean, asModule: Boolean, fileName: String, isBom: Boolean = false)","dev.teogor.winds.gradle.docs.utils.createModuleNotes"]},{"name":"fun createReleaseNotes(bundle: ModuleDescriptor, bundleInfo: DependencyBundle, dependencies: List<ModuleDescriptor>, inputDir: File, outputDir: File, windsChangelogYml: File = File(bundle.windsChangelogYml), fileName: String, includeOwner: Boolean, asModule: Boolean)","description":"dev.teogor.winds.gradle.docs.utils.createReleaseNotes","location":"gradle-plugin/dev.teogor.winds.gradle.docs.utils/create-release-notes.html","searchKeys":["createReleaseNotes","fun createReleaseNotes(bundle: ModuleDescriptor, bundleInfo: DependencyBundle, dependencies: List<ModuleDescriptor>, inputDir: File, outputDir: File, windsChangelogYml: File = File(bundle.windsChangelogYml), fileName: String, includeOwner: Boolean, asModule: Boolean)","dev.teogor.winds.gradle.docs.utils.createReleaseNotes"]},{"name":"fun formatDependency(dependency: String, path: Path, newlineSeparator: String): String","description":"dev.teogor.winds.gradle.docs.utils.formatDependency","location":"gradle-plugin/dev.teogor.winds.gradle.docs.utils/format-dependency.html","searchKeys":["formatDependency","fun formatDependency(dependency: String, path: Path, newlineSeparator: String): String","dev.teogor.winds.gradle.docs.utils.formatDependency"]},{"name":"fun generateDependencyDocumentation(scm: Scm?, includeOwner: Boolean, asModule: Boolean, short: Boolean = false, isBom: Boolean = false, implementationPath: String? = null): String","description":"dev.teogor.winds.gradle.codegen.ModuleCodeGenWriter.generateDependencyDocumentation","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/-module-code-gen-writer/generate-dependency-documentation.html","searchKeys":["generateDependencyDocumentation","fun generateDependencyDocumentation(scm: Scm?, includeOwner: Boolean, asModule: Boolean, short: Boolean = false, isBom: Boolean = false, implementationPath: String? = null): String","dev.teogor.winds.gradle.codegen.ModuleCodeGenWriter.generateDependencyDocumentation"]},{"name":"fun getDependencies(forKotlin: Boolean, moduleAliasVar: String): String","description":"dev.teogor.winds.gradle.codegen.ModuleCodeGenWriter.getDependencies","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/-module-code-gen-writer/get-dependencies.html","searchKeys":["getDependencies","fun getDependencies(forKotlin: Boolean, moduleAliasVar: String): String","dev.teogor.winds.gradle.codegen.ModuleCodeGenWriter.getDependencies"]},{"name":"fun getDependenciesToml(forKotlin: Boolean, scm: Scm?, includeOwner: Boolean, isBom: Boolean = false): String","description":"dev.teogor.winds.gradle.codegen.ModuleCodeGenWriter.getDependenciesToml","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/-module-code-gen-writer/get-dependencies-toml.html","searchKeys":["getDependenciesToml","fun getDependenciesToml(forKotlin: Boolean, scm: Scm?, includeOwner: Boolean, isBom: Boolean = false): String","dev.teogor.winds.gradle.codegen.ModuleCodeGenWriter.getDependenciesToml"]},{"name":"fun getGradleLibsVersionsToml(moduleAlias: String, scm: Scm?, includeOwner: Boolean, asModule: Boolean, hasPlugin: Boolean, isBom: Boolean = false): String","description":"dev.teogor.winds.gradle.codegen.ModuleCodeGenWriter.getGradleLibsVersionsToml","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/-module-code-gen-writer/get-gradle-libs-versions-toml.html","searchKeys":["getGradleLibsVersionsToml","fun getGradleLibsVersionsToml(moduleAlias: String, scm: Scm?, includeOwner: Boolean, asModule: Boolean, hasPlugin: Boolean, isBom: Boolean = false): String","dev.teogor.winds.gradle.codegen.ModuleCodeGenWriter.getGradleLibsVersionsToml"]},{"name":"fun getPluginIds(applyPlugins: Boolean = false, forKotlin: Boolean = true): String","description":"dev.teogor.winds.gradle.codegen.ModuleCodeGenWriter.getPluginIds","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/-module-code-gen-writer/get-plugin-ids.html","searchKeys":["getPluginIds","fun getPluginIds(applyPlugins: Boolean = false, forKotlin: Boolean = true): String","dev.teogor.winds.gradle.codegen.ModuleCodeGenWriter.getPluginIds"]},{"name":"fun getPluginIdsToml(applyPlugins: Boolean = false, forKotlin: Boolean = true, scm: Scm?, includeOwner: Boolean): String","description":"dev.teogor.winds.gradle.codegen.ModuleCodeGenWriter.getPluginIdsToml","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/-module-code-gen-writer/get-plugin-ids-toml.html","searchKeys":["getPluginIdsToml","fun getPluginIdsToml(applyPlugins: Boolean = false, forKotlin: Boolean = true, scm: Scm?, includeOwner: Boolean): String","dev.teogor.winds.gradle.codegen.ModuleCodeGenWriter.getPluginIdsToml"]},{"name":"fun getRegionTag(): String","description":"dev.teogor.winds.gradle.codegen.RegionTag.getRegionTag","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/-region-tag/get-region-tag.html","searchKeys":["getRegionTag","fun getRegionTag(): String","dev.teogor.winds.gradle.codegen.RegionTag.getRegionTag"]},{"name":"fun retrieveLibraryAlias(library: ModuleDescriptor, pluginId: String?, includeOwner: Boolean, owner: String?, separator: String = \"-\"): String","description":"dev.teogor.winds.gradle.utils.retrieveLibraryAlias","location":"gradle-plugin/dev.teogor.winds.gradle.utils/retrieve-library-alias.html","searchKeys":["retrieveLibraryAlias","fun retrieveLibraryAlias(library: ModuleDescriptor, pluginId: String?, includeOwner: Boolean, owner: String?, separator: String = \"-\"): String","dev.teogor.winds.gradle.utils.retrieveLibraryAlias"]},{"name":"fun setForceDateUpdate(force: Boolean)","description":"dev.teogor.winds.gradle.tasks.ReleaseNotesTask.setForceDateUpdate","location":"gradle-plugin/dev.teogor.winds.gradle.tasks/-release-notes-task/set-force-date-update.html","searchKeys":["setForceDateUpdate","fun setForceDateUpdate(force: Boolean)","dev.teogor.winds.gradle.tasks.ReleaseNotesTask.setForceDateUpdate"]},{"name":"fun valueOf(value: String): RegionTag","description":"dev.teogor.winds.gradle.codegen.RegionTag.valueOf","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/-region-tag/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RegionTag","dev.teogor.winds.gradle.codegen.RegionTag.valueOf"]},{"name":"fun values(): Array<RegionTag>","description":"dev.teogor.winds.gradle.codegen.RegionTag.values","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/-region-tag/values.html","searchKeys":["values","fun values(): Array<RegionTag>","dev.teogor.winds.gradle.codegen.RegionTag.values"]},{"name":"inline fun <T> T?.ifNull(defaultValue: () -> T): T","description":"dev.teogor.winds.gradle.utils.ifNull","location":"gradle-plugin/dev.teogor.winds.gradle.utils/if-null.html","searchKeys":["ifNull","inline fun <T> T?.ifNull(defaultValue: () -> T): T","dev.teogor.winds.gradle.utils.ifNull"]},{"name":"inline fun StringBuilder.appendContent(crossinline content: StringBuilder.() -> Unit)","description":"dev.teogor.winds.gradle.utils.appendContent","location":"gradle-plugin/dev.teogor.winds.gradle.utils/append-content.html","searchKeys":["appendContent","inline fun StringBuilder.appendContent(crossinline content: StringBuilder.() -> Unit)","dev.teogor.winds.gradle.utils.appendContent"]},{"name":"object Companion","description":"dev.teogor.winds.gradle.WindsPlugin.Companion","location":"gradle-plugin/dev.teogor.winds.gradle/-winds-plugin/-companion/index.html","searchKeys":["Companion","object Companion","dev.teogor.winds.gradle.WindsPlugin.Companion"]},{"name":"open class ModuleMetadataImpl : ModuleMetadata","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/index.html","searchKeys":["ModuleMetadataImpl","open class ModuleMetadataImpl : ModuleMetadata","dev.teogor.winds.api.impl.ModuleMetadataImpl"]},{"name":"open class PublishingImpl : Publishing","description":"dev.teogor.winds.api.impl.PublishingImpl","location":"gradle-plugin/dev.teogor.winds.api.impl/-publishing-impl/index.html","searchKeys":["PublishingImpl","open class PublishingImpl : Publishing","dev.teogor.winds.api.impl.PublishingImpl"]},{"name":"open class PublishingOptionsImpl : PublishingOptions","description":"dev.teogor.winds.api.impl.PublishingOptionsImpl","location":"gradle-plugin/dev.teogor.winds.api.impl/-publishing-options-impl/index.html","searchKeys":["PublishingOptionsImpl","open class PublishingOptionsImpl : PublishingOptions","dev.teogor.winds.api.impl.PublishingOptionsImpl"]},{"name":"open class WindsFeaturesImpl : WindsFeatures","description":"dev.teogor.winds.api.impl.WindsFeaturesImpl","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-features-impl/index.html","searchKeys":["WindsFeaturesImpl","open class WindsFeaturesImpl : WindsFeatures","dev.teogor.winds.api.impl.WindsFeaturesImpl"]},{"name":"open infix override fun List<License>.register(license: License)","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.register","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/register.html","searchKeys":["register","open infix override fun List<License>.register(license: License)","dev.teogor.winds.api.impl.ModuleMetadataImpl.register"]},{"name":"open infix override fun ModuleMetadata.licensedUnder(license: License)","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.licensedUnder","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/licensed-under.html","searchKeys":["licensedUnder","open infix override fun ModuleMetadata.licensedUnder(license: License)","dev.teogor.winds.api.impl.ModuleMetadataImpl.licensedUnder"]},{"name":"open operator override fun List<License>.plusAssign(license: License)","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.plusAssign","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/plus-assign.html","searchKeys":["plusAssign","open operator override fun List<License>.plusAssign(license: License)","dev.teogor.winds.api.impl.ModuleMetadataImpl.plusAssign"]},{"name":"open operator override fun plusAssign(license: License)","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.plusAssign","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/plus-assign.html","searchKeys":["plusAssign","open operator override fun plusAssign(license: License)","dev.teogor.winds.api.impl.ModuleMetadataImpl.plusAssign"]},{"name":"open override fun <T : Person> person(type: KClass<T>, block: T.() -> Unit)","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.person","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/person.html","searchKeys":["person","open override fun <T : Person> person(type: KClass<T>, block: T.() -> Unit)","dev.teogor.winds.api.impl.ModuleMetadataImpl.person"]},{"name":"open override fun <T : Scm> scm(type: KClass<T>, block: T.() -> Unit)","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.scm","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/scm.html","searchKeys":["scm","open override fun <T : Scm> scm(type: KClass<T>, block: T.() -> Unit)","dev.teogor.winds.api.impl.ModuleMetadataImpl.scm"]},{"name":"open override fun <T : TicketSystem> ticketSystem(type: KClass<T>, block: T.() -> Unit)","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.ticketSystem","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/ticket-system.html","searchKeys":["ticketSystem","open override fun <T : TicketSystem> ticketSystem(type: KClass<T>, block: T.() -> Unit)","dev.teogor.winds.api.impl.ModuleMetadataImpl.ticketSystem"]},{"name":"open override fun apply(project: Project)","description":"dev.teogor.winds.gradle.WindsPlugin.apply","location":"gradle-plugin/dev.teogor.winds.gradle/-winds-plugin/apply.html","searchKeys":["apply","open override fun apply(project: Project)","dev.teogor.winds.gradle.WindsPlugin.apply"]},{"name":"open override fun artifactDescriptor(block: ArtifactDescriptor.() -> Unit)","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.artifactDescriptor","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/artifact-descriptor.html","searchKeys":["artifactDescriptor","open override fun artifactDescriptor(block: ArtifactDescriptor.() -> Unit)","dev.teogor.winds.api.impl.ModuleMetadataImpl.artifactDescriptor"]},{"name":"open override fun binaryCompatibility(configure: BinaryCompatibility.() -> Unit)","description":"dev.teogor.winds.api.impl.CodebaseOptionsImpl.binaryCompatibility","location":"gradle-plugin/dev.teogor.winds.api.impl/-codebase-options-impl/binary-compatibility.html","searchKeys":["binaryCompatibility","open override fun binaryCompatibility(configure: BinaryCompatibility.() -> Unit)","dev.teogor.winds.api.impl.CodebaseOptionsImpl.binaryCompatibility"]},{"name":"open override fun bomOptions(block: BomOptions.() -> Unit)","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.bomOptions","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/bom-options.html","searchKeys":["bomOptions","open override fun bomOptions(block: BomOptions.() -> Unit)","dev.teogor.winds.api.impl.ModuleMetadataImpl.bomOptions"]},{"name":"open override fun codebaseOptions(configure: CodebaseOptions.() -> Unit)","description":"dev.teogor.winds.api.impl.WindsImpl.codebaseOptions","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/codebase-options.html","searchKeys":["codebaseOptions","open override fun codebaseOptions(configure: CodebaseOptions.() -> Unit)","dev.teogor.winds.api.impl.WindsImpl.codebaseOptions"]},{"name":"open override fun configureProjects(includeRoot: Boolean, action: Project.(Winds) -> Unit)","description":"dev.teogor.winds.api.impl.WindsImpl.configureProjects","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/configure-projects.html","searchKeys":["configureProjects","open override fun configureProjects(includeRoot: Boolean, action: Project.(Winds) -> Unit)","dev.teogor.winds.api.impl.WindsImpl.configureProjects"]},{"name":"open override fun copy(from: DocumentationBuilder): DocumentationBuilder","description":"dev.teogor.winds.api.impl.DocumentationBuilderImpl.copy","location":"gradle-plugin/dev.teogor.winds.api.impl/-documentation-builder-impl/copy.html","searchKeys":["copy","open override fun copy(from: DocumentationBuilder): DocumentationBuilder","dev.teogor.winds.api.impl.DocumentationBuilderImpl.copy"]},{"name":"open override fun copy(from: Publishing): Publishing","description":"dev.teogor.winds.api.impl.PublishingImpl.copy","location":"gradle-plugin/dev.teogor.winds.api.impl/-publishing-impl/copy.html","searchKeys":["copy","open override fun copy(from: Publishing): Publishing","dev.teogor.winds.api.impl.PublishingImpl.copy"]},{"name":"open override fun copy(from: PublishingOptions): PublishingOptions","description":"dev.teogor.winds.api.impl.PublishingOptionsImpl.copy","location":"gradle-plugin/dev.teogor.winds.api.impl/-publishing-options-impl/copy.html","searchKeys":["copy","open override fun copy(from: PublishingOptions): PublishingOptions","dev.teogor.winds.api.impl.PublishingOptionsImpl.copy"]},{"name":"open override fun copy(fromObj: ModuleMetadata): ModuleMetadata","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.copy","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/copy.html","searchKeys":["copy","open override fun copy(fromObj: ModuleMetadata): ModuleMetadata","dev.teogor.winds.api.impl.ModuleMetadataImpl.copy"]},{"name":"open override fun createDependencyDocumentation()","description":"dev.teogor.winds.gradle.docs.BomDocsModuleHandler.createDependencyDocumentation","location":"gradle-plugin/dev.teogor.winds.gradle.docs/-bom-docs-module-handler/create-dependency-documentation.html","searchKeys":["createDependencyDocumentation","open override fun createDependencyDocumentation()","dev.teogor.winds.gradle.docs.BomDocsModuleHandler.createDependencyDocumentation"]},{"name":"open override fun createDependencyDocumentation()","description":"dev.teogor.winds.gradle.docs.StandardDocsModuleHandler.createDependencyDocumentation","location":"gradle-plugin/dev.teogor.winds.gradle.docs/-standard-docs-module-handler/create-dependency-documentation.html","searchKeys":["createDependencyDocumentation","open override fun createDependencyDocumentation()","dev.teogor.winds.gradle.docs.StandardDocsModuleHandler.createDependencyDocumentation"]},{"name":"open override fun createReleaseNotes()","description":"dev.teogor.winds.gradle.docs.BomDocsModuleHandler.createReleaseNotes","location":"gradle-plugin/dev.teogor.winds.gradle.docs/-bom-docs-module-handler/create-release-notes.html","searchKeys":["createReleaseNotes","open override fun createReleaseNotes()","dev.teogor.winds.gradle.docs.BomDocsModuleHandler.createReleaseNotes"]},{"name":"open override fun createReleaseNotes()","description":"dev.teogor.winds.gradle.docs.StandardDocsModuleHandler.createReleaseNotes","location":"gradle-plugin/dev.teogor.winds.gradle.docs/-standard-docs-module-handler/create-release-notes.html","searchKeys":["createReleaseNotes","open override fun createReleaseNotes()","dev.teogor.winds.gradle.docs.StandardDocsModuleHandler.createReleaseNotes"]},{"name":"open override fun createRootNotes()","description":"dev.teogor.winds.gradle.docs.BomDocsModuleHandler.createRootNotes","location":"gradle-plugin/dev.teogor.winds.gradle.docs/-bom-docs-module-handler/create-root-notes.html","searchKeys":["createRootNotes","open override fun createRootNotes()","dev.teogor.winds.gradle.docs.BomDocsModuleHandler.createRootNotes"]},{"name":"open override fun createRootNotes()","description":"dev.teogor.winds.gradle.docs.StandardDocsModuleHandler.createRootNotes","location":"gradle-plugin/dev.teogor.winds.gradle.docs/-standard-docs-module-handler/create-root-notes.html","searchKeys":["createRootNotes","open override fun createRootNotes()","dev.teogor.winds.gradle.docs.StandardDocsModuleHandler.createRootNotes"]},{"name":"open override fun docsGenerator(action: DocsGenerator.() -> Unit)","description":"dev.teogor.winds.api.impl.WindsImpl.docsGenerator","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/docs-generator.html","searchKeys":["docsGenerator","open override fun docsGenerator(action: DocsGenerator.() -> Unit)","dev.teogor.winds.api.impl.WindsImpl.docsGenerator"]},{"name":"open override fun documentationBuilder(configure: DocumentationBuilder.() -> Unit)","description":"dev.teogor.winds.api.impl.WindsImpl.documentationBuilder","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/documentation-builder.html","searchKeys":["documentationBuilder","open override fun documentationBuilder(configure: DocumentationBuilder.() -> Unit)","dev.teogor.winds.api.impl.WindsImpl.documentationBuilder"]},{"name":"open override fun dokka(configure: DokkaOptions.() -> Unit)","description":"dev.teogor.winds.api.impl.CodebaseOptionsImpl.dokka","location":"gradle-plugin/dev.teogor.winds.api.impl/-codebase-options-impl/dokka.html","searchKeys":["dokka","open override fun dokka(configure: DokkaOptions.() -> Unit)","dev.teogor.winds.api.impl.CodebaseOptionsImpl.dokka"]},{"name":"open override fun excludeModules(block: () -> List<String>)","description":"dev.teogor.winds.api.impl.DocsGeneratorImpl.excludeModules","location":"gradle-plugin/dev.teogor.winds.api.impl/-docs-generator-impl/exclude-modules.html","searchKeys":["excludeModules","open override fun excludeModules(block: () -> List<String>)","dev.teogor.winds.api.impl.DocsGeneratorImpl.excludeModules"]},{"name":"open override fun excludeModules(block: () -> List<String>)","description":"dev.teogor.winds.api.impl.WorkflowSynthesizerImpl.excludeModules","location":"gradle-plugin/dev.teogor.winds.api.impl/-workflow-synthesizer-impl/exclude-modules.html","searchKeys":["excludeModules","open override fun excludeModules(block: () -> List<String>)","dev.teogor.winds.api.impl.WorkflowSynthesizerImpl.excludeModules"]},{"name":"open override fun features(action: Features.() -> Unit)","description":"dev.teogor.winds.api.impl.WindsImpl.features","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/features.html","searchKeys":["features","open override fun features(action: Features.() -> Unit)","dev.teogor.winds.api.impl.WindsImpl.features"]},{"name":"open override fun licenses(block: MutableList<License>.() -> Unit)","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.licenses","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/licenses.html","searchKeys":["licenses","open override fun licenses(block: MutableList<License>.() -> Unit)","dev.teogor.winds.api.impl.ModuleMetadataImpl.licenses"]},{"name":"open override fun licenses(vararg licenses: License)","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.licenses","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/licenses.html","searchKeys":["licenses","open override fun licenses(vararg licenses: License)","dev.teogor.winds.api.impl.ModuleMetadataImpl.licenses"]},{"name":"open override fun moduleMetadata(action: ModuleMetadata.() -> Unit)","description":"dev.teogor.winds.api.impl.WindsImpl.moduleMetadata","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/module-metadata.html","searchKeys":["moduleMetadata","open override fun moduleMetadata(action: ModuleMetadata.() -> Unit)","dev.teogor.winds.api.impl.WindsImpl.moduleMetadata"]},{"name":"open override fun publishing(action: Publishing.() -> Unit)","description":"dev.teogor.winds.api.impl.WindsImpl.publishing","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/publishing.html","searchKeys":["publishing","open override fun publishing(action: Publishing.() -> Unit)","dev.teogor.winds.api.impl.WindsImpl.publishing"]},{"name":"open override fun publishingOptions(action: PublishingOptions.() -> Unit)","description":"dev.teogor.winds.api.impl.WindsImpl.publishingOptions","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/publishing-options.html","searchKeys":["publishingOptions","open override fun publishingOptions(action: PublishingOptions.() -> Unit)","dev.teogor.winds.api.impl.WindsImpl.publishingOptions"]},{"name":"open override fun spotless(configure: SpotlessOptions.() -> Unit)","description":"dev.teogor.winds.api.impl.CodebaseOptionsImpl.spotless","location":"gradle-plugin/dev.teogor.winds.api.impl/-codebase-options-impl/spotless.html","searchKeys":["spotless","open override fun spotless(configure: SpotlessOptions.() -> Unit)","dev.teogor.winds.api.impl.CodebaseOptionsImpl.spotless"]},{"name":"open override fun toString(): String","description":"dev.teogor.winds.gradle.codegen.RegionTag.toString","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/-region-tag/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.teogor.winds.gradle.codegen.RegionTag.toString"]},{"name":"open override fun updateDependencyBundles()","description":"dev.teogor.winds.gradle.docs.BomDocsModuleHandler.updateDependencyBundles","location":"gradle-plugin/dev.teogor.winds.gradle.docs/-bom-docs-module-handler/update-dependency-bundles.html","searchKeys":["updateDependencyBundles","open override fun updateDependencyBundles()","dev.teogor.winds.gradle.docs.BomDocsModuleHandler.updateDependencyBundles"]},{"name":"open override fun updateDependencyBundles()","description":"dev.teogor.winds.gradle.docs.StandardDocsModuleHandler.updateDependencyBundles","location":"gradle-plugin/dev.teogor.winds.gradle.docs/-standard-docs-module-handler/update-dependency-bundles.html","searchKeys":["updateDependencyBundles","open override fun updateDependencyBundles()","dev.teogor.winds.gradle.docs.StandardDocsModuleHandler.updateDependencyBundles"]},{"name":"open override fun windsFeatures(action: WindsFeatures.() -> Unit)","description":"dev.teogor.winds.api.impl.WindsImpl.windsFeatures","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/winds-features.html","searchKeys":["windsFeatures","open override fun windsFeatures(action: WindsFeatures.() -> Unit)","dev.teogor.winds.api.impl.WindsImpl.windsFeatures"]},{"name":"open override fun workflowSynthesizer(action: WorkflowSynthesizer.() -> Unit)","description":"dev.teogor.winds.api.impl.WindsImpl.workflowSynthesizer","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/workflow-synthesizer.html","searchKeys":["workflowSynthesizer","open override fun workflowSynthesizer(action: WorkflowSynthesizer.() -> Unit)","dev.teogor.winds.api.impl.WindsImpl.workflowSynthesizer"]},{"name":"open override val allSpecs: MutableList<ArtifactDescriptor>","description":"dev.teogor.winds.api.impl.WindsImpl.allSpecs","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/all-specs.html","searchKeys":["allSpecs","open override val allSpecs: MutableList<ArtifactDescriptor>","dev.teogor.winds.api.impl.WindsImpl.allSpecs"]},{"name":"open override val artifactDescriptor: ArtifactDescriptor?","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.artifactDescriptor","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/artifact-descriptor.html","searchKeys":["artifactDescriptor","open override val artifactDescriptor: ArtifactDescriptor?","dev.teogor.winds.api.impl.ModuleMetadataImpl.artifactDescriptor"]},{"name":"open override val bomOptions: BomOptions?","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.bomOptions","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/bom-options.html","searchKeys":["bomOptions","open override val bomOptions: BomOptions?","dev.teogor.winds.api.impl.ModuleMetadataImpl.bomOptions"]},{"name":"open override val licenses: List<License>","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.licenses","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/licenses.html","searchKeys":["licenses","open override val licenses: List<License>","dev.teogor.winds.api.impl.ModuleMetadataImpl.licenses"]},{"name":"open override val persons: List<Person>","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.persons","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/persons.html","searchKeys":["persons","open override val persons: List<Person>","dev.teogor.winds.api.impl.ModuleMetadataImpl.persons"]},{"name":"open override val pluginIds: MutableList<String>","description":"dev.teogor.winds.api.impl.DocumentationBuilderImpl.pluginIds","location":"gradle-plugin/dev.teogor.winds.api.impl/-documentation-builder-impl/plugin-ids.html","searchKeys":["pluginIds","open override val pluginIds: MutableList<String>","dev.teogor.winds.api.impl.DocumentationBuilderImpl.pluginIds"]},{"name":"open override val scm: Scm?","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.scm","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/scm.html","searchKeys":["scm","open override val scm: Scm?","dev.teogor.winds.api.impl.ModuleMetadataImpl.scm"]},{"name":"open override val ticketSystem: TicketSystem?","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.ticketSystem","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/ticket-system.html","searchKeys":["ticketSystem","open override val ticketSystem: TicketSystem?","dev.teogor.winds.api.impl.ModuleMetadataImpl.ticketSystem"]},{"name":"open override var alertOnDependentModules: Boolean","description":"dev.teogor.winds.api.impl.DocsGeneratorImpl.alertOnDependentModules","location":"gradle-plugin/dev.teogor.winds.api.impl/-docs-generator-impl/alert-on-dependent-modules.html","searchKeys":["alertOnDependentModules","open override var alertOnDependentModules: Boolean","dev.teogor.winds.api.impl.DocsGeneratorImpl.alertOnDependentModules"]},{"name":"open override var alertOnDependentModules: Boolean","description":"dev.teogor.winds.api.impl.DocumentationBuilderImpl.alertOnDependentModules","location":"gradle-plugin/dev.teogor.winds.api.impl/-documentation-builder-impl/alert-on-dependent-modules.html","searchKeys":["alertOnDependentModules","open override var alertOnDependentModules: Boolean","dev.teogor.winds.api.impl.DocumentationBuilderImpl.alertOnDependentModules"]},{"name":"open override var apiDocsUrl: String?","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.apiDocsUrl","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/api-docs-url.html","searchKeys":["apiDocsUrl","open override var apiDocsUrl: String?","dev.teogor.winds.api.impl.ModuleMetadataImpl.apiDocsUrl"]},{"name":"open override var binaryCompatibility: BinaryCompatibility","description":"dev.teogor.winds.api.impl.CodebaseOptionsImpl.binaryCompatibility","location":"gradle-plugin/dev.teogor.winds.api.impl/-codebase-options-impl/binary-compatibility.html","searchKeys":["binaryCompatibility","open override var binaryCompatibility: BinaryCompatibility","dev.teogor.winds.api.impl.CodebaseOptionsImpl.binaryCompatibility"]},{"name":"open override var cascade: Boolean","description":"dev.teogor.winds.api.impl.PublishingImpl.cascade","location":"gradle-plugin/dev.teogor.winds.api.impl/-publishing-impl/cascade.html","searchKeys":["cascade","open override var cascade: Boolean","dev.teogor.winds.api.impl.PublishingImpl.cascade"]},{"name":"open override var cascadePublish: Boolean","description":"dev.teogor.winds.api.impl.PublishingOptionsImpl.cascadePublish","location":"gradle-plugin/dev.teogor.winds.api.impl/-publishing-options-impl/cascade-publish.html","searchKeys":["cascadePublish","open override var cascadePublish: Boolean","dev.teogor.winds.api.impl.PublishingOptionsImpl.cascadePublish"]},{"name":"open override var codebaseOptions: CodebaseOptions","description":"dev.teogor.winds.api.impl.WindsImpl.codebaseOptions","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/codebase-options.html","searchKeys":["codebaseOptions","open override var codebaseOptions: CodebaseOptions","dev.teogor.winds.api.impl.WindsImpl.codebaseOptions"]},{"name":"open override var createApiReference: Boolean","description":"dev.teogor.winds.api.impl.DocumentationBuilderImpl.createApiReference","location":"gradle-plugin/dev.teogor.winds.api.impl/-documentation-builder-impl/create-api-reference.html","searchKeys":["createApiReference","open override var createApiReference: Boolean","dev.teogor.winds.api.impl.DocumentationBuilderImpl.createApiReference"]},{"name":"open override var dependencyGatheringType: DependencyType","description":"dev.teogor.winds.api.impl.DocsGeneratorImpl.dependencyGatheringType","location":"gradle-plugin/dev.teogor.winds.api.impl/-docs-generator-impl/dependency-gathering-type.html","searchKeys":["dependencyGatheringType","open override var dependencyGatheringType: DependencyType","dev.teogor.winds.api.impl.DocsGeneratorImpl.dependencyGatheringType"]},{"name":"open override var dependencyGatheringType: DependencyType","description":"dev.teogor.winds.api.impl.DocumentationBuilderImpl.dependencyGatheringType","location":"gradle-plugin/dev.teogor.winds.api.impl/-documentation-builder-impl/dependency-gathering-type.html","searchKeys":["dependencyGatheringType","open override var dependencyGatheringType: DependencyType","dev.teogor.winds.api.impl.DocumentationBuilderImpl.dependencyGatheringType"]},{"name":"open override var description: String?","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.description","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/description.html","searchKeys":["description","open override var description: String?","dev.teogor.winds.api.impl.ModuleMetadataImpl.description"]},{"name":"open override var docsGenerator: Boolean","description":"dev.teogor.winds.api.impl.FeaturesImpl.docsGenerator","location":"gradle-plugin/dev.teogor.winds.api.impl/-features-impl/docs-generator.html","searchKeys":["docsGenerator","open override var docsGenerator: Boolean","dev.teogor.winds.api.impl.FeaturesImpl.docsGenerator"]},{"name":"open override var docsGenerator: Boolean","description":"dev.teogor.winds.api.impl.WindsFeaturesImpl.docsGenerator","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-features-impl/docs-generator.html","searchKeys":["docsGenerator","open override var docsGenerator: Boolean","dev.teogor.winds.api.impl.WindsFeaturesImpl.docsGenerator"]},{"name":"open override var docsGenerator: DocsGenerator","description":"dev.teogor.winds.api.impl.WindsImpl.docsGenerator","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/docs-generator.html","searchKeys":["docsGenerator","open override var docsGenerator: DocsGenerator","dev.teogor.winds.api.impl.WindsImpl.docsGenerator"]},{"name":"open override var documentationBuilder: DocumentationBuilder","description":"dev.teogor.winds.api.impl.WindsImpl.documentationBuilder","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/documentation-builder.html","searchKeys":["documentationBuilder","open override var documentationBuilder: DocumentationBuilder","dev.teogor.winds.api.impl.WindsImpl.documentationBuilder"]},{"name":"open override var dokka: DokkaOptions","description":"dev.teogor.winds.api.impl.CodebaseOptionsImpl.dokka","location":"gradle-plugin/dev.teogor.winds.api.impl/-codebase-options-impl/dokka.html","searchKeys":["dokka","open override var dokka: DokkaOptions","dev.teogor.winds.api.impl.CodebaseOptionsImpl.dokka"]},{"name":"open override var enablePublicationSigning: Boolean","description":"dev.teogor.winds.api.impl.PublishingImpl.enablePublicationSigning","location":"gradle-plugin/dev.teogor.winds.api.impl/-publishing-impl/enable-publication-signing.html","searchKeys":["enablePublicationSigning","open override var enablePublicationSigning: Boolean","dev.teogor.winds.api.impl.PublishingImpl.enablePublicationSigning"]},{"name":"open override var enablePublicationSigning: Boolean","description":"dev.teogor.winds.api.impl.PublishingOptionsImpl.enablePublicationSigning","location":"gradle-plugin/dev.teogor.winds.api.impl/-publishing-options-impl/enable-publication-signing.html","searchKeys":["enablePublicationSigning","open override var enablePublicationSigning: Boolean","dev.teogor.winds.api.impl.PublishingOptionsImpl.enablePublicationSigning"]},{"name":"open override var enabled: Boolean","description":"dev.teogor.winds.api.impl.PublishingImpl.enabled","location":"gradle-plugin/dev.teogor.winds.api.impl/-publishing-impl/enabled.html","searchKeys":["enabled","open override var enabled: Boolean","dev.teogor.winds.api.impl.PublishingImpl.enabled"]},{"name":"open override var excludedModules: MutableList<String>","description":"dev.teogor.winds.api.impl.DocsGeneratorImpl.excludedModules","location":"gradle-plugin/dev.teogor.winds.api.impl/-docs-generator-impl/excluded-modules.html","searchKeys":["excludedModules","open override var excludedModules: MutableList<String>","dev.teogor.winds.api.impl.DocsGeneratorImpl.excludedModules"]},{"name":"open override var excludedModules: MutableList<String>","description":"dev.teogor.winds.api.impl.WorkflowSynthesizerImpl.excludedModules","location":"gradle-plugin/dev.teogor.winds.api.impl/-workflow-synthesizer-impl/excluded-modules.html","searchKeys":["excludedModules","open override var excludedModules: MutableList<String>","dev.teogor.winds.api.impl.WorkflowSynthesizerImpl.excludedModules"]},{"name":"open override var features: Features","description":"dev.teogor.winds.api.impl.WindsImpl.features","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/features.html","searchKeys":["features","open override var features: Features","dev.teogor.winds.api.impl.WindsImpl.features"]},{"name":"open override var generateReleaseTable: Boolean","description":"dev.teogor.winds.api.impl.DocumentationBuilderImpl.generateReleaseTable","location":"gradle-plugin/dev.teogor.winds.api.impl/-documentation-builder-impl/generate-release-table.html","searchKeys":["generateReleaseTable","open override var generateReleaseTable: Boolean","dev.teogor.winds.api.impl.DocumentationBuilderImpl.generateReleaseTable"]},{"name":"open override var htmlPath: String","description":"dev.teogor.winds.api.impl.DocumentationBuilderImpl.htmlPath","location":"gradle-plugin/dev.teogor.winds.api.impl/-documentation-builder-impl/html-path.html","searchKeys":["htmlPath","open override var htmlPath: String","dev.teogor.winds.api.impl.DocumentationBuilderImpl.htmlPath"]},{"name":"open override var identifier: String","description":"dev.teogor.winds.api.impl.DocsGeneratorImpl.identifier","location":"gradle-plugin/dev.teogor.winds.api.impl/-docs-generator-impl/identifier.html","searchKeys":["identifier","open override var identifier: String","dev.teogor.winds.api.impl.DocsGeneratorImpl.identifier"]},{"name":"open override var identifier: String","description":"dev.teogor.winds.api.impl.WorkflowSynthesizerImpl.identifier","location":"gradle-plugin/dev.teogor.winds.api.impl/-workflow-synthesizer-impl/identifier.html","searchKeys":["identifier","open override var identifier: String","dev.teogor.winds.api.impl.WorkflowSynthesizerImpl.identifier"]},{"name":"open override var includeAlphaRelease: Boolean","description":"dev.teogor.winds.api.impl.DocumentationBuilderImpl.includeAlphaRelease","location":"gradle-plugin/dev.teogor.winds.api.impl/-documentation-builder-impl/include-alpha-release.html","searchKeys":["includeAlphaRelease","open override var includeAlphaRelease: Boolean","dev.teogor.winds.api.impl.DocumentationBuilderImpl.includeAlphaRelease"]},{"name":"open override var includeBetaRelease: Boolean","description":"dev.teogor.winds.api.impl.DocumentationBuilderImpl.includeBetaRelease","location":"gradle-plugin/dev.teogor.winds.api.impl/-documentation-builder-impl/include-beta-release.html","searchKeys":["includeBetaRelease","open override var includeBetaRelease: Boolean","dev.teogor.winds.api.impl.DocumentationBuilderImpl.includeBetaRelease"]},{"name":"open override var includeReleaseCandidate: Boolean","description":"dev.teogor.winds.api.impl.DocumentationBuilderImpl.includeReleaseCandidate","location":"gradle-plugin/dev.teogor.winds.api.impl/-documentation-builder-impl/include-release-candidate.html","searchKeys":["includeReleaseCandidate","open override var includeReleaseCandidate: Boolean","dev.teogor.winds.api.impl.DocumentationBuilderImpl.includeReleaseCandidate"]},{"name":"open override var isBom: Boolean","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.isBom","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/is-bom.html","searchKeys":["isBom","open override var isBom: Boolean","dev.teogor.winds.api.impl.ModuleMetadataImpl.isBom"]},{"name":"open override var isCompiler: Boolean","description":"dev.teogor.winds.api.impl.DocumentationBuilderImpl.isCompiler","location":"gradle-plugin/dev.teogor.winds.api.impl/-documentation-builder-impl/is-compiler.html","searchKeys":["isCompiler","open override var isCompiler: Boolean","dev.teogor.winds.api.impl.DocumentationBuilderImpl.isCompiler"]},{"name":"open override var isOptional: Boolean","description":"dev.teogor.winds.api.impl.DocumentationBuilderImpl.isOptional","location":"gradle-plugin/dev.teogor.winds.api.impl/-documentation-builder-impl/is-optional.html","searchKeys":["isOptional","open override var isOptional: Boolean","dev.teogor.winds.api.impl.DocumentationBuilderImpl.isOptional"]},{"name":"open override var markdownNewlineSeparator: String","description":"dev.teogor.winds.api.impl.DocumentationBuilderImpl.markdownNewlineSeparator","location":"gradle-plugin/dev.teogor.winds.api.impl/-documentation-builder-impl/markdown-newline-separator.html","searchKeys":["markdownNewlineSeparator","open override var markdownNewlineSeparator: String","dev.teogor.winds.api.impl.DocumentationBuilderImpl.markdownNewlineSeparator"]},{"name":"open override var mavenPublishing: Boolean","description":"dev.teogor.winds.api.impl.FeaturesImpl.mavenPublishing","location":"gradle-plugin/dev.teogor.winds.api.impl/-features-impl/maven-publishing.html","searchKeys":["mavenPublishing","open override var mavenPublishing: Boolean","dev.teogor.winds.api.impl.FeaturesImpl.mavenPublishing"]},{"name":"open override var mavenPublishing: Boolean","description":"dev.teogor.winds.api.impl.WindsFeaturesImpl.mavenPublishing","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-features-impl/maven-publishing.html","searchKeys":["mavenPublishing","open override var mavenPublishing: Boolean","dev.teogor.winds.api.impl.WindsFeaturesImpl.mavenPublishing"]},{"name":"open override var mkdocsEnabled: Boolean","description":"dev.teogor.winds.api.impl.DocsGeneratorImpl.mkdocsEnabled","location":"gradle-plugin/dev.teogor.winds.api.impl/-docs-generator-impl/mkdocs-enabled.html","searchKeys":["mkdocsEnabled","open override var mkdocsEnabled: Boolean","dev.teogor.winds.api.impl.DocsGeneratorImpl.mkdocsEnabled"]},{"name":"open override var mkdocsEnabled: Boolean","description":"dev.teogor.winds.api.impl.DocumentationBuilderImpl.mkdocsEnabled","location":"gradle-plugin/dev.teogor.winds.api.impl/-documentation-builder-impl/mkdocs-enabled.html","searchKeys":["mkdocsEnabled","open override var mkdocsEnabled: Boolean","dev.teogor.winds.api.impl.DocumentationBuilderImpl.mkdocsEnabled"]},{"name":"open override var moduleMetadata: ModuleMetadata","description":"dev.teogor.winds.api.impl.WindsImpl.moduleMetadata","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/module-metadata.html","searchKeys":["moduleMetadata","open override var moduleMetadata: ModuleMetadata","dev.teogor.winds.api.impl.WindsImpl.moduleMetadata"]},{"name":"open override var name: String","description":"dev.teogor.winds.api.impl.DocsGeneratorImpl.name","location":"gradle-plugin/dev.teogor.winds.api.impl/-docs-generator-impl/name.html","searchKeys":["name","open override var name: String","dev.teogor.winds.api.impl.DocsGeneratorImpl.name"]},{"name":"open override var name: String","description":"dev.teogor.winds.api.impl.WorkflowSynthesizerImpl.name","location":"gradle-plugin/dev.teogor.winds.api.impl/-workflow-synthesizer-impl/name.html","searchKeys":["name","open override var name: String","dev.teogor.winds.api.impl.WorkflowSynthesizerImpl.name"]},{"name":"open override var name: String?","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.name","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/name.html","searchKeys":["name","open override var name: String?","dev.teogor.winds.api.impl.ModuleMetadataImpl.name"]},{"name":"open override var optInForVanniktechPlugin: Boolean","description":"dev.teogor.winds.api.impl.PublishingImpl.optInForVanniktechPlugin","location":"gradle-plugin/dev.teogor.winds.api.impl/-publishing-impl/opt-in-for-vanniktech-plugin.html","searchKeys":["optInForVanniktechPlugin","open override var optInForVanniktechPlugin: Boolean","dev.teogor.winds.api.impl.PublishingImpl.optInForVanniktechPlugin"]},{"name":"open override var optInForVanniktechPlugin: Boolean","description":"dev.teogor.winds.api.impl.PublishingOptionsImpl.optInForVanniktechPlugin","location":"gradle-plugin/dev.teogor.winds.api.impl/-publishing-options-impl/opt-in-for-vanniktech-plugin.html","searchKeys":["optInForVanniktechPlugin","open override var optInForVanniktechPlugin: Boolean","dev.teogor.winds.api.impl.PublishingOptionsImpl.optInForVanniktechPlugin"]},{"name":"open override var publish: Boolean","description":"dev.teogor.winds.api.impl.PublishingOptionsImpl.publish","location":"gradle-plugin/dev.teogor.winds.api.impl/-publishing-options-impl/publish.html","searchKeys":["publish","open override var publish: Boolean","dev.teogor.winds.api.impl.PublishingOptionsImpl.publish"]},{"name":"open override var publishing: Publishing","description":"dev.teogor.winds.api.impl.WindsImpl.publishing","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/publishing.html","searchKeys":["publishing","open override var publishing: Publishing","dev.teogor.winds.api.impl.WindsImpl.publishing"]},{"name":"open override var publishingOptions: PublishingOptions","description":"dev.teogor.winds.api.impl.WindsImpl.publishingOptions","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/publishing-options.html","searchKeys":["publishingOptions","open override var publishingOptions: PublishingOptions","dev.teogor.winds.api.impl.WindsImpl.publishingOptions"]},{"name":"open override var sonatypeHost: SonatypeHost","description":"dev.teogor.winds.api.impl.PublishingImpl.sonatypeHost","location":"gradle-plugin/dev.teogor.winds.api.impl/-publishing-impl/sonatype-host.html","searchKeys":["sonatypeHost","open override var sonatypeHost: SonatypeHost","dev.teogor.winds.api.impl.PublishingImpl.sonatypeHost"]},{"name":"open override var sonatypeHost: SonatypeHost","description":"dev.teogor.winds.api.impl.PublishingOptionsImpl.sonatypeHost","location":"gradle-plugin/dev.teogor.winds.api.impl/-publishing-options-impl/sonatype-host.html","searchKeys":["sonatypeHost","open override var sonatypeHost: SonatypeHost","dev.teogor.winds.api.impl.PublishingOptionsImpl.sonatypeHost"]},{"name":"open override var spotless: SpotlessOptions","description":"dev.teogor.winds.api.impl.CodebaseOptionsImpl.spotless","location":"gradle-plugin/dev.teogor.winds.api.impl/-codebase-options-impl/spotless.html","searchKeys":["spotless","open override var spotless: SpotlessOptions","dev.teogor.winds.api.impl.CodebaseOptionsImpl.spotless"]},{"name":"open override var task: DefaultTask?","description":"dev.teogor.winds.api.impl.DocsGeneratorImpl.task","location":"gradle-plugin/dev.teogor.winds.api.impl/-docs-generator-impl/task.html","searchKeys":["task","open override var task: DefaultTask?","dev.teogor.winds.api.impl.DocsGeneratorImpl.task"]},{"name":"open override var task: DefaultTask?","description":"dev.teogor.winds.api.impl.WorkflowSynthesizerImpl.task","location":"gradle-plugin/dev.teogor.winds.api.impl/-workflow-synthesizer-impl/task.html","searchKeys":["task","open override var task: DefaultTask?","dev.teogor.winds.api.impl.WorkflowSynthesizerImpl.task"]},{"name":"open override var websiteUrl: String?","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.websiteUrl","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/website-url.html","searchKeys":["websiteUrl","open override var websiteUrl: String?","dev.teogor.winds.api.impl.ModuleMetadataImpl.websiteUrl"]},{"name":"open override var windsFeatures: WindsFeatures","description":"dev.teogor.winds.api.impl.WindsImpl.windsFeatures","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/winds-features.html","searchKeys":["windsFeatures","open override var windsFeatures: WindsFeatures","dev.teogor.winds.api.impl.WindsImpl.windsFeatures"]},{"name":"open override var workflowSynthesizer: Boolean","description":"dev.teogor.winds.api.impl.FeaturesImpl.workflowSynthesizer","location":"gradle-plugin/dev.teogor.winds.api.impl/-features-impl/workflow-synthesizer.html","searchKeys":["workflowSynthesizer","open override var workflowSynthesizer: Boolean","dev.teogor.winds.api.impl.FeaturesImpl.workflowSynthesizer"]},{"name":"open override var workflowSynthesizer: Boolean","description":"dev.teogor.winds.api.impl.WindsFeaturesImpl.workflowSynthesizer","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-features-impl/workflow-synthesizer.html","searchKeys":["workflowSynthesizer","open override var workflowSynthesizer: Boolean","dev.teogor.winds.api.impl.WindsFeaturesImpl.workflowSynthesizer"]},{"name":"open override var workflowSynthesizer: WorkflowSynthesizer","description":"dev.teogor.winds.api.impl.WindsImpl.workflowSynthesizer","location":"gradle-plugin/dev.teogor.winds.api.impl/-winds-impl/workflow-synthesizer.html","searchKeys":["workflowSynthesizer","open override var workflowSynthesizer: WorkflowSynthesizer","dev.teogor.winds.api.impl.WindsImpl.workflowSynthesizer"]},{"name":"open override var yearCreated: Int","description":"dev.teogor.winds.api.impl.ModuleMetadataImpl.yearCreated","location":"gradle-plugin/dev.teogor.winds.api.impl/-module-metadata-impl/year-created.html","searchKeys":["yearCreated","open override var yearCreated: Int","dev.teogor.winds.api.impl.ModuleMetadataImpl.yearCreated"]},{"name":"val bomMappingMdContent: String","description":"dev.teogor.winds.gradle.codegen.bomMappingMdContent","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/bom-mapping-md-content.html","searchKeys":["bomMappingMdContent","val bomMappingMdContent: String","dev.teogor.winds.gradle.codegen.bomMappingMdContent"]},{"name":"val bomMdDefault: String","description":"dev.teogor.winds.gradle.codegen.bomMdDefault","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/bom-md-default.html","searchKeys":["bomMdDefault","val bomMdDefault: String","dev.teogor.winds.gradle.codegen.bomMdDefault"]},{"name":"val bomModuleMd: String","description":"dev.teogor.winds.gradle.codegen.bomModuleMd","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/bom-module-md.html","searchKeys":["bomModuleMd","val bomModuleMd: String","dev.teogor.winds.gradle.codegen.bomModuleMd"]},{"name":"val entries: EnumEntries<RegionTag>","description":"dev.teogor.winds.gradle.codegen.RegionTag.entries","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/-region-tag/entries.html","searchKeys":["entries","val entries: EnumEntries<RegionTag>","dev.teogor.winds.gradle.codegen.RegionTag.entries"]},{"name":"val implementationBomMarkdownContent: String","description":"dev.teogor.winds.codegen.implementationBomMarkdownContent","location":"gradle-plugin/dev.teogor.winds.codegen/implementation-bom-markdown-content.html","searchKeys":["implementationBomMarkdownContent","val implementationBomMarkdownContent: String","dev.teogor.winds.codegen.implementationBomMarkdownContent"]},{"name":"val implementationBomMarkdownContent: String","description":"dev.teogor.winds.gradle.codegen.implementationBomMarkdownContent","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/implementation-bom-markdown-content.html","searchKeys":["implementationBomMarkdownContent","val implementationBomMarkdownContent: String","dev.teogor.winds.gradle.codegen.implementationBomMarkdownContent"]},{"name":"val implementationStandardMarkdownContent: String","description":"dev.teogor.winds.codegen.implementationStandardMarkdownContent","location":"gradle-plugin/dev.teogor.winds.codegen/implementation-standard-markdown-content.html","searchKeys":["implementationStandardMarkdownContent","val implementationStandardMarkdownContent: String","dev.teogor.winds.codegen.implementationStandardMarkdownContent"]},{"name":"val indexModuleMarkdownContent: String","description":"dev.teogor.winds.gradle.codegen.indexModuleMarkdownContent","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/index-module-markdown-content.html","searchKeys":["indexModuleMarkdownContent","val indexModuleMarkdownContent: String","dev.teogor.winds.gradle.codegen.indexModuleMarkdownContent"]},{"name":"val releaseChangelogMarkdownContent: String","description":"dev.teogor.winds.codegen.releaseChangelogMarkdownContent","location":"gradle-plugin/dev.teogor.winds.codegen/release-changelog-markdown-content.html","searchKeys":["releaseChangelogMarkdownContent","val releaseChangelogMarkdownContent: String","dev.teogor.winds.codegen.releaseChangelogMarkdownContent"]},{"name":"val releaseMarkdownContent: String","description":"dev.teogor.winds.gradle.codegen.releaseMarkdownContent","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/release-markdown-content.html","searchKeys":["releaseMarkdownContent","val releaseMarkdownContent: String","dev.teogor.winds.gradle.codegen.releaseMarkdownContent"]},{"name":"val tag: String","description":"dev.teogor.winds.gradle.codegen.RegionTag.tag","location":"gradle-plugin/dev.teogor.winds.gradle.codegen/-region-tag/tag.html","searchKeys":["tag","val tag: String","dev.teogor.winds.gradle.codegen.RegionTag.tag"]},{"name":"var buildDocsOutputDir: File","description":"dev.teogor.winds.gradle.tasks.ReleaseNotesTask.buildDocsOutputDir","location":"gradle-plugin/dev.teogor.winds.gradle.tasks/-release-notes-task/build-docs-output-dir.html","searchKeys":["buildDocsOutputDir","var buildDocsOutputDir: File","dev.teogor.winds.gradle.tasks.ReleaseNotesTask.buildDocsOutputDir"]},{"name":"var buildOutputDir: File","description":"dev.teogor.winds.gradle.tasks.ReleaseNotesTask.buildOutputDir","location":"gradle-plugin/dev.teogor.winds.gradle.tasks/-release-notes-task/build-output-dir.html","searchKeys":["buildOutputDir","var buildOutputDir: File","dev.teogor.winds.gradle.tasks.ReleaseNotesTask.buildOutputDir"]},{"name":"var forceDateUpdate: Boolean","description":"dev.teogor.winds.gradle.tasks.ReleaseNotesTask.forceDateUpdate","location":"gradle-plugin/dev.teogor.winds.gradle.tasks/-release-notes-task/force-date-update.html","searchKeys":["forceDateUpdate","var forceDateUpdate: Boolean","dev.teogor.winds.gradle.tasks.ReleaseNotesTask.forceDateUpdate"]},{"name":"var outputDir: File","description":"dev.teogor.winds.gradle.tasks.ReleaseNotesTask.outputDir","location":"gradle-plugin/dev.teogor.winds.gradle.tasks/-release-notes-task/output-dir.html","searchKeys":["outputDir","var outputDir: File","dev.teogor.winds.gradle.tasks.ReleaseNotesTask.outputDir"]},{"name":"ALL","description":"dev.teogor.winds.api.model.DependencyType.ALL","location":"api/dev.teogor.winds.api.model/-dependency-type/-a-l-l/index.html","searchKeys":["ALL","ALL","dev.teogor.winds.api.model.DependencyType.ALL"]},{"name":"API_VALIDATOR","description":"dev.teogor.winds.api.model.WindsFeature.API_VALIDATOR","location":"api/dev.teogor.winds.api.model/-winds-feature/-a-p-i_-v-a-l-i-d-a-t-o-r/index.html","searchKeys":["API_VALIDATOR","API_VALIDATOR","dev.teogor.winds.api.model.WindsFeature.API_VALIDATOR"]},{"name":"Alpha","description":"dev.teogor.winds.api.ReleaseStatus.Alpha","location":"api/dev.teogor.winds.api/-release-status/-alpha/index.html","searchKeys":["Alpha","Alpha","dev.teogor.winds.api.ReleaseStatus.Alpha"]},{"name":"Beta","description":"dev.teogor.winds.api.ReleaseStatus.Beta","location":"api/dev.teogor.winds.api/-release-status/-beta/index.html","searchKeys":["Beta","Beta","dev.teogor.winds.api.ReleaseStatus.Beta"]},{"name":"CENTRAL_PORTAL","description":"dev.teogor.winds.api.SonatypeHost.CENTRAL_PORTAL","location":"api/dev.teogor.winds.api/-sonatype-host/-c-e-n-t-r-a-l_-p-o-r-t-a-l/index.html","searchKeys":["CENTRAL_PORTAL","CENTRAL_PORTAL","dev.teogor.winds.api.SonatypeHost.CENTRAL_PORTAL"]},{"name":"DEFAULT","description":"dev.teogor.winds.api.SonatypeHost.DEFAULT","location":"api/dev.teogor.winds.api/-sonatype-host/-d-e-f-a-u-l-t/index.html","searchKeys":["DEFAULT","DEFAULT","dev.teogor.winds.api.SonatypeHost.DEFAULT"]},{"name":"DOCS_GENERATOR","description":"dev.teogor.winds.api.model.WindsFeature.DOCS_GENERATOR","location":"api/dev.teogor.winds.api.model/-winds-feature/-d-o-c-s_-g-e-n-e-r-a-t-o-r/index.html","searchKeys":["DOCS_GENERATOR","DOCS_GENERATOR","dev.teogor.winds.api.model.WindsFeature.DOCS_GENERATOR"]},{"name":"DOKKA","description":"dev.teogor.winds.api.model.WindsFeature.DOKKA","location":"api/dev.teogor.winds.api.model/-winds-feature/-d-o-k-k-a/index.html","searchKeys":["DOKKA","DOKKA","dev.teogor.winds.api.model.WindsFeature.DOKKA"]},{"name":"Deprecated","description":"dev.teogor.winds.api.ReleaseStatus.Deprecated","location":"api/dev.teogor.winds.api/-release-status/-deprecated/index.html","searchKeys":["Deprecated","Deprecated","dev.teogor.winds.api.ReleaseStatus.Deprecated"]},{"name":"FULL","description":"dev.teogor.winds.api.ArtifactIdFormat.FULL","location":"api/dev.teogor.winds.api/-artifact-id-format/-f-u-l-l/index.html","searchKeys":["FULL","FULL","dev.teogor.winds.api.ArtifactIdFormat.FULL"]},{"name":"FULL","description":"dev.teogor.winds.api.NameFormat.FULL","location":"api/dev.teogor.winds.api/-name-format/-f-u-l-l/index.html","searchKeys":["FULL","FULL","dev.teogor.winds.api.NameFormat.FULL"]},{"name":"GROUP_MODULE_NAME","description":"dev.teogor.winds.api.ArtifactIdFormat.GROUP_MODULE_NAME","location":"api/dev.teogor.winds.api/-artifact-id-format/-g-r-o-u-p_-m-o-d-u-l-e_-n-a-m-e/index.html","searchKeys":["GROUP_MODULE_NAME","GROUP_MODULE_NAME","dev.teogor.winds.api.ArtifactIdFormat.GROUP_MODULE_NAME"]},{"name":"GROUP_MODULE_NAME","description":"dev.teogor.winds.api.NameFormat.GROUP_MODULE_NAME","location":"api/dev.teogor.winds.api/-name-format/-g-r-o-u-p_-m-o-d-u-l-e_-n-a-m-e/index.html","searchKeys":["GROUP_MODULE_NAME","GROUP_MODULE_NAME","dev.teogor.winds.api.NameFormat.GROUP_MODULE_NAME"]},{"name":"LOCAL","description":"dev.teogor.winds.api.model.DependencyType.LOCAL","location":"api/dev.teogor.winds.api.model/-dependency-type/-l-o-c-a-l/index.html","searchKeys":["LOCAL","LOCAL","dev.teogor.winds.api.model.DependencyType.LOCAL"]},{"name":"MAVEN_PUBLISH","description":"dev.teogor.winds.api.model.WindsFeature.MAVEN_PUBLISH","location":"api/dev.teogor.winds.api.model/-winds-feature/-m-a-v-e-n_-p-u-b-l-i-s-h/index.html","searchKeys":["MAVEN_PUBLISH","MAVEN_PUBLISH","dev.teogor.winds.api.model.WindsFeature.MAVEN_PUBLISH"]},{"name":"MODULE_NAME_ONLY","description":"dev.teogor.winds.api.ArtifactIdFormat.MODULE_NAME_ONLY","location":"api/dev.teogor.winds.api/-artifact-id-format/-m-o-d-u-l-e_-n-a-m-e_-o-n-l-y/index.html","searchKeys":["MODULE_NAME_ONLY","MODULE_NAME_ONLY","dev.teogor.winds.api.ArtifactIdFormat.MODULE_NAME_ONLY"]},{"name":"MODULE_NAME_ONLY","description":"dev.teogor.winds.api.NameFormat.MODULE_NAME_ONLY","location":"api/dev.teogor.winds.api/-name-format/-m-o-d-u-l-e_-n-a-m-e_-o-n-l-y/index.html","searchKeys":["MODULE_NAME_ONLY","MODULE_NAME_ONLY","dev.teogor.winds.api.NameFormat.MODULE_NAME_ONLY"]},{"name":"NAME_ONLY","description":"dev.teogor.winds.api.ArtifactIdFormat.NAME_ONLY","location":"api/dev.teogor.winds.api/-artifact-id-format/-n-a-m-e_-o-n-l-y/index.html","searchKeys":["NAME_ONLY","NAME_ONLY","dev.teogor.winds.api.ArtifactIdFormat.NAME_ONLY"]},{"name":"NAME_ONLY","description":"dev.teogor.winds.api.NameFormat.NAME_ONLY","location":"api/dev.teogor.winds.api/-name-format/-n-a-m-e_-o-n-l-y/index.html","searchKeys":["NAME_ONLY","NAME_ONLY","dev.teogor.winds.api.NameFormat.NAME_ONLY"]},{"name":"NONE","description":"dev.teogor.winds.api.model.DependencyType.NONE","location":"api/dev.teogor.winds.api.model/-dependency-type/-n-o-n-e/index.html","searchKeys":["NONE","NONE","dev.teogor.winds.api.model.DependencyType.NONE"]},{"name":"ReleaseCandidate","description":"dev.teogor.winds.api.ReleaseStatus.ReleaseCandidate","location":"api/dev.teogor.winds.api/-release-status/-release-candidate/index.html","searchKeys":["ReleaseCandidate","ReleaseCandidate","dev.teogor.winds.api.ReleaseStatus.ReleaseCandidate"]},{"name":"S01","description":"dev.teogor.winds.api.SonatypeHost.S01","location":"api/dev.teogor.winds.api/-sonatype-host/-s01/index.html","searchKeys":["S01","S01","dev.teogor.winds.api.SonatypeHost.S01"]},{"name":"SPOTLESS","description":"dev.teogor.winds.api.model.WindsFeature.SPOTLESS","location":"api/dev.teogor.winds.api.model/-winds-feature/-s-p-o-t-l-e-s-s/index.html","searchKeys":["SPOTLESS","SPOTLESS","dev.teogor.winds.api.model.WindsFeature.SPOTLESS"]},{"name":"Stable","description":"dev.teogor.winds.api.ReleaseStatus.Stable","location":"api/dev.teogor.winds.api/-release-status/-stable/index.html","searchKeys":["Stable","Stable","dev.teogor.winds.api.ReleaseStatus.Stable"]},{"name":"WORKFLOW_SYNTHESIZER","description":"dev.teogor.winds.api.model.WindsFeature.WORKFLOW_SYNTHESIZER","location":"api/dev.teogor.winds.api.model/-winds-feature/-w-o-r-k-f-l-o-w_-s-y-n-t-h-e-s-i-z-e-r/index.html","searchKeys":["WORKFLOW_SYNTHESIZER","WORKFLOW_SYNTHESIZER","dev.teogor.winds.api.model.WindsFeature.WORKFLOW_SYNTHESIZER"]},{"name":"abstract class BaseGeneratorTask(description: String) : DefaultTask","description":"dev.teogor.winds.gradle.tasks.BaseGeneratorTask","location":"api/dev.teogor.winds.gradle.tasks/-base-generator-task/index.html","searchKeys":["BaseGeneratorTask","abstract class BaseGeneratorTask(description: String) : DefaultTask","dev.teogor.winds.gradle.tasks.BaseGeneratorTask"]},{"name":"abstract class DocsModuleHandler(projectDir: File, docsGenerator: DocsGenerator)","description":"dev.teogor.winds.api.docs.DocsModuleHandler","location":"api/dev.teogor.winds.api.docs/-docs-module-handler/index.html","searchKeys":["DocsModuleHandler","abstract class DocsModuleHandler(projectDir: File, docsGenerator: DocsGenerator)","dev.teogor.winds.api.docs.DocsModuleHandler"]},{"name":"abstract class VersionedDependencyRecord(val version: Version, val date: Long)","description":"dev.teogor.winds.api.model.VersionedDependencyRecord","location":"api/dev.teogor.winds.api.model/-versioned-dependency-record/index.html","searchKeys":["VersionedDependencyRecord","abstract class VersionedDependencyRecord(val version: Version, val date: Long)","dev.teogor.winds.api.model.VersionedDependencyRecord"]},{"name":"abstract fun <T : Person> person(type: KClass<T>, block: T.() -> Unit)","description":"dev.teogor.winds.api.ModuleMetadata.person","location":"api/dev.teogor.winds.api/-module-metadata/person.html","searchKeys":["person","abstract fun <T : Person> person(type: KClass<T>, block: T.() -> Unit)","dev.teogor.winds.api.ModuleMetadata.person"]},{"name":"abstract fun <T : Scm> scm(type: KClass<T>, block: T.() -> Unit)","description":"dev.teogor.winds.api.ModuleMetadata.scm","location":"api/dev.teogor.winds.api/-module-metadata/scm.html","searchKeys":["scm","abstract fun <T : Scm> scm(type: KClass<T>, block: T.() -> Unit)","dev.teogor.winds.api.ModuleMetadata.scm"]},{"name":"abstract fun <T : TicketSystem> ticketSystem(type: KClass<T>, block: T.() -> Unit)","description":"dev.teogor.winds.api.ModuleMetadata.ticketSystem","location":"api/dev.teogor.winds.api/-module-metadata/ticket-system.html","searchKeys":["ticketSystem","abstract fun <T : TicketSystem> ticketSystem(type: KClass<T>, block: T.() -> Unit)","dev.teogor.winds.api.ModuleMetadata.ticketSystem"]},{"name":"abstract fun action()","description":"dev.teogor.winds.gradle.tasks.BaseGeneratorTask.action","location":"api/dev.teogor.winds.gradle.tasks/-base-generator-task/action.html","searchKeys":["action","abstract fun action()","dev.teogor.winds.gradle.tasks.BaseGeneratorTask.action"]},{"name":"abstract fun artifactDescriptor(block: ArtifactDescriptor.() -> Unit)","description":"dev.teogor.winds.api.ModuleMetadata.artifactDescriptor","location":"api/dev.teogor.winds.api/-module-metadata/artifact-descriptor.html","searchKeys":["artifactDescriptor","abstract fun artifactDescriptor(block: ArtifactDescriptor.() -> Unit)","dev.teogor.winds.api.ModuleMetadata.artifactDescriptor"]},{"name":"abstract fun binaryCompatibility(configure: BinaryCompatibility.() -> Unit)","description":"dev.teogor.winds.api.CodebaseOptions.binaryCompatibility","location":"api/dev.teogor.winds.api/-codebase-options/binary-compatibility.html","searchKeys":["binaryCompatibility","abstract fun binaryCompatibility(configure: BinaryCompatibility.() -> Unit)","dev.teogor.winds.api.CodebaseOptions.binaryCompatibility"]},{"name":"abstract fun bomOptions(block: BomOptions.() -> Unit)","description":"dev.teogor.winds.api.ModuleMetadata.bomOptions","location":"api/dev.teogor.winds.api/-module-metadata/bom-options.html","searchKeys":["bomOptions","abstract fun bomOptions(block: BomOptions.() -> Unit)","dev.teogor.winds.api.ModuleMetadata.bomOptions"]},{"name":"abstract fun codebaseOptions(configure: CodebaseOptions.() -> Unit)","description":"dev.teogor.winds.api.Winds.codebaseOptions","location":"api/dev.teogor.winds.api/-winds/codebase-options.html","searchKeys":["codebaseOptions","abstract fun codebaseOptions(configure: CodebaseOptions.() -> Unit)","dev.teogor.winds.api.Winds.codebaseOptions"]},{"name":"abstract fun configureProjects(includeRoot: Boolean = true, action: Project.(Winds) -> Unit)","description":"dev.teogor.winds.api.Winds.configureProjects","location":"api/dev.teogor.winds.api/-winds/configure-projects.html","searchKeys":["configureProjects","abstract fun configureProjects(includeRoot: Boolean = true, action: Project.(Winds) -> Unit)","dev.teogor.winds.api.Winds.configureProjects"]},{"name":"abstract fun copy(from: DocumentationBuilder): DocumentationBuilder","description":"dev.teogor.winds.api.DocumentationBuilder.copy","location":"api/dev.teogor.winds.api/-documentation-builder/copy.html","searchKeys":["copy","abstract fun copy(from: DocumentationBuilder): DocumentationBuilder","dev.teogor.winds.api.DocumentationBuilder.copy"]},{"name":"abstract fun copy(from: Publishing): Publishing","description":"dev.teogor.winds.api.Publishing.copy","location":"api/dev.teogor.winds.api/-publishing/copy.html","searchKeys":["copy","abstract fun copy(from: Publishing): Publishing","dev.teogor.winds.api.Publishing.copy"]},{"name":"abstract fun copy(from: PublishingOptions): PublishingOptions","description":"dev.teogor.winds.api.PublishingOptions.copy","location":"api/dev.teogor.winds.api/-publishing-options/copy.html","searchKeys":["copy","abstract fun copy(from: PublishingOptions): PublishingOptions","dev.teogor.winds.api.PublishingOptions.copy"]},{"name":"abstract fun copy(fromObj: ModuleMetadata): ModuleMetadata","description":"dev.teogor.winds.api.ModuleMetadata.copy","location":"api/dev.teogor.winds.api/-module-metadata/copy.html","searchKeys":["copy","abstract fun copy(fromObj: ModuleMetadata): ModuleMetadata","dev.teogor.winds.api.ModuleMetadata.copy"]},{"name":"abstract fun docsGenerator(action: DocsGenerator.() -> Unit)","description":"dev.teogor.winds.api.Winds.docsGenerator","location":"api/dev.teogor.winds.api/-winds/docs-generator.html","searchKeys":["docsGenerator","abstract fun docsGenerator(action: DocsGenerator.() -> Unit)","dev.teogor.winds.api.Winds.docsGenerator"]},{"name":"abstract fun documentationBuilder(configure: DocumentationBuilder.() -> Unit)","description":"dev.teogor.winds.api.Winds.documentationBuilder","location":"api/dev.teogor.winds.api/-winds/documentation-builder.html","searchKeys":["documentationBuilder","abstract fun documentationBuilder(configure: DocumentationBuilder.() -> Unit)","dev.teogor.winds.api.Winds.documentationBuilder"]},{"name":"abstract fun dokka(configure: DokkaOptions.() -> Unit)","description":"dev.teogor.winds.api.CodebaseOptions.dokka","location":"api/dev.teogor.winds.api/-codebase-options/dokka.html","searchKeys":["dokka","abstract fun dokka(configure: DokkaOptions.() -> Unit)","dev.teogor.winds.api.CodebaseOptions.dokka"]},{"name":"abstract fun excludeModules(block: () -> List<String>)","description":"dev.teogor.winds.api.DocsGenerator.excludeModules","location":"api/dev.teogor.winds.api/-docs-generator/exclude-modules.html","searchKeys":["excludeModules","abstract fun excludeModules(block: () -> List<String>)","dev.teogor.winds.api.DocsGenerator.excludeModules"]},{"name":"abstract fun excludeModules(block: () -> List<String>)","description":"dev.teogor.winds.api.WorkflowSynthesizer.excludeModules","location":"api/dev.teogor.winds.api/-workflow-synthesizer/exclude-modules.html","searchKeys":["excludeModules","abstract fun excludeModules(block: () -> List<String>)","dev.teogor.winds.api.WorkflowSynthesizer.excludeModules"]},{"name":"abstract fun features(action: Features.() -> Unit)","description":"dev.teogor.winds.api.Winds.features","location":"api/dev.teogor.winds.api/-winds/features.html","searchKeys":["features","abstract fun features(action: Features.() -> Unit)","dev.teogor.winds.api.Winds.features"]},{"name":"abstract fun licenses(block: MutableList<License>.() -> Unit)","description":"dev.teogor.winds.api.ModuleMetadata.licenses","location":"api/dev.teogor.winds.api/-module-metadata/licenses.html","searchKeys":["licenses","abstract fun licenses(block: MutableList<License>.() -> Unit)","dev.teogor.winds.api.ModuleMetadata.licenses"]},{"name":"abstract fun licenses(vararg licenses: License)","description":"dev.teogor.winds.api.ModuleMetadata.licenses","location":"api/dev.teogor.winds.api/-module-metadata/licenses.html","searchKeys":["licenses","abstract fun licenses(vararg licenses: License)","dev.teogor.winds.api.ModuleMetadata.licenses"]},{"name":"abstract fun manageDependencies()","description":"dev.teogor.winds.api.docs.DocsModuleHandler.manageDependencies","location":"api/dev.teogor.winds.api.docs/-docs-module-handler/manage-dependencies.html","searchKeys":["manageDependencies","abstract fun manageDependencies()","dev.teogor.winds.api.docs.DocsModuleHandler.manageDependencies"]},{"name":"abstract fun moduleMetadata(action: ModuleMetadata.() -> Unit)","description":"dev.teogor.winds.api.Winds.moduleMetadata","location":"api/dev.teogor.winds.api/-winds/module-metadata.html","searchKeys":["moduleMetadata","abstract fun moduleMetadata(action: ModuleMetadata.() -> Unit)","dev.teogor.winds.api.Winds.moduleMetadata"]},{"name":"abstract fun publishing(action: Publishing.() -> Unit)","description":"dev.teogor.winds.api.Winds.publishing","location":"api/dev.teogor.winds.api/-winds/publishing.html","searchKeys":["publishing","abstract fun publishing(action: Publishing.() -> Unit)","dev.teogor.winds.api.Winds.publishing"]},{"name":"abstract fun publishingOptions(action: PublishingOptions.() -> Unit)","description":"dev.teogor.winds.api.Winds.publishingOptions","location":"api/dev.teogor.winds.api/-winds/publishing-options.html","searchKeys":["publishingOptions","abstract fun publishingOptions(action: PublishingOptions.() -> Unit)","dev.teogor.winds.api.Winds.publishingOptions"]},{"name":"abstract fun spotless(configure: SpotlessOptions.() -> Unit)","description":"dev.teogor.winds.api.CodebaseOptions.spotless","location":"api/dev.teogor.winds.api/-codebase-options/spotless.html","searchKeys":["spotless","abstract fun spotless(configure: SpotlessOptions.() -> Unit)","dev.teogor.winds.api.CodebaseOptions.spotless"]},{"name":"abstract fun updateMkDocs(mkDocsPath: String = \"mkdocs.yml\", section: String = \"Changelog\")","description":"dev.teogor.winds.api.docs.DocsModuleHandler.updateMkDocs","location":"api/dev.teogor.winds.api.docs/-docs-module-handler/update-mk-docs.html","searchKeys":["updateMkDocs","abstract fun updateMkDocs(mkDocsPath: String = \"mkdocs.yml\", section: String = \"Changelog\")","dev.teogor.winds.api.docs.DocsModuleHandler.updateMkDocs"]},{"name":"abstract fun windsFeatures(action: WindsFeatures.() -> Unit)","description":"dev.teogor.winds.api.Winds.windsFeatures","location":"api/dev.teogor.winds.api/-winds/winds-features.html","searchKeys":["windsFeatures","abstract fun windsFeatures(action: WindsFeatures.() -> Unit)","dev.teogor.winds.api.Winds.windsFeatures"]},{"name":"abstract fun workflowSynthesizer(action: WorkflowSynthesizer.() -> Unit)","description":"dev.teogor.winds.api.Winds.workflowSynthesizer","location":"api/dev.teogor.winds.api/-winds/workflow-synthesizer.html","searchKeys":["workflowSynthesizer","abstract fun workflowSynthesizer(action: WorkflowSynthesizer.() -> Unit)","dev.teogor.winds.api.Winds.workflowSynthesizer"]},{"name":"abstract fun writeReleaseNotes()","description":"dev.teogor.winds.api.docs.DocsModuleHandler.writeReleaseNotes","location":"api/dev.teogor.winds.api.docs/-docs-module-handler/write-release-notes.html","searchKeys":["writeReleaseNotes","abstract fun writeReleaseNotes()","dev.teogor.winds.api.docs.DocsModuleHandler.writeReleaseNotes"]},{"name":"abstract infix fun List<License>.register(license: License)","description":"dev.teogor.winds.api.ModuleMetadata.register","location":"api/dev.teogor.winds.api/-module-metadata/register.html","searchKeys":["register","abstract infix fun List<License>.register(license: License)","dev.teogor.winds.api.ModuleMetadata.register"]},{"name":"abstract infix fun ModuleMetadata.licensedUnder(license: License)","description":"dev.teogor.winds.api.ModuleMetadata.licensedUnder","location":"api/dev.teogor.winds.api/-module-metadata/licensed-under.html","searchKeys":["licensedUnder","abstract infix fun ModuleMetadata.licensedUnder(license: License)","dev.teogor.winds.api.ModuleMetadata.licensedUnder"]},{"name":"abstract operator fun List<License>.plusAssign(license: License)","description":"dev.teogor.winds.api.ModuleMetadata.plusAssign","location":"api/dev.teogor.winds.api/-module-metadata/plus-assign.html","searchKeys":["plusAssign","abstract operator fun List<License>.plusAssign(license: License)","dev.teogor.winds.api.ModuleMetadata.plusAssign"]},{"name":"abstract operator fun plusAssign(license: License)","description":"dev.teogor.winds.api.ModuleMetadata.plusAssign","location":"api/dev.teogor.winds.api/-module-metadata/plus-assign.html","searchKeys":["plusAssign","abstract operator fun plusAssign(license: License)","dev.teogor.winds.api.ModuleMetadata.plusAssign"]},{"name":"abstract val abbreviation: String","description":"dev.teogor.winds.api.Distribution.abbreviation","location":"api/dev.teogor.winds.api/-distribution/abbreviation.html","searchKeys":["abbreviation","abstract val abbreviation: String","dev.teogor.winds.api.Distribution.abbreviation"]},{"name":"abstract val allSpecs: MutableList<ArtifactDescriptor>","description":"dev.teogor.winds.api.Winds.allSpecs","location":"api/dev.teogor.winds.api/-winds/all-specs.html","searchKeys":["allSpecs","abstract val allSpecs: MutableList<ArtifactDescriptor>","dev.teogor.winds.api.Winds.allSpecs"]},{"name":"abstract val artifactDescriptor: ArtifactDescriptor?","description":"dev.teogor.winds.api.ModuleMetadata.artifactDescriptor","location":"api/dev.teogor.winds.api/-module-metadata/artifact-descriptor.html","searchKeys":["artifactDescriptor","abstract val artifactDescriptor: ArtifactDescriptor?","dev.teogor.winds.api.ModuleMetadata.artifactDescriptor"]},{"name":"abstract val binaryCompatibility: BinaryCompatibility","description":"dev.teogor.winds.api.CodebaseOptions.binaryCompatibility","location":"api/dev.teogor.winds.api/-codebase-options/binary-compatibility.html","searchKeys":["binaryCompatibility","abstract val binaryCompatibility: BinaryCompatibility","dev.teogor.winds.api.CodebaseOptions.binaryCompatibility"]},{"name":"abstract val bomOptions: BomOptions?","description":"dev.teogor.winds.api.ModuleMetadata.bomOptions","location":"api/dev.teogor.winds.api/-module-metadata/bom-options.html","searchKeys":["bomOptions","abstract val bomOptions: BomOptions?","dev.teogor.winds.api.ModuleMetadata.bomOptions"]},{"name":"abstract val comments: String?","description":"dev.teogor.winds.api.License.comments","location":"api/dev.teogor.winds.api/-license/comments.html","searchKeys":["comments","abstract val comments: String?","dev.teogor.winds.api.License.comments"]},{"name":"abstract val connection: String","description":"dev.teogor.winds.api.Scm.connection","location":"api/dev.teogor.winds.api/-scm/connection.html","searchKeys":["connection","abstract val connection: String","dev.teogor.winds.api.Scm.connection"]},{"name":"abstract val developerConnection: String","description":"dev.teogor.winds.api.Scm.developerConnection","location":"api/dev.teogor.winds.api/-scm/developer-connection.html","searchKeys":["developerConnection","abstract val developerConnection: String","dev.teogor.winds.api.Scm.developerConnection"]},{"name":"abstract val distribution: Distribution","description":"dev.teogor.winds.api.License.distribution","location":"api/dev.teogor.winds.api/-license/distribution.html","searchKeys":["distribution","abstract val distribution: Distribution","dev.teogor.winds.api.License.distribution"]},{"name":"abstract val docs: File","description":"dev.teogor.winds.api.CodeGen.docs","location":"api/dev.teogor.winds.api/-code-gen/docs.html","searchKeys":["docs","abstract val docs: File","dev.teogor.winds.api.CodeGen.docs"]},{"name":"abstract val dokka: DokkaOptions","description":"dev.teogor.winds.api.CodebaseOptions.dokka","location":"api/dev.teogor.winds.api/-codebase-options/dokka.html","searchKeys":["dokka","abstract val dokka: DokkaOptions","dev.teogor.winds.api.CodebaseOptions.dokka"]},{"name":"abstract val email: String","description":"dev.teogor.winds.api.Person.email","location":"api/dev.teogor.winds.api/-person/email.html","searchKeys":["email","abstract val email: String","dev.teogor.winds.api.Person.email"]},{"name":"abstract val excludedModules: List<String>","description":"dev.teogor.winds.api.DocsGenerator.excludedModules","location":"api/dev.teogor.winds.api/-docs-generator/excluded-modules.html","searchKeys":["excludedModules","abstract val excludedModules: List<String>","dev.teogor.winds.api.DocsGenerator.excludedModules"]},{"name":"abstract val excludedModules: List<String>","description":"dev.teogor.winds.api.WorkflowSynthesizer.excludedModules","location":"api/dev.teogor.winds.api/-workflow-synthesizer/excluded-modules.html","searchKeys":["excludedModules","abstract val excludedModules: List<String>","dev.teogor.winds.api.WorkflowSynthesizer.excludedModules"]},{"name":"abstract val licenses: List<License>","description":"dev.teogor.winds.api.ModuleMetadata.licenses","location":"api/dev.teogor.winds.api/-module-metadata/licenses.html","searchKeys":["licenses","abstract val licenses: List<License>","dev.teogor.winds.api.ModuleMetadata.licenses"]},{"name":"abstract val name: String","description":"dev.teogor.winds.api.Distribution.name","location":"api/dev.teogor.winds.api/-distribution/name.html","searchKeys":["name","abstract val name: String","dev.teogor.winds.api.Distribution.name"]},{"name":"abstract val name: String","description":"dev.teogor.winds.api.License.name","location":"api/dev.teogor.winds.api/-license/name.html","searchKeys":["name","abstract val name: String","dev.teogor.winds.api.License.name"]},{"name":"abstract val name: String","description":"dev.teogor.winds.api.Person.name","location":"api/dev.teogor.winds.api/-person/name.html","searchKeys":["name","abstract val name: String","dev.teogor.winds.api.Person.name"]},{"name":"abstract val organization: String","description":"dev.teogor.winds.api.Person.organization","location":"api/dev.teogor.winds.api/-person/organization.html","searchKeys":["organization","abstract val organization: String","dev.teogor.winds.api.Person.organization"]},{"name":"abstract val organizationUrl: String","description":"dev.teogor.winds.api.Person.organizationUrl","location":"api/dev.teogor.winds.api/-person/organization-url.html","searchKeys":["organizationUrl","abstract val organizationUrl: String","dev.teogor.winds.api.Person.organizationUrl"]},{"name":"abstract val owner: String","description":"dev.teogor.winds.api.Scm.owner","location":"api/dev.teogor.winds.api/-scm/owner.html","searchKeys":["owner","abstract val owner: String","dev.teogor.winds.api.Scm.owner"]},{"name":"abstract val persons: List<Person>","description":"dev.teogor.winds.api.ModuleMetadata.persons","location":"api/dev.teogor.winds.api/-module-metadata/persons.html","searchKeys":["persons","abstract val persons: List<Person>","dev.teogor.winds.api.ModuleMetadata.persons"]},{"name":"abstract val pluginIds: MutableList<String>","description":"dev.teogor.winds.api.DocumentationBuilder.pluginIds","location":"api/dev.teogor.winds.api/-documentation-builder/plugin-ids.html","searchKeys":["pluginIds","abstract val pluginIds: MutableList<String>","dev.teogor.winds.api.DocumentationBuilder.pluginIds"]},{"name":"abstract val properties: Map<String, String>","description":"dev.teogor.winds.api.Person.properties","location":"api/dev.teogor.winds.api/-person/properties.html","searchKeys":["properties","abstract val properties: Map<String, String>","dev.teogor.winds.api.Person.properties"]},{"name":"abstract val repository: String","description":"dev.teogor.winds.api.Scm.repository","location":"api/dev.teogor.winds.api/-scm/repository.html","searchKeys":["repository","abstract val repository: String","dev.teogor.winds.api.Scm.repository"]},{"name":"abstract val repositoryUrl: String","description":"dev.teogor.winds.api.Scm.repositoryUrl","location":"api/dev.teogor.winds.api/-scm/repository-url.html","searchKeys":["repositoryUrl","abstract val repositoryUrl: String","dev.teogor.winds.api.Scm.repositoryUrl"]},{"name":"abstract val res: File","description":"dev.teogor.winds.api.CodeGen.res","location":"api/dev.teogor.winds.api/-code-gen/res.html","searchKeys":["res","abstract val res: File","dev.teogor.winds.api.CodeGen.res"]},{"name":"abstract val roles: List<String>","description":"dev.teogor.winds.api.Person.roles","location":"api/dev.teogor.winds.api/-person/roles.html","searchKeys":["roles","abstract val roles: List<String>","dev.teogor.winds.api.Person.roles"]},{"name":"abstract val scm: Scm?","description":"dev.teogor.winds.api.ModuleMetadata.scm","location":"api/dev.teogor.winds.api/-module-metadata/scm.html","searchKeys":["scm","abstract val scm: Scm?","dev.teogor.winds.api.ModuleMetadata.scm"]},{"name":"abstract val spotless: SpotlessOptions","description":"dev.teogor.winds.api.CodebaseOptions.spotless","location":"api/dev.teogor.winds.api/-codebase-options/spotless.html","searchKeys":["spotless","abstract val spotless: SpotlessOptions","dev.teogor.winds.api.CodebaseOptions.spotless"]},{"name":"abstract val system: String","description":"dev.teogor.winds.api.TicketSystem.system","location":"api/dev.teogor.winds.api/-ticket-system/system.html","searchKeys":["system","abstract val system: String","dev.teogor.winds.api.TicketSystem.system"]},{"name":"abstract val ticketSystem: TicketSystem?","description":"dev.teogor.winds.api.ModuleMetadata.ticketSystem","location":"api/dev.teogor.winds.api/-module-metadata/ticket-system.html","searchKeys":["ticketSystem","abstract val ticketSystem: TicketSystem?","dev.teogor.winds.api.ModuleMetadata.ticketSystem"]},{"name":"abstract val timezone: String","description":"dev.teogor.winds.api.Person.timezone","location":"api/dev.teogor.winds.api/-person/timezone.html","searchKeys":["timezone","abstract val timezone: String","dev.teogor.winds.api.Person.timezone"]},{"name":"abstract val url: String","description":"dev.teogor.winds.api.License.url","location":"api/dev.teogor.winds.api/-license/url.html","searchKeys":["url","abstract val url: String","dev.teogor.winds.api.License.url"]},{"name":"abstract val url: String","description":"dev.teogor.winds.api.Person.url","location":"api/dev.teogor.winds.api/-person/url.html","searchKeys":["url","abstract val url: String","dev.teogor.winds.api.Person.url"]},{"name":"abstract val url: String","description":"dev.teogor.winds.api.TicketSystem.url","location":"api/dev.teogor.winds.api/-ticket-system/url.html","searchKeys":["url","abstract val url: String","dev.teogor.winds.api.TicketSystem.url"]},{"name":"abstract var alertOnDependentModules: Boolean","description":"dev.teogor.winds.api.DocsGenerator.alertOnDependentModules","location":"api/dev.teogor.winds.api/-docs-generator/alert-on-dependent-modules.html","searchKeys":["alertOnDependentModules","abstract var alertOnDependentModules: Boolean","dev.teogor.winds.api.DocsGenerator.alertOnDependentModules"]},{"name":"abstract var alertOnDependentModules: Boolean","description":"dev.teogor.winds.api.DocumentationBuilder.alertOnDependentModules","location":"api/dev.teogor.winds.api/-documentation-builder/alert-on-dependent-modules.html","searchKeys":["alertOnDependentModules","abstract var alertOnDependentModules: Boolean","dev.teogor.winds.api.DocumentationBuilder.alertOnDependentModules"]},{"name":"abstract var apiDocsUrl: String?","description":"dev.teogor.winds.api.ModuleMetadata.apiDocsUrl","location":"api/dev.teogor.winds.api/-module-metadata/api-docs-url.html","searchKeys":["apiDocsUrl","abstract var apiDocsUrl: String?","dev.teogor.winds.api.ModuleMetadata.apiDocsUrl"]},{"name":"abstract var cascade: Boolean","description":"dev.teogor.winds.api.Publishing.cascade","location":"api/dev.teogor.winds.api/-publishing/cascade.html","searchKeys":["cascade","abstract var cascade: Boolean","dev.teogor.winds.api.Publishing.cascade"]},{"name":"abstract var cascadePublish: Boolean","description":"dev.teogor.winds.api.PublishingOptions.cascadePublish","location":"api/dev.teogor.winds.api/-publishing-options/cascade-publish.html","searchKeys":["cascadePublish","abstract var cascadePublish: Boolean","dev.teogor.winds.api.PublishingOptions.cascadePublish"]},{"name":"abstract var codebaseOptions: CodebaseOptions","description":"dev.teogor.winds.api.Winds.codebaseOptions","location":"api/dev.teogor.winds.api/-winds/codebase-options.html","searchKeys":["codebaseOptions","abstract var codebaseOptions: CodebaseOptions","dev.teogor.winds.api.Winds.codebaseOptions"]},{"name":"abstract var createApiReference: Boolean","description":"dev.teogor.winds.api.DocumentationBuilder.createApiReference","location":"api/dev.teogor.winds.api/-documentation-builder/create-api-reference.html","searchKeys":["createApiReference","abstract var createApiReference: Boolean","dev.teogor.winds.api.DocumentationBuilder.createApiReference"]},{"name":"abstract var dependencyGatheringType: DependencyType","description":"dev.teogor.winds.api.DocsGenerator.dependencyGatheringType","location":"api/dev.teogor.winds.api/-docs-generator/dependency-gathering-type.html","searchKeys":["dependencyGatheringType","abstract var dependencyGatheringType: DependencyType","dev.teogor.winds.api.DocsGenerator.dependencyGatheringType"]},{"name":"abstract var dependencyGatheringType: DependencyType","description":"dev.teogor.winds.api.DocumentationBuilder.dependencyGatheringType","location":"api/dev.teogor.winds.api/-documentation-builder/dependency-gathering-type.html","searchKeys":["dependencyGatheringType","abstract var dependencyGatheringType: DependencyType","dev.teogor.winds.api.DocumentationBuilder.dependencyGatheringType"]},{"name":"abstract var description: String?","description":"dev.teogor.winds.api.ModuleMetadata.description","location":"api/dev.teogor.winds.api/-module-metadata/description.html","searchKeys":["description","abstract var description: String?","dev.teogor.winds.api.ModuleMetadata.description"]},{"name":"abstract var docsGenerator: Boolean","description":"dev.teogor.winds.api.Features.docsGenerator","location":"api/dev.teogor.winds.api/-features/docs-generator.html","searchKeys":["docsGenerator","abstract var docsGenerator: Boolean","dev.teogor.winds.api.Features.docsGenerator"]},{"name":"abstract var docsGenerator: Boolean","description":"dev.teogor.winds.api.WindsFeatures.docsGenerator","location":"api/dev.teogor.winds.api/-winds-features/docs-generator.html","searchKeys":["docsGenerator","abstract var docsGenerator: Boolean","dev.teogor.winds.api.WindsFeatures.docsGenerator"]},{"name":"abstract var docsGenerator: DocsGenerator","description":"dev.teogor.winds.api.Winds.docsGenerator","location":"api/dev.teogor.winds.api/-winds/docs-generator.html","searchKeys":["docsGenerator","abstract var docsGenerator: DocsGenerator","dev.teogor.winds.api.Winds.docsGenerator"]},{"name":"abstract var docsModuleHandler: DocsModuleHandler","description":"dev.teogor.winds.gradle.tasks.BaseGeneratorTask.docsModuleHandler","location":"api/dev.teogor.winds.gradle.tasks/-base-generator-task/docs-module-handler.html","searchKeys":["docsModuleHandler","abstract var docsModuleHandler: DocsModuleHandler","dev.teogor.winds.gradle.tasks.BaseGeneratorTask.docsModuleHandler"]},{"name":"abstract var documentationBuilder: DocumentationBuilder","description":"dev.teogor.winds.api.Winds.documentationBuilder","location":"api/dev.teogor.winds.api/-winds/documentation-builder.html","searchKeys":["documentationBuilder","abstract var documentationBuilder: DocumentationBuilder","dev.teogor.winds.api.Winds.documentationBuilder"]},{"name":"abstract var enablePublicationSigning: Boolean","description":"dev.teogor.winds.api.Publishing.enablePublicationSigning","location":"api/dev.teogor.winds.api/-publishing/enable-publication-signing.html","searchKeys":["enablePublicationSigning","abstract var enablePublicationSigning: Boolean","dev.teogor.winds.api.Publishing.enablePublicationSigning"]},{"name":"abstract var enablePublicationSigning: Boolean","description":"dev.teogor.winds.api.PublishingOptions.enablePublicationSigning","location":"api/dev.teogor.winds.api/-publishing-options/enable-publication-signing.html","searchKeys":["enablePublicationSigning","abstract var enablePublicationSigning: Boolean","dev.teogor.winds.api.PublishingOptions.enablePublicationSigning"]},{"name":"abstract var enabled: Boolean","description":"dev.teogor.winds.api.Publishing.enabled","location":"api/dev.teogor.winds.api/-publishing/enabled.html","searchKeys":["enabled","abstract var enabled: Boolean","dev.teogor.winds.api.Publishing.enabled"]},{"name":"abstract var features: Features","description":"dev.teogor.winds.api.Winds.features","location":"api/dev.teogor.winds.api/-winds/features.html","searchKeys":["features","abstract var features: Features","dev.teogor.winds.api.Winds.features"]},{"name":"abstract var generateReleaseTable: Boolean","description":"dev.teogor.winds.api.DocumentationBuilder.generateReleaseTable","location":"api/dev.teogor.winds.api/-documentation-builder/generate-release-table.html","searchKeys":["generateReleaseTable","abstract var generateReleaseTable: Boolean","dev.teogor.winds.api.DocumentationBuilder.generateReleaseTable"]},{"name":"abstract var htmlPath: String","description":"dev.teogor.winds.api.DocumentationBuilder.htmlPath","location":"api/dev.teogor.winds.api/-documentation-builder/html-path.html","searchKeys":["htmlPath","abstract var htmlPath: String","dev.teogor.winds.api.DocumentationBuilder.htmlPath"]},{"name":"abstract var identifier: String","description":"dev.teogor.winds.api.DocsGenerator.identifier","location":"api/dev.teogor.winds.api/-docs-generator/identifier.html","searchKeys":["identifier","abstract var identifier: String","dev.teogor.winds.api.DocsGenerator.identifier"]},{"name":"abstract var identifier: String","description":"dev.teogor.winds.api.WorkflowSynthesizer.identifier","location":"api/dev.teogor.winds.api/-workflow-synthesizer/identifier.html","searchKeys":["identifier","abstract var identifier: String","dev.teogor.winds.api.WorkflowSynthesizer.identifier"]},{"name":"abstract var includeAlphaRelease: Boolean","description":"dev.teogor.winds.api.DocumentationBuilder.includeAlphaRelease","location":"api/dev.teogor.winds.api/-documentation-builder/include-alpha-release.html","searchKeys":["includeAlphaRelease","abstract var includeAlphaRelease: Boolean","dev.teogor.winds.api.DocumentationBuilder.includeAlphaRelease"]},{"name":"abstract var includeBetaRelease: Boolean","description":"dev.teogor.winds.api.DocumentationBuilder.includeBetaRelease","location":"api/dev.teogor.winds.api/-documentation-builder/include-beta-release.html","searchKeys":["includeBetaRelease","abstract var includeBetaRelease: Boolean","dev.teogor.winds.api.DocumentationBuilder.includeBetaRelease"]},{"name":"abstract var includeReleaseCandidate: Boolean","description":"dev.teogor.winds.api.DocumentationBuilder.includeReleaseCandidate","location":"api/dev.teogor.winds.api/-documentation-builder/include-release-candidate.html","searchKeys":["includeReleaseCandidate","abstract var includeReleaseCandidate: Boolean","dev.teogor.winds.api.DocumentationBuilder.includeReleaseCandidate"]},{"name":"abstract var isBom: Boolean","description":"dev.teogor.winds.api.ModuleMetadata.isBom","location":"api/dev.teogor.winds.api/-module-metadata/is-bom.html","searchKeys":["isBom","abstract var isBom: Boolean","dev.teogor.winds.api.ModuleMetadata.isBom"]},{"name":"abstract var isCompiler: Boolean","description":"dev.teogor.winds.api.DocumentationBuilder.isCompiler","location":"api/dev.teogor.winds.api/-documentation-builder/is-compiler.html","searchKeys":["isCompiler","abstract var isCompiler: Boolean","dev.teogor.winds.api.DocumentationBuilder.isCompiler"]},{"name":"abstract var isOptional: Boolean","description":"dev.teogor.winds.api.DocumentationBuilder.isOptional","location":"api/dev.teogor.winds.api/-documentation-builder/is-optional.html","searchKeys":["isOptional","abstract var isOptional: Boolean","dev.teogor.winds.api.DocumentationBuilder.isOptional"]},{"name":"abstract var markdownNewlineSeparator: String","description":"dev.teogor.winds.api.DocumentationBuilder.markdownNewlineSeparator","location":"api/dev.teogor.winds.api/-documentation-builder/markdown-newline-separator.html","searchKeys":["markdownNewlineSeparator","abstract var markdownNewlineSeparator: String","dev.teogor.winds.api.DocumentationBuilder.markdownNewlineSeparator"]},{"name":"abstract var mavenPublishing: Boolean","description":"dev.teogor.winds.api.Features.mavenPublishing","location":"api/dev.teogor.winds.api/-features/maven-publishing.html","searchKeys":["mavenPublishing","abstract var mavenPublishing: Boolean","dev.teogor.winds.api.Features.mavenPublishing"]},{"name":"abstract var mavenPublishing: Boolean","description":"dev.teogor.winds.api.WindsFeatures.mavenPublishing","location":"api/dev.teogor.winds.api/-winds-features/maven-publishing.html","searchKeys":["mavenPublishing","abstract var mavenPublishing: Boolean","dev.teogor.winds.api.WindsFeatures.mavenPublishing"]},{"name":"abstract var mkdocsEnabled: Boolean","description":"dev.teogor.winds.api.DocsGenerator.mkdocsEnabled","location":"api/dev.teogor.winds.api/-docs-generator/mkdocs-enabled.html","searchKeys":["mkdocsEnabled","abstract var mkdocsEnabled: Boolean","dev.teogor.winds.api.DocsGenerator.mkdocsEnabled"]},{"name":"abstract var mkdocsEnabled: Boolean","description":"dev.teogor.winds.api.DocumentationBuilder.mkdocsEnabled","location":"api/dev.teogor.winds.api/-documentation-builder/mkdocs-enabled.html","searchKeys":["mkdocsEnabled","abstract var mkdocsEnabled: Boolean","dev.teogor.winds.api.DocumentationBuilder.mkdocsEnabled"]},{"name":"abstract var moduleMetadata: ModuleMetadata","description":"dev.teogor.winds.api.Winds.moduleMetadata","location":"api/dev.teogor.winds.api/-winds/module-metadata.html","searchKeys":["moduleMetadata","abstract var moduleMetadata: ModuleMetadata","dev.teogor.winds.api.Winds.moduleMetadata"]},{"name":"abstract var name: String","description":"dev.teogor.winds.api.DocsGenerator.name","location":"api/dev.teogor.winds.api/-docs-generator/name.html","searchKeys":["name","abstract var name: String","dev.teogor.winds.api.DocsGenerator.name"]},{"name":"abstract var name: String","description":"dev.teogor.winds.api.WorkflowSynthesizer.name","location":"api/dev.teogor.winds.api/-workflow-synthesizer/name.html","searchKeys":["name","abstract var name: String","dev.teogor.winds.api.WorkflowSynthesizer.name"]},{"name":"abstract var name: String?","description":"dev.teogor.winds.api.ModuleMetadata.name","location":"api/dev.teogor.winds.api/-module-metadata/name.html","searchKeys":["name","abstract var name: String?","dev.teogor.winds.api.ModuleMetadata.name"]},{"name":"abstract var optInForVanniktechPlugin: Boolean","description":"dev.teogor.winds.api.Publishing.optInForVanniktechPlugin","location":"api/dev.teogor.winds.api/-publishing/opt-in-for-vanniktech-plugin.html","searchKeys":["optInForVanniktechPlugin","abstract var optInForVanniktechPlugin: Boolean","dev.teogor.winds.api.Publishing.optInForVanniktechPlugin"]},{"name":"abstract var optInForVanniktechPlugin: Boolean","description":"dev.teogor.winds.api.PublishingOptions.optInForVanniktechPlugin","location":"api/dev.teogor.winds.api/-publishing-options/opt-in-for-vanniktech-plugin.html","searchKeys":["optInForVanniktechPlugin","abstract var optInForVanniktechPlugin: Boolean","dev.teogor.winds.api.PublishingOptions.optInForVanniktechPlugin"]},{"name":"abstract var publish: Boolean","description":"dev.teogor.winds.api.PublishingOptions.publish","location":"api/dev.teogor.winds.api/-publishing-options/publish.html","searchKeys":["publish","abstract var publish: Boolean","dev.teogor.winds.api.PublishingOptions.publish"]},{"name":"abstract var publishing: Publishing","description":"dev.teogor.winds.api.Winds.publishing","location":"api/dev.teogor.winds.api/-winds/publishing.html","searchKeys":["publishing","abstract var publishing: Publishing","dev.teogor.winds.api.Winds.publishing"]},{"name":"abstract var publishingOptions: PublishingOptions","description":"dev.teogor.winds.api.Winds.publishingOptions","location":"api/dev.teogor.winds.api/-winds/publishing-options.html","searchKeys":["publishingOptions","abstract var publishingOptions: PublishingOptions","dev.teogor.winds.api.Winds.publishingOptions"]},{"name":"abstract var sonatypeHost: SonatypeHost","description":"dev.teogor.winds.api.Publishing.sonatypeHost","location":"api/dev.teogor.winds.api/-publishing/sonatype-host.html","searchKeys":["sonatypeHost","abstract var sonatypeHost: SonatypeHost","dev.teogor.winds.api.Publishing.sonatypeHost"]},{"name":"abstract var sonatypeHost: SonatypeHost","description":"dev.teogor.winds.api.PublishingOptions.sonatypeHost","location":"api/dev.teogor.winds.api/-publishing-options/sonatype-host.html","searchKeys":["sonatypeHost","abstract var sonatypeHost: SonatypeHost","dev.teogor.winds.api.PublishingOptions.sonatypeHost"]},{"name":"abstract var task: DefaultTask?","description":"dev.teogor.winds.api.TaskBuilder.task","location":"api/dev.teogor.winds.api/-task-builder/task.html","searchKeys":["task","abstract var task: DefaultTask?","dev.teogor.winds.api.TaskBuilder.task"]},{"name":"abstract var websiteUrl: String?","description":"dev.teogor.winds.api.ModuleMetadata.websiteUrl","location":"api/dev.teogor.winds.api/-module-metadata/website-url.html","searchKeys":["websiteUrl","abstract var websiteUrl: String?","dev.teogor.winds.api.ModuleMetadata.websiteUrl"]},{"name":"abstract var windsFeatures: WindsFeatures","description":"dev.teogor.winds.api.Winds.windsFeatures","location":"api/dev.teogor.winds.api/-winds/winds-features.html","searchKeys":["windsFeatures","abstract var windsFeatures: WindsFeatures","dev.teogor.winds.api.Winds.windsFeatures"]},{"name":"abstract var workflowSynthesizer: Boolean","description":"dev.teogor.winds.api.Features.workflowSynthesizer","location":"api/dev.teogor.winds.api/-features/workflow-synthesizer.html","searchKeys":["workflowSynthesizer","abstract var workflowSynthesizer: Boolean","dev.teogor.winds.api.Features.workflowSynthesizer"]},{"name":"abstract var workflowSynthesizer: Boolean","description":"dev.teogor.winds.api.WindsFeatures.workflowSynthesizer","location":"api/dev.teogor.winds.api/-winds-features/workflow-synthesizer.html","searchKeys":["workflowSynthesizer","abstract var workflowSynthesizer: Boolean","dev.teogor.winds.api.WindsFeatures.workflowSynthesizer"]},{"name":"abstract var workflowSynthesizer: WorkflowSynthesizer","description":"dev.teogor.winds.api.Winds.workflowSynthesizer","location":"api/dev.teogor.winds.api/-winds/workflow-synthesizer.html","searchKeys":["workflowSynthesizer","abstract var workflowSynthesizer: WorkflowSynthesizer","dev.teogor.winds.api.Winds.workflowSynthesizer"]},{"name":"abstract var yearCreated: Int","description":"dev.teogor.winds.api.ModuleMetadata.yearCreated","location":"api/dev.teogor.winds.api/-module-metadata/year-created.html","searchKeys":["yearCreated","abstract var yearCreated: Int","dev.teogor.winds.api.ModuleMetadata.yearCreated"]},{"name":"class InvalidLicenseException(message: String) : ModuleMetadataException","description":"dev.teogor.winds.api.util.InvalidLicenseException","location":"api/dev.teogor.winds.api.util/-invalid-license-exception/index.html","searchKeys":["InvalidLicenseException","class InvalidLicenseException(message: String) : ModuleMetadataException","dev.teogor.winds.api.util.InvalidLicenseException"]},{"name":"class InvalidPersonException(message: String) : ModuleMetadataException","description":"dev.teogor.winds.api.util.InvalidPersonException","location":"api/dev.teogor.winds.api.util/-invalid-person-exception/index.html","searchKeys":["InvalidPersonException","class InvalidPersonException(message: String) : ModuleMetadataException","dev.teogor.winds.api.util.InvalidPersonException"]},{"name":"class InvalidScmConfigurationException(message: String) : ModuleMetadataException","description":"dev.teogor.winds.api.util.InvalidScmConfigurationException","location":"api/dev.teogor.winds.api.util/-invalid-scm-configuration-exception/index.html","searchKeys":["InvalidScmConfigurationException","class InvalidScmConfigurationException(message: String) : ModuleMetadataException","dev.teogor.winds.api.util.InvalidScmConfigurationException"]},{"name":"class MissingRequiredFieldException(message: String) : ModuleMetadataException","description":"dev.teogor.winds.api.util.MissingRequiredFieldException","location":"api/dev.teogor.winds.api.util/-missing-required-field-exception/index.html","searchKeys":["MissingRequiredFieldException","class MissingRequiredFieldException(message: String) : ModuleMetadataException","dev.teogor.winds.api.util.MissingRequiredFieldException"]},{"name":"class VersionBuilder","description":"dev.teogor.winds.api.model.Version.VersionBuilder","location":"api/dev.teogor.winds.api.model/-version/-version-builder/index.html","searchKeys":["VersionBuilder","class VersionBuilder","dev.teogor.winds.api.model.Version.VersionBuilder"]},{"name":"const val ALPHA: Emoji","description":"dev.teogor.winds.api.util.Emojis.ALPHA","location":"api/dev.teogor.winds.api.util/-emojis/-a-l-p-h-a.html","searchKeys":["ALPHA","const val ALPHA: Emoji","dev.teogor.winds.api.util.Emojis.ALPHA"]},{"name":"const val BETA: Emoji","description":"dev.teogor.winds.api.util.Emojis.BETA","location":"api/dev.teogor.winds.api.util/-emojis/-b-e-t-a.html","searchKeys":["BETA","const val BETA: Emoji","dev.teogor.winds.api.util.Emojis.BETA"]},{"name":"const val DEPRECATED: Emoji","description":"dev.teogor.winds.api.util.Emojis.DEPRECATED","location":"api/dev.teogor.winds.api.util/-emojis/-d-e-p-r-e-c-a-t-e-d.html","searchKeys":["DEPRECATED","const val DEPRECATED: Emoji","dev.teogor.winds.api.util.Emojis.DEPRECATED"]},{"name":"constructor()","description":"dev.teogor.winds.api.model.Version.VersionBuilder.VersionBuilder","location":"api/dev.teogor.winds.api.model/-version/-version-builder/-version-builder.html","searchKeys":["VersionBuilder","constructor()","dev.teogor.winds.api.model.Version.VersionBuilder.VersionBuilder"]},{"name":"constructor(completeName: String, name: String, artifactId: String, version: Version, canBePublished: Boolean)","description":"dev.teogor.winds.api.model.ModuleMetadataDefault.ModuleMetadataDefault","location":"api/dev.teogor.winds.api.model/-module-metadata-default/-module-metadata-default.html","searchKeys":["ModuleMetadataDefault","constructor(completeName: String, name: String, artifactId: String, version: Version, canBePublished: Boolean)","dev.teogor.winds.api.model.ModuleMetadataDefault.ModuleMetadataDefault"]},{"name":"constructor(connection: String, developerConnection: String, repository: String, owner: String, repositoryUrl: String)","description":"dev.teogor.winds.api.Scm.CustomExplicit.CustomExplicit","location":"api/dev.teogor.winds.api/-scm/-custom-explicit/-custom-explicit.html","searchKeys":["CustomExplicit","constructor(connection: String, developerConnection: String, repository: String, owner: String, repositoryUrl: String)","dev.teogor.winds.api.Scm.CustomExplicit.CustomExplicit"]},{"name":"constructor(description: String)","description":"dev.teogor.winds.gradle.tasks.BaseGeneratorTask.BaseGeneratorTask","location":"api/dev.teogor.winds.gradle.tasks/-base-generator-task/-base-generator-task.html","searchKeys":["BaseGeneratorTask","constructor(description: String)","dev.teogor.winds.gradle.tasks.BaseGeneratorTask.BaseGeneratorTask"]},{"name":"constructor(enabled: Boolean = false, baselineVersion: String = \"\", failOnIncompatibleChanges: Boolean = false)","description":"dev.teogor.winds.api.BinaryCompatibility.BinaryCompatibility","location":"api/dev.teogor.winds.api/-binary-compatibility/-binary-compatibility.html","searchKeys":["BinaryCompatibility","constructor(enabled: Boolean = false, baselineVersion: String = \"\", failOnIncompatibleChanges: Boolean = false)","dev.teogor.winds.api.BinaryCompatibility.BinaryCompatibility"]},{"name":"constructor(enabled: Boolean = false, format: String = \"\", includeFiles: List<String> = emptyList(), excludeFiles: List<String> = emptyList())","description":"dev.teogor.winds.api.SpotlessOptions.SpotlessOptions","location":"api/dev.teogor.winds.api/-spotless-options/-spotless-options.html","searchKeys":["SpotlessOptions","constructor(enabled: Boolean = false, format: String = \"\", includeFiles: List<String> = emptyList(), excludeFiles: List<String> = emptyList())","dev.teogor.winds.api.SpotlessOptions.SpotlessOptions"]},{"name":"constructor(enabled: Boolean = false, outputDirectory: String = \"\", sourceDirectories: List<String> = emptyList(), additionalIncludes: List<String> = emptyList())","description":"dev.teogor.winds.api.DokkaOptions.DokkaOptions","location":"api/dev.teogor.winds.api/-dokka-options/-dokka-options.html","searchKeys":["DokkaOptions","constructor(enabled: Boolean = false, outputDirectory: String = \"\", sourceDirectories: List<String> = emptyList(), additionalIncludes: List<String> = emptyList())","dev.teogor.winds.api.DokkaOptions.DokkaOptions"]},{"name":"constructor(excludedScopes: List<String> = emptyList(), acceptedModules: List<String> = emptyList(), acceptedPaths: List<String> = emptyList())","description":"dev.teogor.winds.api.BomOptions.BomOptions","location":"api/dev.teogor.winds.api/-bom-options/-bom-options.html","searchKeys":["BomOptions","constructor(excludedScopes: List<String> = emptyList(), acceptedModules: List<String> = emptyList(), acceptedPaths: List<String> = emptyList())","dev.teogor.winds.api.BomOptions.BomOptions"]},{"name":"constructor(group: String, artifact: String, version: String)","description":"dev.teogor.winds.api.model.Dependency.Dependency","location":"api/dev.teogor.winds.api.model/-dependency/-dependency.html","searchKeys":["Dependency","constructor(group: String, artifact: String, version: String)","dev.teogor.winds.api.model.Dependency.Dependency"]},{"name":"constructor(group: String, name: String, version: Version, artifactIdFormat: ArtifactIdFormat = ArtifactIdFormat.FULL, nameFormat: NameFormat = NameFormat.FULL)","description":"dev.teogor.winds.api.ArtifactDescriptor.ArtifactDescriptor","location":"api/dev.teogor.winds.api/-artifact-descriptor/-artifact-descriptor.html","searchKeys":["ArtifactDescriptor","constructor(group: String, name: String, version: Version, artifactIdFormat: ArtifactIdFormat = ArtifactIdFormat.FULL, nameFormat: NameFormat = NameFormat.FULL)","dev.teogor.winds.api.ArtifactDescriptor.ArtifactDescriptor"]},{"name":"constructor(id: String = \"\", name: String = \"\", email: String = \"\", url: String = \"\", roles: List<String> = emptyList(), timezone: String = \"\", organization: String = \"\", organizationUrl: String = \"\", properties: Map<String, String> = emptyMap())","description":"dev.teogor.winds.api.Person.Developer.Developer","location":"api/dev.teogor.winds.api/-person/-developer/-developer.html","searchKeys":["Developer","constructor(id: String = \"\", name: String = \"\", email: String = \"\", url: String = \"\", roles: List<String> = emptyList(), timezone: String = \"\", organization: String = \"\", organizationUrl: String = \"\", properties: Map<String, String> = emptyMap())","dev.teogor.winds.api.Person.Developer.Developer"]},{"name":"constructor(id: String = \"\", name: String = \"\", email: String = \"\", url: String = \"\", roles: List<String> = emptyList(), timezone: String = \"\", organization: String = \"\", organizationUrl: String = \"\", properties: Map<String, String> = emptyMap())","description":"dev.teogor.winds.api.Person.DeveloperContributor.DeveloperContributor","location":"api/dev.teogor.winds.api/-person/-developer-contributor/-developer-contributor.html","searchKeys":["DeveloperContributor","constructor(id: String = \"\", name: String = \"\", email: String = \"\", url: String = \"\", roles: List<String> = emptyList(), timezone: String = \"\", organization: String = \"\", organizationUrl: String = \"\", properties: Map<String, String> = emptyMap())","dev.teogor.winds.api.Person.DeveloperContributor.DeveloperContributor"]},{"name":"constructor(major: Int, minor: Int, patch: Int, flag: ReleaseStatus = ReleaseStatus.Stable, isDeprecated: Boolean = false, versionQualifier: Int = 0, versionQualifierPadding: Int = 2)","description":"dev.teogor.winds.api.model.Version.Version","location":"api/dev.teogor.winds.api.model/-version/-version.html","searchKeys":["Version","constructor(major: Int, minor: Int, patch: Int, flag: ReleaseStatus = ReleaseStatus.Stable, isDeprecated: Boolean = false, versionQualifier: Int = 0, versionQualifierPadding: Int = 2)","dev.teogor.winds.api.model.Version.Version"]},{"name":"constructor(message: String)","description":"dev.teogor.winds.api.util.InvalidLicenseException.InvalidLicenseException","location":"api/dev.teogor.winds.api.util/-invalid-license-exception/-invalid-license-exception.html","searchKeys":["InvalidLicenseException","constructor(message: String)","dev.teogor.winds.api.util.InvalidLicenseException.InvalidLicenseException"]},{"name":"constructor(message: String)","description":"dev.teogor.winds.api.util.InvalidPersonException.InvalidPersonException","location":"api/dev.teogor.winds.api.util/-invalid-person-exception/-invalid-person-exception.html","searchKeys":["InvalidPersonException","constructor(message: String)","dev.teogor.winds.api.util.InvalidPersonException.InvalidPersonException"]},{"name":"constructor(message: String)","description":"dev.teogor.winds.api.util.InvalidScmConfigurationException.InvalidScmConfigurationException","location":"api/dev.teogor.winds.api.util/-invalid-scm-configuration-exception/-invalid-scm-configuration-exception.html","searchKeys":["InvalidScmConfigurationException","constructor(message: String)","dev.teogor.winds.api.util.InvalidScmConfigurationException.InvalidScmConfigurationException"]},{"name":"constructor(message: String)","description":"dev.teogor.winds.api.util.MissingRequiredFieldException.MissingRequiredFieldException","location":"api/dev.teogor.winds.api.util/-missing-required-field-exception/-missing-required-field-exception.html","searchKeys":["MissingRequiredFieldException","constructor(message: String)","dev.teogor.winds.api.util.MissingRequiredFieldException.MissingRequiredFieldException"]},{"name":"constructor(message: String)","description":"dev.teogor.winds.api.util.ModuleMetadataException.ModuleMetadataException","location":"api/dev.teogor.winds.api.util/-module-metadata-exception/-module-metadata-exception.html","searchKeys":["ModuleMetadataException","constructor(message: String)","dev.teogor.winds.api.util.ModuleMetadataException.ModuleMetadataException"]},{"name":"constructor(module: String, version: Version, date: Long)","description":"dev.teogor.winds.api.model.ModuleDependency.ModuleDependency","location":"api/dev.teogor.winds.api.model/-module-dependency/-module-dependency.html","searchKeys":["ModuleDependency","constructor(module: String, version: Version, date: Long)","dev.teogor.winds.api.model.ModuleDependency.ModuleDependency"]},{"name":"constructor(module: String, version: Version, date: Long)","description":"dev.teogor.winds.api.model.ModuleDependencyRecord.ModuleDependencyRecord","location":"api/dev.teogor.winds.api.model/-module-dependency-record/-module-dependency-record.html","searchKeys":["ModuleDependencyRecord","constructor(module: String, version: Version, date: Long)","dev.teogor.winds.api.model.ModuleDependencyRecord.ModuleDependencyRecord"]},{"name":"constructor(module: String, version: Version, date: Long, dependencies: List<ModuleDependency>)","description":"dev.teogor.winds.api.model.DependencyBundle.DependencyBundle","location":"api/dev.teogor.winds.api.model/-dependency-bundle/-dependency-bundle.html","searchKeys":["DependencyBundle","constructor(module: String, version: Version, date: Long, dependencies: List<ModuleDependency>)","dev.teogor.winds.api.model.DependencyBundle.DependencyBundle"]},{"name":"constructor(name: String = \"\", email: String = \"\", url: String = \"\", roles: List<String> = emptyList(), timezone: String = \"\", organization: String = \"\", organizationUrl: String = \"\", properties: Map<String, String> = emptyMap())","description":"dev.teogor.winds.api.Person.Contributor.Contributor","location":"api/dev.teogor.winds.api/-person/-contributor/-contributor.html","searchKeys":["Contributor","constructor(name: String = \"\", email: String = \"\", url: String = \"\", roles: List<String> = emptyList(), timezone: String = \"\", organization: String = \"\", organizationUrl: String = \"\", properties: Map<String, String> = emptyMap())","dev.teogor.winds.api.Person.Contributor.Contributor"]},{"name":"constructor(name: String, path: Path, artifact: ArtifactDescriptor, dependencies: List<ArtifactDescriptor>, publish: Boolean, completeName: String, description: String?, documentationBuilder: DocumentationBuilder, ticketSystem: TicketSystem?, scm: Scm?, isBom: Boolean, isPlugin: Boolean, windsChangelogYml: String)","description":"dev.teogor.winds.api.model.ModuleDescriptor.ModuleDescriptor","location":"api/dev.teogor.winds.api.model/-module-descriptor/-module-descriptor.html","searchKeys":["ModuleDescriptor","constructor(name: String, path: Path, artifact: ArtifactDescriptor, dependencies: List<ArtifactDescriptor>, publish: Boolean, completeName: String, description: String?, documentationBuilder: DocumentationBuilder, ticketSystem: TicketSystem?, scm: Scm?, isBom: Boolean, isPlugin: Boolean, windsChangelogYml: String)","dev.teogor.winds.api.model.ModuleDescriptor.ModuleDescriptor"]},{"name":"constructor(name: String, url: String, distribution: Distribution = Distribution.Repo, comments: String? = null)","description":"dev.teogor.winds.api.License.Custom.Custom","location":"api/dev.teogor.winds.api/-license/-custom/-custom.html","searchKeys":["Custom","constructor(name: String, url: String, distribution: Distribution = Distribution.Repo, comments: String? = null)","dev.teogor.winds.api.License.Custom.Custom"]},{"name":"constructor(path: String, repository: String, owner: String)","description":"dev.teogor.winds.api.Scm.Local.Local","location":"api/dev.teogor.winds.api/-scm/-local/-local.html","searchKeys":["Local","constructor(path: String, repository: String, owner: String)","dev.teogor.winds.api.Scm.Local.Local"]},{"name":"constructor(product: String, component: String = \"\", serverUrl: String)","description":"dev.teogor.winds.api.TicketSystem.Bugzilla.Bugzilla","location":"api/dev.teogor.winds.api/-ticket-system/-bugzilla/-bugzilla.html","searchKeys":["Bugzilla","constructor(product: String, component: String = \"\", serverUrl: String)","dev.teogor.winds.api.TicketSystem.Bugzilla.Bugzilla"]},{"name":"constructor(project: String, group: String = \"\")","description":"dev.teogor.winds.api.TicketSystem.GitLab.GitLab","location":"api/dev.teogor.winds.api/-ticket-system/-git-lab/-git-lab.html","searchKeys":["GitLab","constructor(project: String, group: String = \"\")","dev.teogor.winds.api.TicketSystem.GitLab.GitLab"]},{"name":"constructor(projectDir: File, docsGenerator: DocsGenerator)","description":"dev.teogor.winds.api.docs.DocsModuleHandler.DocsModuleHandler","location":"api/dev.teogor.winds.api.docs/-docs-module-handler/-docs-module-handler.html","searchKeys":["DocsModuleHandler","constructor(projectDir: File, docsGenerator: DocsGenerator)","dev.teogor.winds.api.docs.DocsModuleHandler.DocsModuleHandler"]},{"name":"constructor(projectId: String, baseUrl: String)","description":"dev.teogor.winds.api.TicketSystem.Redmine.Redmine","location":"api/dev.teogor.winds.api/-ticket-system/-redmine/-redmine.html","searchKeys":["Redmine","constructor(projectId: String, baseUrl: String)","dev.teogor.winds.api.TicketSystem.Redmine.Redmine"]},{"name":"constructor(projectKey: String, serverUrl: String = \"https://issues.atlassian.com\")","description":"dev.teogor.winds.api.TicketSystem.Jira.Jira","location":"api/dev.teogor.winds.api/-ticket-system/-jira/-jira.html","searchKeys":["Jira","constructor(projectKey: String, serverUrl: String = \"https://issues.atlassian.com\")","dev.teogor.winds.api.TicketSystem.Jira.Jira"]},{"name":"constructor(projectName: String, modulePath: String)","description":"dev.teogor.winds.api.model.LocalProjectDependency.LocalProjectDependency","location":"api/dev.teogor.winds.api.model/-local-project-dependency/-local-project-dependency.html","searchKeys":["LocalProjectDependency","constructor(projectName: String, modulePath: String)","dev.teogor.winds.api.model.LocalProjectDependency.LocalProjectDependency"]},{"name":"constructor(repository: String, owner: String)","description":"dev.teogor.winds.api.Scm.GitHub.GitHub","location":"api/dev.teogor.winds.api/-scm/-git-hub/-git-hub.html","searchKeys":["GitHub","constructor(repository: String, owner: String)","dev.teogor.winds.api.Scm.GitHub.GitHub"]},{"name":"constructor(repository: String, owner: String)","description":"dev.teogor.winds.api.TicketSystem.GitHub.GitHub","location":"api/dev.teogor.winds.api/-ticket-system/-git-hub/-git-hub.html","searchKeys":["GitHub","constructor(repository: String, owner: String)","dev.teogor.winds.api.TicketSystem.GitHub.GitHub"]},{"name":"constructor(repository: String, owner: String, domain: String)","description":"dev.teogor.winds.api.Scm.Custom.Custom","location":"api/dev.teogor.winds.api/-scm/-custom/-custom.html","searchKeys":["Custom","constructor(repository: String, owner: String, domain: String)","dev.teogor.winds.api.Scm.Custom.Custom"]},{"name":"constructor(repository: String, owner: String, groupName: String? = null)","description":"dev.teogor.winds.api.Scm.GitLab.GitLab","location":"api/dev.teogor.winds.api/-scm/-git-lab/-git-lab.html","searchKeys":["GitLab","constructor(repository: String, owner: String, groupName: String? = null)","dev.teogor.winds.api.Scm.GitLab.GitLab"]},{"name":"constructor(repository: String, owner: String, workspaceName: String? = null)","description":"dev.teogor.winds.api.Scm.Bitbucket.Bitbucket","location":"api/dev.teogor.winds.api/-scm/-bitbucket/-bitbucket.html","searchKeys":["Bitbucket","constructor(repository: String, owner: String, workspaceName: String? = null)","dev.teogor.winds.api.Scm.Bitbucket.Bitbucket"]},{"name":"constructor(url: String = \"https://opensource.org/licenses/MIT\", distribution: Distribution = Distribution.Repo)","description":"dev.teogor.winds.api.License.MIT.MIT","location":"api/dev.teogor.winds.api/-license/-m-i-t/-m-i-t.html","searchKeys":["MIT","constructor(url: String = \"https://opensource.org/licenses/MIT\", distribution: Distribution = Distribution.Repo)","dev.teogor.winds.api.License.MIT.MIT"]},{"name":"constructor(url: String = \"https://www.apache.org/licenses/LICENSE-2.0\", distribution: Distribution = Distribution.Repo)","description":"dev.teogor.winds.api.License.Apache2.Apache2","location":"api/dev.teogor.winds.api/-license/-apache2/-apache2.html","searchKeys":["Apache2","constructor(url: String = \"https://www.apache.org/licenses/LICENSE-2.0\", distribution: Distribution = Distribution.Repo)","dev.teogor.winds.api.License.Apache2.Apache2"]},{"name":"constructor(url: String = \"https://www.gnu.org/licenses/gpl-3.0.en.html\", distribution: Distribution = Distribution.Repo)","description":"dev.teogor.winds.api.License.GPLv3.GPLv3","location":"api/dev.teogor.winds.api/-license/-g-p-lv3/-g-p-lv3.html","searchKeys":["GPLv3","constructor(url: String = \"https://www.gnu.org/licenses/gpl-3.0.en.html\", distribution: Distribution = Distribution.Repo)","dev.teogor.winds.api.License.GPLv3.GPLv3"]},{"name":"constructor(value: String)","description":"dev.teogor.winds.api.model.Path.Path","location":"api/dev.teogor.winds.api.model/-path/-path.html","searchKeys":["Path","constructor(value: String)","dev.teogor.winds.api.model.Path.Path"]},{"name":"constructor(version: Version, date: Long)","description":"dev.teogor.winds.api.model.BillOfMaterialsRecord.BillOfMaterialsRecord","location":"api/dev.teogor.winds.api.model/-bill-of-materials-record/-bill-of-materials-record.html","searchKeys":["BillOfMaterialsRecord","constructor(version: Version, date: Long)","dev.teogor.winds.api.model.BillOfMaterialsRecord.BillOfMaterialsRecord"]},{"name":"constructor(version: Version, date: Long)","description":"dev.teogor.winds.api.model.VersionedDependencyRecord.VersionedDependencyRecord","location":"api/dev.teogor.winds.api.model/-versioned-dependency-record/-versioned-dependency-record.html","searchKeys":["VersionedDependencyRecord","constructor(version: Version, date: Long)","dev.teogor.winds.api.model.VersionedDependencyRecord.VersionedDependencyRecord"]},{"name":"data class Apache2(val url: String = \"https://www.apache.org/licenses/LICENSE-2.0\", var distribution: Distribution = Distribution.Repo) : License","description":"dev.teogor.winds.api.License.Apache2","location":"api/dev.teogor.winds.api/-license/-apache2/index.html","searchKeys":["Apache2","data class Apache2(val url: String = \"https://www.apache.org/licenses/LICENSE-2.0\", var distribution: Distribution = Distribution.Repo) : License","dev.teogor.winds.api.License.Apache2"]},{"name":"data class ArtifactDescriptor(var group: String, var name: String, var version: Version, var artifactIdFormat: ArtifactIdFormat = ArtifactIdFormat.FULL, var nameFormat: NameFormat = NameFormat.FULL)","description":"dev.teogor.winds.api.ArtifactDescriptor","location":"api/dev.teogor.winds.api/-artifact-descriptor/index.html","searchKeys":["ArtifactDescriptor","data class ArtifactDescriptor(var group: String, var name: String, var version: Version, var artifactIdFormat: ArtifactIdFormat = ArtifactIdFormat.FULL, var nameFormat: NameFormat = NameFormat.FULL)","dev.teogor.winds.api.ArtifactDescriptor"]},{"name":"data class BillOfMaterialsRecord(val version: Version, val date: Long) : VersionedDependencyRecord","description":"dev.teogor.winds.api.model.BillOfMaterialsRecord","location":"api/dev.teogor.winds.api.model/-bill-of-materials-record/index.html","searchKeys":["BillOfMaterialsRecord","data class BillOfMaterialsRecord(val version: Version, val date: Long) : VersionedDependencyRecord","dev.teogor.winds.api.model.BillOfMaterialsRecord"]},{"name":"data class BinaryCompatibility(var enabled: Boolean = false, var baselineVersion: String = \"\", var failOnIncompatibleChanges: Boolean = false)","description":"dev.teogor.winds.api.BinaryCompatibility","location":"api/dev.teogor.winds.api/-binary-compatibility/index.html","searchKeys":["BinaryCompatibility","data class BinaryCompatibility(var enabled: Boolean = false, var baselineVersion: String = \"\", var failOnIncompatibleChanges: Boolean = false)","dev.teogor.winds.api.BinaryCompatibility"]},{"name":"data class Bitbucket(var repository: String, var owner: String, var workspaceName: String? = null) : Scm","description":"dev.teogor.winds.api.Scm.Bitbucket","location":"api/dev.teogor.winds.api/-scm/-bitbucket/index.html","searchKeys":["Bitbucket","data class Bitbucket(var repository: String, var owner: String, var workspaceName: String? = null) : Scm","dev.teogor.winds.api.Scm.Bitbucket"]},{"name":"data class BomOptions(var excludedScopes: List<String> = emptyList(), var acceptedModules: List<String> = emptyList(), var acceptedPaths: List<String> = emptyList())","description":"dev.teogor.winds.api.BomOptions","location":"api/dev.teogor.winds.api/-bom-options/index.html","searchKeys":["BomOptions","data class BomOptions(var excludedScopes: List<String> = emptyList(), var acceptedModules: List<String> = emptyList(), var acceptedPaths: List<String> = emptyList())","dev.teogor.winds.api.BomOptions"]},{"name":"data class Bugzilla(var product: String, var component: String = \"\", var serverUrl: String) : TicketSystem","description":"dev.teogor.winds.api.TicketSystem.Bugzilla","location":"api/dev.teogor.winds.api/-ticket-system/-bugzilla/index.html","searchKeys":["Bugzilla","data class Bugzilla(var product: String, var component: String = \"\", var serverUrl: String) : TicketSystem","dev.teogor.winds.api.TicketSystem.Bugzilla"]},{"name":"data class Contributor(var name: String = \"\", var email: String = \"\", var url: String = \"\", var roles: List<String> = emptyList(), var timezone: String = \"\", var organization: String = \"\", var organizationUrl: String = \"\", var properties: Map<String, String> = emptyMap()) : Person","description":"dev.teogor.winds.api.Person.Contributor","location":"api/dev.teogor.winds.api/-person/-contributor/index.html","searchKeys":["Contributor","data class Contributor(var name: String = \"\", var email: String = \"\", var url: String = \"\", var roles: List<String> = emptyList(), var timezone: String = \"\", var organization: String = \"\", var organizationUrl: String = \"\", var properties: Map<String, String> = emptyMap()) : Person","dev.teogor.winds.api.Person.Contributor"]},{"name":"data class Custom(val name: String, val url: String, var distribution: Distribution = Distribution.Repo, var comments: String? = null) : License","description":"dev.teogor.winds.api.License.Custom","location":"api/dev.teogor.winds.api/-license/-custom/index.html","searchKeys":["Custom","data class Custom(val name: String, val url: String, var distribution: Distribution = Distribution.Repo, var comments: String? = null) : License","dev.teogor.winds.api.License.Custom"]},{"name":"data class Custom(var repository: String, var owner: String, var domain: String) : Scm","description":"dev.teogor.winds.api.Scm.Custom","location":"api/dev.teogor.winds.api/-scm/-custom/index.html","searchKeys":["Custom","data class Custom(var repository: String, var owner: String, var domain: String) : Scm","dev.teogor.winds.api.Scm.Custom"]},{"name":"data class CustomExplicit(var connection: String, var developerConnection: String, var repository: String, var owner: String, var repositoryUrl: String) : Scm","description":"dev.teogor.winds.api.Scm.CustomExplicit","location":"api/dev.teogor.winds.api/-scm/-custom-explicit/index.html","searchKeys":["CustomExplicit","data class CustomExplicit(var connection: String, var developerConnection: String, var repository: String, var owner: String, var repositoryUrl: String) : Scm","dev.teogor.winds.api.Scm.CustomExplicit"]},{"name":"data class Dependency(val group: String, val artifact: String, val version: String) : DependencyDefinition","description":"dev.teogor.winds.api.model.Dependency","location":"api/dev.teogor.winds.api.model/-dependency/index.html","searchKeys":["Dependency","data class Dependency(val group: String, val artifact: String, val version: String) : DependencyDefinition","dev.teogor.winds.api.model.Dependency"]},{"name":"data class DependencyBundle(val module: String, val version: Version, val date: Long, var dependencies: List<ModuleDependency>)","description":"dev.teogor.winds.api.model.DependencyBundle","location":"api/dev.teogor.winds.api.model/-dependency-bundle/index.html","searchKeys":["DependencyBundle","data class DependencyBundle(val module: String, val version: Version, val date: Long, var dependencies: List<ModuleDependency>)","dev.teogor.winds.api.model.DependencyBundle"]},{"name":"data class Developer(var id: String = \"\", var name: String = \"\", var email: String = \"\", var url: String = \"\", var roles: List<String> = emptyList(), var timezone: String = \"\", var organization: String = \"\", var organizationUrl: String = \"\", var properties: Map<String, String> = emptyMap()) : Person","description":"dev.teogor.winds.api.Person.Developer","location":"api/dev.teogor.winds.api/-person/-developer/index.html","searchKeys":["Developer","data class Developer(var id: String = \"\", var name: String = \"\", var email: String = \"\", var url: String = \"\", var roles: List<String> = emptyList(), var timezone: String = \"\", var organization: String = \"\", var organizationUrl: String = \"\", var properties: Map<String, String> = emptyMap()) : Person","dev.teogor.winds.api.Person.Developer"]},{"name":"data class DeveloperContributor(var id: String = \"\", var name: String = \"\", var email: String = \"\", var url: String = \"\", var roles: List<String> = emptyList(), var timezone: String = \"\", var organization: String = \"\", var organizationUrl: String = \"\", var properties: Map<String, String> = emptyMap()) : Person","description":"dev.teogor.winds.api.Person.DeveloperContributor","location":"api/dev.teogor.winds.api/-person/-developer-contributor/index.html","searchKeys":["DeveloperContributor","data class DeveloperContributor(var id: String = \"\", var name: String = \"\", var email: String = \"\", var url: String = \"\", var roles: List<String> = emptyList(), var timezone: String = \"\", var organization: String = \"\", var organizationUrl: String = \"\", var properties: Map<String, String> = emptyMap()) : Person","dev.teogor.winds.api.Person.DeveloperContributor"]},{"name":"data class DokkaOptions(var enabled: Boolean = false, var outputDirectory: String = \"\", var sourceDirectories: List<String> = emptyList(), var additionalIncludes: List<String> = emptyList())","description":"dev.teogor.winds.api.DokkaOptions","location":"api/dev.teogor.winds.api/-dokka-options/index.html","searchKeys":["DokkaOptions","data class DokkaOptions(var enabled: Boolean = false, var outputDirectory: String = \"\", var sourceDirectories: List<String> = emptyList(), var additionalIncludes: List<String> = emptyList())","dev.teogor.winds.api.DokkaOptions"]},{"name":"data class GPLv3(val url: String = \"https://www.gnu.org/licenses/gpl-3.0.en.html\", var distribution: Distribution = Distribution.Repo) : License","description":"dev.teogor.winds.api.License.GPLv3","location":"api/dev.teogor.winds.api/-license/-g-p-lv3/index.html","searchKeys":["GPLv3","data class GPLv3(val url: String = \"https://www.gnu.org/licenses/gpl-3.0.en.html\", var distribution: Distribution = Distribution.Repo) : License","dev.teogor.winds.api.License.GPLv3"]},{"name":"data class GitHub(var repository: String, var owner: String) : Scm","description":"dev.teogor.winds.api.Scm.GitHub","location":"api/dev.teogor.winds.api/-scm/-git-hub/index.html","searchKeys":["GitHub","data class GitHub(var repository: String, var owner: String) : Scm","dev.teogor.winds.api.Scm.GitHub"]},{"name":"data class GitHub(var repository: String, var owner: String) : TicketSystem","description":"dev.teogor.winds.api.TicketSystem.GitHub","location":"api/dev.teogor.winds.api/-ticket-system/-git-hub/index.html","searchKeys":["GitHub","data class GitHub(var repository: String, var owner: String) : TicketSystem","dev.teogor.winds.api.TicketSystem.GitHub"]},{"name":"data class GitLab(var project: String, var group: String = \"\") : TicketSystem","description":"dev.teogor.winds.api.TicketSystem.GitLab","location":"api/dev.teogor.winds.api/-ticket-system/-git-lab/index.html","searchKeys":["GitLab","data class GitLab(var project: String, var group: String = \"\") : TicketSystem","dev.teogor.winds.api.TicketSystem.GitLab"]},{"name":"data class GitLab(var repository: String, var owner: String, var groupName: String? = null) : Scm","description":"dev.teogor.winds.api.Scm.GitLab","location":"api/dev.teogor.winds.api/-scm/-git-lab/index.html","searchKeys":["GitLab","data class GitLab(var repository: String, var owner: String, var groupName: String? = null) : Scm","dev.teogor.winds.api.Scm.GitLab"]},{"name":"data class Jira(var projectKey: String, var serverUrl: String = \"https://issues.atlassian.com\") : TicketSystem","description":"dev.teogor.winds.api.TicketSystem.Jira","location":"api/dev.teogor.winds.api/-ticket-system/-jira/index.html","searchKeys":["Jira","data class Jira(var projectKey: String, var serverUrl: String = \"https://issues.atlassian.com\") : TicketSystem","dev.teogor.winds.api.TicketSystem.Jira"]},{"name":"data class Local(var path: String, var repository: String, var owner: String) : Scm","description":"dev.teogor.winds.api.Scm.Local","location":"api/dev.teogor.winds.api/-scm/-local/index.html","searchKeys":["Local","data class Local(var path: String, var repository: String, var owner: String) : Scm","dev.teogor.winds.api.Scm.Local"]},{"name":"data class LocalProjectDependency(val projectName: String, val modulePath: String) : DependencyDefinition","description":"dev.teogor.winds.api.model.LocalProjectDependency","location":"api/dev.teogor.winds.api.model/-local-project-dependency/index.html","searchKeys":["LocalProjectDependency","data class LocalProjectDependency(val projectName: String, val modulePath: String) : DependencyDefinition","dev.teogor.winds.api.model.LocalProjectDependency"]},{"name":"data class MIT(val url: String = \"https://opensource.org/licenses/MIT\", var distribution: Distribution = Distribution.Repo) : License","description":"dev.teogor.winds.api.License.MIT","location":"api/dev.teogor.winds.api/-license/-m-i-t/index.html","searchKeys":["MIT","data class MIT(val url: String = \"https://opensource.org/licenses/MIT\", var distribution: Distribution = Distribution.Repo) : License","dev.teogor.winds.api.License.MIT"]},{"name":"data class ModuleDependency(val module: String, val version: Version, val date: Long)","description":"dev.teogor.winds.api.model.ModuleDependency","location":"api/dev.teogor.winds.api.model/-module-dependency/index.html","searchKeys":["ModuleDependency","data class ModuleDependency(val module: String, val version: Version, val date: Long)","dev.teogor.winds.api.model.ModuleDependency"]},{"name":"data class ModuleDependencyRecord(val module: String, val version: Version, val date: Long) : VersionedDependencyRecord","description":"dev.teogor.winds.api.model.ModuleDependencyRecord","location":"api/dev.teogor.winds.api.model/-module-dependency-record/index.html","searchKeys":["ModuleDependencyRecord","data class ModuleDependencyRecord(val module: String, val version: Version, val date: Long) : VersionedDependencyRecord","dev.teogor.winds.api.model.ModuleDependencyRecord"]},{"name":"data class ModuleDescriptor(val name: String, val path: Path, val artifact: ArtifactDescriptor, val dependencies: List<ArtifactDescriptor>, val publish: Boolean, val completeName: String, val description: String?, val documentationBuilder: DocumentationBuilder, val ticketSystem: TicketSystem?, val scm: Scm?, val isBom: Boolean, val isPlugin: Boolean, val windsChangelogYml: String)","description":"dev.teogor.winds.api.model.ModuleDescriptor","location":"api/dev.teogor.winds.api.model/-module-descriptor/index.html","searchKeys":["ModuleDescriptor","data class ModuleDescriptor(val name: String, val path: Path, val artifact: ArtifactDescriptor, val dependencies: List<ArtifactDescriptor>, val publish: Boolean, val completeName: String, val description: String?, val documentationBuilder: DocumentationBuilder, val ticketSystem: TicketSystem?, val scm: Scm?, val isBom: Boolean, val isPlugin: Boolean, val windsChangelogYml: String)","dev.teogor.winds.api.model.ModuleDescriptor"]},{"name":"data class ModuleMetadataDefault(val completeName: String, val name: String, val artifactId: String, val version: Version, val canBePublished: Boolean)","description":"dev.teogor.winds.api.model.ModuleMetadataDefault","location":"api/dev.teogor.winds.api.model/-module-metadata-default/index.html","searchKeys":["ModuleMetadataDefault","data class ModuleMetadataDefault(val completeName: String, val name: String, val artifactId: String, val version: Version, val canBePublished: Boolean)","dev.teogor.winds.api.model.ModuleMetadataDefault"]},{"name":"data class Path(val value: String)","description":"dev.teogor.winds.api.model.Path","location":"api/dev.teogor.winds.api.model/-path/index.html","searchKeys":["Path","data class Path(val value: String)","dev.teogor.winds.api.model.Path"]},{"name":"data class Redmine(var projectId: String, var baseUrl: String) : TicketSystem","description":"dev.teogor.winds.api.TicketSystem.Redmine","location":"api/dev.teogor.winds.api/-ticket-system/-redmine/index.html","searchKeys":["Redmine","data class Redmine(var projectId: String, var baseUrl: String) : TicketSystem","dev.teogor.winds.api.TicketSystem.Redmine"]},{"name":"data class SpotlessOptions(var enabled: Boolean = false, var format: String = \"\", var includeFiles: List<String> = emptyList(), var excludeFiles: List<String> = emptyList())","description":"dev.teogor.winds.api.SpotlessOptions","location":"api/dev.teogor.winds.api/-spotless-options/index.html","searchKeys":["SpotlessOptions","data class SpotlessOptions(var enabled: Boolean = false, var format: String = \"\", var includeFiles: List<String> = emptyList(), var excludeFiles: List<String> = emptyList())","dev.teogor.winds.api.SpotlessOptions"]},{"name":"data class Version(val major: Int, val minor: Int, val patch: Int, var flag: ReleaseStatus = ReleaseStatus.Stable, var isDeprecated: Boolean = false, versionQualifier: Int = 0, versionQualifierPadding: Int = 2) : Comparable<Version> ","description":"dev.teogor.winds.api.model.Version","location":"api/dev.teogor.winds.api.model/-version/index.html","searchKeys":["Version","data class Version(val major: Int, val minor: Int, val patch: Int, var flag: ReleaseStatus = ReleaseStatus.Stable, var isDeprecated: Boolean = false, versionQualifier: Int = 0, versionQualifierPadding: Int = 2) : Comparable<Version> ","dev.teogor.winds.api.model.Version"]},{"name":"enum ArtifactIdFormat : Enum<ArtifactIdFormat> ","description":"dev.teogor.winds.api.ArtifactIdFormat","location":"api/dev.teogor.winds.api/-artifact-id-format/index.html","searchKeys":["ArtifactIdFormat","enum ArtifactIdFormat : Enum<ArtifactIdFormat> ","dev.teogor.winds.api.ArtifactIdFormat"]},{"name":"enum DependencyType : Enum<DependencyType> ","description":"dev.teogor.winds.api.model.DependencyType","location":"api/dev.teogor.winds.api.model/-dependency-type/index.html","searchKeys":["DependencyType","enum DependencyType : Enum<DependencyType> ","dev.teogor.winds.api.model.DependencyType"]},{"name":"enum NameFormat : Enum<NameFormat> ","description":"dev.teogor.winds.api.NameFormat","location":"api/dev.teogor.winds.api/-name-format/index.html","searchKeys":["NameFormat","enum NameFormat : Enum<NameFormat> ","dev.teogor.winds.api.NameFormat"]},{"name":"enum ReleaseStatus : Enum<ReleaseStatus> ","description":"dev.teogor.winds.api.ReleaseStatus","location":"api/dev.teogor.winds.api/-release-status/index.html","searchKeys":["ReleaseStatus","enum ReleaseStatus : Enum<ReleaseStatus> ","dev.teogor.winds.api.ReleaseStatus"]},{"name":"enum SonatypeHost : Enum<SonatypeHost> ","description":"dev.teogor.winds.api.SonatypeHost","location":"api/dev.teogor.winds.api/-sonatype-host/index.html","searchKeys":["SonatypeHost","enum SonatypeHost : Enum<SonatypeHost> ","dev.teogor.winds.api.SonatypeHost"]},{"name":"enum WindsFeature : Enum<WindsFeature> ","description":"dev.teogor.winds.api.model.WindsFeature","location":"api/dev.teogor.winds.api.model/-winds-feature/index.html","searchKeys":["WindsFeature","enum WindsFeature : Enum<WindsFeature> ","dev.teogor.winds.api.model.WindsFeature"]},{"name":"fun <T : License> List<T>.filterNonEmptyLicenses(): List<T>","description":"dev.teogor.winds.ktx.filterNonEmptyLicenses","location":"api/dev.teogor.winds.ktx/filter-non-empty-licenses.html","searchKeys":["filterNonEmptyLicenses","fun <T : License> List<T>.filterNonEmptyLicenses(): List<T>","dev.teogor.winds.ktx.filterNonEmptyLicenses"]},{"name":"fun <T : Person> List<T>.filterContributors(): List<T>","description":"dev.teogor.winds.ktx.filterContributors","location":"api/dev.teogor.winds.ktx/filter-contributors.html","searchKeys":["filterContributors","fun <T : Person> List<T>.filterContributors(): List<T>","dev.teogor.winds.ktx.filterContributors"]},{"name":"fun <T : Person> List<T>.filterDevelopers(): List<T>","description":"dev.teogor.winds.ktx.filterDevelopers","location":"api/dev.teogor.winds.ktx/filter-developers.html","searchKeys":["filterDevelopers","fun <T : Person> List<T>.filterDevelopers(): List<T>","dev.teogor.winds.ktx.filterDevelopers"]},{"name":"fun <T> Collection<T>.hasDuplicates(): Boolean","description":"dev.teogor.winds.ktx.hasDuplicates","location":"api/dev.teogor.winds.ktx/has-duplicates.html","searchKeys":["hasDuplicates","fun <T> Collection<T>.hasDuplicates(): Boolean","dev.teogor.winds.ktx.hasDuplicates"]},{"name":"fun ArtifactDescriptor.getShowcaseCoordinates(version: Version = this.version): String","description":"dev.teogor.winds.ktx.getShowcaseCoordinates","location":"api/dev.teogor.winds.ktx/get-showcase-coordinates.html","searchKeys":["getShowcaseCoordinates","fun ArtifactDescriptor.getShowcaseCoordinates(version: Version = this.version): String","dev.teogor.winds.ktx.getShowcaseCoordinates"]},{"name":"fun Iterable<ModuleDescriptor>.groupByModule(): Map<String?, List<ModuleDescriptor>>","description":"dev.teogor.winds.ktx.groupByModule","location":"api/dev.teogor.winds.ktx/group-by-module.html","searchKeys":["groupByModule","fun Iterable<ModuleDescriptor>.groupByModule(): Map<String?, List<ModuleDescriptor>>","dev.teogor.winds.ktx.groupByModule"]},{"name":"fun Iterable<ModuleDescriptor>.groupModulesByDependency(): Map<ModuleDescriptor, List<ModuleDescriptor>>","description":"dev.teogor.winds.ktx.groupModulesByDependency","location":"api/dev.teogor.winds.ktx/group-modules-by-dependency.html","searchKeys":["groupModulesByDependency","fun Iterable<ModuleDescriptor>.groupModulesByDependency(): Map<ModuleDescriptor, List<ModuleDescriptor>>","dev.teogor.winds.ktx.groupModulesByDependency"]},{"name":"fun ModuleMetadata.copyVersion(block: Version.VersionBuilder.() -> Unit = {}): Version","description":"dev.teogor.winds.ktx.copyVersion","location":"api/dev.teogor.winds.ktx/copy-version.html","searchKeys":["copyVersion","fun ModuleMetadata.copyVersion(block: Version.VersionBuilder.() -> Unit = {}): Version","dev.teogor.winds.ktx.copyVersion"]},{"name":"fun Project.hasPublishGradlePlugin(): Boolean","description":"dev.teogor.winds.ktx.hasPublishGradlePlugin","location":"api/dev.teogor.winds.ktx/has-publish-gradle-plugin.html","searchKeys":["hasPublishGradlePlugin","fun Project.hasPublishGradlePlugin(): Boolean","dev.teogor.winds.ktx.hasPublishGradlePlugin"]},{"name":"fun Project.hasWindsPlugin(): Boolean","description":"dev.teogor.winds.ktx.hasWindsPlugin","location":"api/dev.teogor.winds.ktx/has-winds-plugin.html","searchKeys":["hasWindsPlugin","fun Project.hasWindsPlugin(): Boolean","dev.teogor.winds.ktx.hasWindsPlugin"]},{"name":"fun Project.inheritFromParentWinds(winds: Winds)","description":"dev.teogor.winds.ktx.inheritFromParentWinds","location":"api/dev.teogor.winds.ktx/inherit-from-parent-winds.html","searchKeys":["inheritFromParentWinds","fun Project.inheritFromParentWinds(winds: Winds)","dev.teogor.winds.ktx.inheritFromParentWinds"]},{"name":"fun Project.isRootProject(): Boolean","description":"dev.teogor.winds.ktx.isRootProject","location":"api/dev.teogor.winds.ktx/is-root-project.html","searchKeys":["isRootProject","fun Project.isRootProject(): Boolean","dev.teogor.winds.ktx.isRootProject"]},{"name":"fun Scm.validate(): Scm","description":"dev.teogor.winds.ktx.validate","location":"api/dev.teogor.winds.ktx/validate.html","searchKeys":["validate","fun Scm.validate(): Scm","dev.teogor.winds.ktx.validate"]},{"name":"fun String.sanitizeArtifactId(): String","description":"dev.teogor.winds.ktx.sanitizeArtifactId","location":"api/dev.teogor.winds.ktx/sanitize-artifact-id.html","searchKeys":["sanitizeArtifactId","fun String.sanitizeArtifactId(): String","dev.teogor.winds.ktx.sanitizeArtifactId"]},{"name":"fun String.toValidArtifactId(): String","description":"dev.teogor.winds.ktx.toValidArtifactId","location":"api/dev.teogor.winds.ktx/to-valid-artifact-id.html","searchKeys":["toValidArtifactId","fun String.toValidArtifactId(): String","dev.teogor.winds.ktx.toValidArtifactId"]},{"name":"fun String.validateAndFormatArtifactId(): String","description":"dev.teogor.winds.ktx.validateAndFormatArtifactId","location":"api/dev.teogor.winds.ktx/validate-and-format-artifact-id.html","searchKeys":["validateAndFormatArtifactId","fun String.validateAndFormatArtifactId(): String","dev.teogor.winds.ktx.validateAndFormatArtifactId"]},{"name":"fun TicketSystem.validate(): TicketSystem","description":"dev.teogor.winds.ktx.validate","location":"api/dev.teogor.winds.ktx/validate.html","searchKeys":["validate","fun TicketSystem.validate(): TicketSystem","dev.teogor.winds.ktx.validate"]},{"name":"fun Version.getEmoji(): String?","description":"dev.teogor.winds.ktx.getEmoji","location":"api/dev.teogor.winds.ktx/get-emoji.html","searchKeys":["getEmoji","fun Version.getEmoji(): String?","dev.teogor.winds.ktx.getEmoji"]},{"name":"fun Version.getMajorMinorPatchVersion(): String","description":"dev.teogor.winds.ktx.getMajorMinorPatchVersion","location":"api/dev.teogor.winds.ktx/get-major-minor-patch-version.html","searchKeys":["getMajorMinorPatchVersion","fun Version.getMajorMinorPatchVersion(): String","dev.teogor.winds.ktx.getMajorMinorPatchVersion"]},{"name":"fun Version.getMajorMinorVersion(): String","description":"dev.teogor.winds.ktx.getMajorMinorVersion","location":"api/dev.teogor.winds.ktx/get-major-minor-version.html","searchKeys":["getMajorMinorVersion","fun Version.getMajorMinorVersion(): String","dev.teogor.winds.ktx.getMajorMinorVersion"]},{"name":"fun addArtifact(vararg artifact: ArtifactDescriptor)","description":"dev.teogor.winds.api.ArtifactDescriptor.addArtifact","location":"api/dev.teogor.winds.api/-artifact-descriptor/add-artifact.html","searchKeys":["addArtifact","fun addArtifact(vararg artifact: ArtifactDescriptor)","dev.teogor.winds.api.ArtifactDescriptor.addArtifact"]},{"name":"fun alphaRelease(version: Int): Version.VersionBuilder","description":"dev.teogor.winds.api.model.Version.VersionBuilder.alphaRelease","location":"api/dev.teogor.winds.api.model/-version/-version-builder/alpha-release.html","searchKeys":["alphaRelease","fun alphaRelease(version: Int): Version.VersionBuilder","dev.teogor.winds.api.model.Version.VersionBuilder.alphaRelease"]},{"name":"fun asPartialLocalPath(): String","description":"dev.teogor.winds.api.model.Path.asPartialLocalPath","location":"api/dev.teogor.winds.api.model/-path/as-partial-local-path.html","searchKeys":["asPartialLocalPath","fun asPartialLocalPath(): String","dev.teogor.winds.api.model.Path.asPartialLocalPath"]},{"name":"fun betaRelease(version: Int): Version.VersionBuilder","description":"dev.teogor.winds.api.model.Version.VersionBuilder.betaRelease","location":"api/dev.teogor.winds.api.model/-version/-version-builder/beta-release.html","searchKeys":["betaRelease","fun betaRelease(version: Int): Version.VersionBuilder","dev.teogor.winds.api.model.Version.VersionBuilder.betaRelease"]},{"name":"fun build(): Version","description":"dev.teogor.winds.api.model.Version.VersionBuilder.build","location":"api/dev.teogor.winds.api.model/-version/-version-builder/build.html","searchKeys":["build","fun build(): Version","dev.teogor.winds.api.model.Version.VersionBuilder.build"]},{"name":"fun createVersion(major: Int, minor: Int, patch: Int, block: Version.VersionBuilder.() -> Unit = {}): Version","description":"dev.teogor.winds.ktx.createVersion","location":"api/dev.teogor.winds.ktx/create-version.html","searchKeys":["createVersion","fun createVersion(major: Int, minor: Int, patch: Int, block: Version.VersionBuilder.() -> Unit = {}): Version","dev.teogor.winds.ktx.createVersion"]},{"name":"fun default(type: KClass<out Person>): Person?","description":"dev.teogor.winds.api.Person.Companion.default","location":"api/dev.teogor.winds.api/-person/-companion/default.html","searchKeys":["default","fun default(type: KClass<out Person>): Person?","dev.teogor.winds.api.Person.Companion.default"]},{"name":"fun default(type: KClass<out Scm>): Scm?","description":"dev.teogor.winds.api.Scm.Companion.default","location":"api/dev.teogor.winds.api/-scm/-companion/default.html","searchKeys":["default","fun default(type: KClass<out Scm>): Scm?","dev.teogor.winds.api.Scm.Companion.default"]},{"name":"fun default(type: KClass<out TicketSystem>): TicketSystem?","description":"dev.teogor.winds.api.TicketSystem.Companion.default","location":"api/dev.teogor.winds.api/-ticket-system/-companion/default.html","searchKeys":["default","fun default(type: KClass<out TicketSystem>): TicketSystem?","dev.teogor.winds.api.TicketSystem.Companion.default"]},{"name":"fun fixPath(path: String): String","description":"dev.teogor.winds.api.model.Path.Companion.fixPath","location":"api/dev.teogor.winds.api.model/-path/-companion/fix-path.html","searchKeys":["fixPath","fun fixPath(path: String): String","dev.teogor.winds.api.model.Path.Companion.fixPath"]},{"name":"fun from(project: Project): Path","description":"dev.teogor.winds.api.model.Path.Companion.from","location":"api/dev.teogor.winds.api.model/-path/-companion/from.html","searchKeys":["from","fun from(project: Project): Path","dev.teogor.winds.api.model.Path.Companion.from"]},{"name":"fun from(root: Path, newPath: String): Path","description":"dev.teogor.winds.api.model.Path.Companion.from","location":"api/dev.teogor.winds.api.model/-path/-companion/from.html","searchKeys":["from","fun from(root: Path, newPath: String): Path","dev.teogor.winds.api.model.Path.Companion.from"]},{"name":"fun from(root: String, newPath: String): Path","description":"dev.teogor.winds.api.model.Path.Companion.from","location":"api/dev.teogor.winds.api.model/-path/-companion/from.html","searchKeys":["from","fun from(root: String, newPath: String): Path","dev.teogor.winds.api.model.Path.Companion.from"]},{"name":"fun from(versionString: String): Version?","description":"dev.teogor.winds.api.model.Version.Companion.from","location":"api/dev.teogor.winds.api.model/-version/-companion/from.html","searchKeys":["from","fun from(versionString: String): Version?","dev.teogor.winds.api.model.Version.Companion.from"]},{"name":"fun isRoot(): Boolean","description":"dev.teogor.winds.api.model.Path.isRoot","location":"api/dev.teogor.winds.api.model/-path/is-root.html","searchKeys":["isRoot","fun isRoot(): Boolean","dev.teogor.winds.api.model.Path.isRoot"]},{"name":"fun isUrl(): Boolean","description":"dev.teogor.winds.api.model.Path.isUrl","location":"api/dev.teogor.winds.api.model/-path/is-url.html","searchKeys":["isUrl","fun isUrl(): Boolean","dev.teogor.winds.api.model.Path.isUrl"]},{"name":"fun moduleMetadataException(message: String): Nothing","description":"dev.teogor.winds.api.util.moduleMetadataException","location":"api/dev.teogor.winds.api.util/module-metadata-exception.html","searchKeys":["moduleMetadataException","fun moduleMetadataException(message: String): Nothing","dev.teogor.winds.api.util.moduleMetadataException"]},{"name":"fun setIsDeprecated(): Version.VersionBuilder","description":"dev.teogor.winds.api.model.Version.VersionBuilder.setIsDeprecated","location":"api/dev.teogor.winds.api.model/-version/-version-builder/set-is-deprecated.html","searchKeys":["setIsDeprecated","fun setIsDeprecated(): Version.VersionBuilder","dev.teogor.winds.api.model.Version.VersionBuilder.setIsDeprecated"]},{"name":"fun toBuilder(): Version.VersionBuilder","description":"dev.teogor.winds.api.model.Version.toBuilder","location":"api/dev.teogor.winds.api.model/-version/to-builder.html","searchKeys":["toBuilder","fun toBuilder(): Version.VersionBuilder","dev.teogor.winds.api.model.Version.toBuilder"]},{"name":"fun toVanniktechSonatypeHost(): SonatypeHost","description":"dev.teogor.winds.api.SonatypeHost.toVanniktechSonatypeHost","location":"api/dev.teogor.winds.api/-sonatype-host/to-vanniktech-sonatype-host.html","searchKeys":["toVanniktechSonatypeHost","fun toVanniktechSonatypeHost(): SonatypeHost","dev.teogor.winds.api.SonatypeHost.toVanniktechSonatypeHost"]},{"name":"fun valueOf(value: String): ArtifactIdFormat","description":"dev.teogor.winds.api.ArtifactIdFormat.valueOf","location":"api/dev.teogor.winds.api/-artifact-id-format/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ArtifactIdFormat","dev.teogor.winds.api.ArtifactIdFormat.valueOf"]},{"name":"fun valueOf(value: String): DependencyType","description":"dev.teogor.winds.api.model.DependencyType.valueOf","location":"api/dev.teogor.winds.api.model/-dependency-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): DependencyType","dev.teogor.winds.api.model.DependencyType.valueOf"]},{"name":"fun valueOf(value: String): NameFormat","description":"dev.teogor.winds.api.NameFormat.valueOf","location":"api/dev.teogor.winds.api/-name-format/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): NameFormat","dev.teogor.winds.api.NameFormat.valueOf"]},{"name":"fun valueOf(value: String): ReleaseStatus","description":"dev.teogor.winds.api.ReleaseStatus.valueOf","location":"api/dev.teogor.winds.api/-release-status/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ReleaseStatus","dev.teogor.winds.api.ReleaseStatus.valueOf"]},{"name":"fun valueOf(value: String): SonatypeHost","description":"dev.teogor.winds.api.SonatypeHost.valueOf","location":"api/dev.teogor.winds.api/-sonatype-host/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): SonatypeHost","dev.teogor.winds.api.SonatypeHost.valueOf"]},{"name":"fun valueOf(value: String): WindsFeature","description":"dev.teogor.winds.api.model.WindsFeature.valueOf","location":"api/dev.teogor.winds.api.model/-winds-feature/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): WindsFeature","dev.teogor.winds.api.model.WindsFeature.valueOf"]},{"name":"fun values(): Array<ArtifactIdFormat>","description":"dev.teogor.winds.api.ArtifactIdFormat.values","location":"api/dev.teogor.winds.api/-artifact-id-format/values.html","searchKeys":["values","fun values(): Array<ArtifactIdFormat>","dev.teogor.winds.api.ArtifactIdFormat.values"]},{"name":"fun values(): Array<DependencyType>","description":"dev.teogor.winds.api.model.DependencyType.values","location":"api/dev.teogor.winds.api.model/-dependency-type/values.html","searchKeys":["values","fun values(): Array<DependencyType>","dev.teogor.winds.api.model.DependencyType.values"]},{"name":"fun values(): Array<NameFormat>","description":"dev.teogor.winds.api.NameFormat.values","location":"api/dev.teogor.winds.api/-name-format/values.html","searchKeys":["values","fun values(): Array<NameFormat>","dev.teogor.winds.api.NameFormat.values"]},{"name":"fun values(): Array<ReleaseStatus>","description":"dev.teogor.winds.api.ReleaseStatus.values","location":"api/dev.teogor.winds.api/-release-status/values.html","searchKeys":["values","fun values(): Array<ReleaseStatus>","dev.teogor.winds.api.ReleaseStatus.values"]},{"name":"fun values(): Array<SonatypeHost>","description":"dev.teogor.winds.api.SonatypeHost.values","location":"api/dev.teogor.winds.api/-sonatype-host/values.html","searchKeys":["values","fun values(): Array<SonatypeHost>","dev.teogor.winds.api.SonatypeHost.values"]},{"name":"fun values(): Array<WindsFeature>","description":"dev.teogor.winds.api.model.WindsFeature.values","location":"api/dev.teogor.winds.api.model/-winds-feature/values.html","searchKeys":["values","fun values(): Array<WindsFeature>","dev.teogor.winds.api.model.WindsFeature.values"]},{"name":"fun versionOf(block: Version.VersionBuilder.() -> Unit): Version","description":"dev.teogor.winds.ktx.versionOf","location":"api/dev.teogor.winds.ktx/version-of.html","searchKeys":["versionOf","fun versionOf(block: Version.VersionBuilder.() -> Unit): Version","dev.teogor.winds.ktx.versionOf"]},{"name":"fun versionQualifier(versionQualifier: Int): Version.VersionBuilder","description":"dev.teogor.winds.api.model.Version.VersionBuilder.versionQualifier","location":"api/dev.teogor.winds.api.model/-version/-version-builder/version-qualifier.html","searchKeys":["versionQualifier","fun versionQualifier(versionQualifier: Int): Version.VersionBuilder","dev.teogor.winds.api.model.Version.VersionBuilder.versionQualifier"]},{"name":"fun versionQualifierPadding(versionQualifierPadding: Int): Version.VersionBuilder","description":"dev.teogor.winds.api.model.Version.VersionBuilder.versionQualifierPadding","location":"api/dev.teogor.winds.api.model/-version/-version-builder/version-qualifier-padding.html","searchKeys":["versionQualifierPadding","fun versionQualifierPadding(versionQualifierPadding: Int): Version.VersionBuilder","dev.teogor.winds.api.model.Version.VersionBuilder.versionQualifierPadding"]},{"name":"fun writeMkDocs(mkDocsPath: String, section: String, version: String)","description":"dev.teogor.winds.api.docs.DocsModuleHandler.writeMkDocs","location":"api/dev.teogor.winds.api.docs/-docs-module-handler/write-mk-docs.html","searchKeys":["writeMkDocs","fun writeMkDocs(mkDocsPath: String, section: String, version: String)","dev.teogor.winds.api.docs.DocsModuleHandler.writeMkDocs"]},{"name":"infix fun File.directory(path: String): File","description":"dev.teogor.winds.gradle.tasks.BaseGeneratorTask.directory","location":"api/dev.teogor.winds.gradle.tasks/-base-generator-task/directory.html","searchKeys":["directory","infix fun File.directory(path: String): File","dev.teogor.winds.gradle.tasks.BaseGeneratorTask.directory"]},{"name":"infix fun File.directory(path: String): File","description":"dev.teogor.winds.ktx.directory","location":"api/dev.teogor.winds.ktx/directory.html","searchKeys":["directory","infix fun File.directory(path: String): File","dev.teogor.winds.ktx.directory"]},{"name":"infix fun File.file(path: String): File","description":"dev.teogor.winds.gradle.tasks.BaseGeneratorTask.file","location":"api/dev.teogor.winds.gradle.tasks/-base-generator-task/file.html","searchKeys":["file","infix fun File.file(path: String): File","dev.teogor.winds.gradle.tasks.BaseGeneratorTask.file"]},{"name":"infix fun File.file(path: String): File","description":"dev.teogor.winds.ktx.file","location":"api/dev.teogor.winds.ktx/file.html","searchKeys":["file","infix fun File.file(path: String): File","dev.teogor.winds.ktx.file"]},{"name":"infix fun File.read(block: BufferedReader.() -> Unit)","description":"dev.teogor.winds.gradle.tasks.BaseGeneratorTask.read","location":"api/dev.teogor.winds.gradle.tasks/-base-generator-task/read.html","searchKeys":["read","infix fun File.read(block: BufferedReader.() -> Unit)","dev.teogor.winds.gradle.tasks.BaseGeneratorTask.read"]},{"name":"infix fun File.read(block: BufferedReader.() -> Unit)","description":"dev.teogor.winds.ktx.read","location":"api/dev.teogor.winds.ktx/read.html","searchKeys":["read","infix fun File.read(block: BufferedReader.() -> Unit)","dev.teogor.winds.ktx.read"]},{"name":"infix fun File.write(block: BufferedWriter.() -> Unit)","description":"dev.teogor.winds.gradle.tasks.BaseGeneratorTask.write","location":"api/dev.teogor.winds.gradle.tasks/-base-generator-task/write.html","searchKeys":["write","infix fun File.write(block: BufferedWriter.() -> Unit)","dev.teogor.winds.gradle.tasks.BaseGeneratorTask.write"]},{"name":"infix fun File.write(block: BufferedWriter.() -> Unit)","description":"dev.teogor.winds.ktx.write","location":"api/dev.teogor.winds.ktx/write.html","searchKeys":["write","infix fun File.write(block: BufferedWriter.() -> Unit)","dev.teogor.winds.ktx.write"]},{"name":"inline fun <T : Person> ModuleMetadata.person(noinline block: T.() -> Unit)","description":"dev.teogor.winds.ktx.person","location":"api/dev.teogor.winds.ktx/person.html","searchKeys":["person","inline fun <T : Person> ModuleMetadata.person(noinline block: T.() -> Unit)","dev.teogor.winds.ktx.person"]},{"name":"inline fun <T : Person> default(): Person?","description":"dev.teogor.winds.api.Person.Companion.default","location":"api/dev.teogor.winds.api/-person/-companion/default.html","searchKeys":["default","inline fun <T : Person> default(): Person?","dev.teogor.winds.api.Person.Companion.default"]},{"name":"inline fun <T : Scm> ModuleMetadata.scm(noinline block: T.() -> Unit)","description":"dev.teogor.winds.ktx.scm","location":"api/dev.teogor.winds.ktx/scm.html","searchKeys":["scm","inline fun <T : Scm> ModuleMetadata.scm(noinline block: T.() -> Unit)","dev.teogor.winds.ktx.scm"]},{"name":"inline fun <T : Scm> default(): Scm?","description":"dev.teogor.winds.api.Scm.Companion.default","location":"api/dev.teogor.winds.api/-scm/-companion/default.html","searchKeys":["default","inline fun <T : Scm> default(): Scm?","dev.teogor.winds.api.Scm.Companion.default"]},{"name":"inline fun <T : TicketSystem> ModuleMetadata.ticketSystem(noinline block: T.() -> Unit)","description":"dev.teogor.winds.ktx.ticketSystem","location":"api/dev.teogor.winds.ktx/ticket-system.html","searchKeys":["ticketSystem","inline fun <T : TicketSystem> ModuleMetadata.ticketSystem(noinline block: T.() -> Unit)","dev.teogor.winds.ktx.ticketSystem"]},{"name":"inline fun <T : TicketSystem> default(): TicketSystem?","description":"dev.teogor.winds.api.TicketSystem.Companion.default","location":"api/dev.teogor.winds.api/-ticket-system/-companion/default.html","searchKeys":["default","inline fun <T : TicketSystem> default(): TicketSystem?","dev.teogor.winds.api.TicketSystem.Companion.default"]},{"name":"inline fun Project.processProjectsWithWinds(includeRoot: Boolean = false, crossinline action: Project.() -> Unit)","description":"dev.teogor.winds.ktx.processProjectsWithWinds","location":"api/dev.teogor.winds.ktx/process-projects-with-winds.html","searchKeys":["processProjectsWithWinds","inline fun Project.processProjectsWithWinds(includeRoot: Boolean = false, crossinline action: Project.() -> Unit)","dev.teogor.winds.ktx.processProjectsWithWinds"]},{"name":"inline operator fun <T> Winds.getValue(thisRef: Nothing?, property: KProperty<*>): T","description":"dev.teogor.winds.ktx.getValue","location":"api/dev.teogor.winds.ktx/get-value.html","searchKeys":["getValue","inline operator fun <T> Winds.getValue(thisRef: Nothing?, property: KProperty<*>): T","dev.teogor.winds.ktx.getValue"]},{"name":"interface BaseWindsPlugin : Plugin<Project> ","description":"dev.teogor.winds.gradle.BaseWindsPlugin","location":"api/dev.teogor.winds.gradle/-base-winds-plugin/index.html","searchKeys":["BaseWindsPlugin","interface BaseWindsPlugin : Plugin<Project> ","dev.teogor.winds.gradle.BaseWindsPlugin"]},{"name":"interface CodeGen","description":"dev.teogor.winds.api.CodeGen","location":"api/dev.teogor.winds.api/-code-gen/index.html","searchKeys":["CodeGen","interface CodeGen","dev.teogor.winds.api.CodeGen"]},{"name":"interface CodebaseOptions","description":"dev.teogor.winds.api.CodebaseOptions","location":"api/dev.teogor.winds.api/-codebase-options/index.html","searchKeys":["CodebaseOptions","interface CodebaseOptions","dev.teogor.winds.api.CodebaseOptions"]},{"name":"interface DocsGenerator : TaskBuilder","description":"dev.teogor.winds.api.DocsGenerator","location":"api/dev.teogor.winds.api/-docs-generator/index.html","searchKeys":["DocsGenerator","interface DocsGenerator : TaskBuilder","dev.teogor.winds.api.DocsGenerator"]},{"name":"interface DocumentationBuilder","description":"dev.teogor.winds.api.DocumentationBuilder","location":"api/dev.teogor.winds.api/-documentation-builder/index.html","searchKeys":["DocumentationBuilder","interface DocumentationBuilder","dev.teogor.winds.api.DocumentationBuilder"]},{"name":"interface Features","description":"dev.teogor.winds.api.Features","location":"api/dev.teogor.winds.api/-features/index.html","searchKeys":["Features","interface Features","dev.teogor.winds.api.Features"]},{"name":"interface ModuleMetadata","description":"dev.teogor.winds.api.ModuleMetadata","location":"api/dev.teogor.winds.api/-module-metadata/index.html","searchKeys":["ModuleMetadata","interface ModuleMetadata","dev.teogor.winds.api.ModuleMetadata"]},{"name":"interface Publishing","description":"dev.teogor.winds.api.Publishing","location":"api/dev.teogor.winds.api/-publishing/index.html","searchKeys":["Publishing","interface Publishing","dev.teogor.winds.api.Publishing"]},{"name":"interface PublishingOptions","description":"dev.teogor.winds.api.PublishingOptions","location":"api/dev.teogor.winds.api/-publishing-options/index.html","searchKeys":["PublishingOptions","interface PublishingOptions","dev.teogor.winds.api.PublishingOptions"]},{"name":"interface TaskBuilder","description":"dev.teogor.winds.api.TaskBuilder","location":"api/dev.teogor.winds.api/-task-builder/index.html","searchKeys":["TaskBuilder","interface TaskBuilder","dev.teogor.winds.api.TaskBuilder"]},{"name":"interface Winds","description":"dev.teogor.winds.api.Winds","location":"api/dev.teogor.winds.api/-winds/index.html","searchKeys":["Winds","interface Winds","dev.teogor.winds.api.Winds"]},{"name":"interface WindsFeatures","description":"dev.teogor.winds.api.WindsFeatures","location":"api/dev.teogor.winds.api/-winds-features/index.html","searchKeys":["WindsFeatures","interface WindsFeatures","dev.teogor.winds.api.WindsFeatures"]},{"name":"interface WorkflowSynthesizer : TaskBuilder","description":"dev.teogor.winds.api.WorkflowSynthesizer","location":"api/dev.teogor.winds.api/-workflow-synthesizer/index.html","searchKeys":["WorkflowSynthesizer","interface WorkflowSynthesizer : TaskBuilder","dev.teogor.winds.api.WorkflowSynthesizer"]},{"name":"object Binaries : Distribution","description":"dev.teogor.winds.api.Distribution.Binaries","location":"api/dev.teogor.winds.api/-distribution/-binaries/index.html","searchKeys":["Binaries","object Binaries : Distribution","dev.teogor.winds.api.Distribution.Binaries"]},{"name":"object Companion","description":"dev.teogor.winds.api.Person.Companion","location":"api/dev.teogor.winds.api/-person/-companion/index.html","searchKeys":["Companion","object Companion","dev.teogor.winds.api.Person.Companion"]},{"name":"object Companion","description":"dev.teogor.winds.api.Scm.Companion","location":"api/dev.teogor.winds.api/-scm/-companion/index.html","searchKeys":["Companion","object Companion","dev.teogor.winds.api.Scm.Companion"]},{"name":"object Companion","description":"dev.teogor.winds.api.TicketSystem.Companion","location":"api/dev.teogor.winds.api/-ticket-system/-companion/index.html","searchKeys":["Companion","object Companion","dev.teogor.winds.api.TicketSystem.Companion"]},{"name":"object Companion","description":"dev.teogor.winds.api.model.Path.Companion","location":"api/dev.teogor.winds.api.model/-path/-companion/index.html","searchKeys":["Companion","object Companion","dev.teogor.winds.api.model.Path.Companion"]},{"name":"object Companion","description":"dev.teogor.winds.api.model.Version.Companion","location":"api/dev.teogor.winds.api.model/-version/-companion/index.html","searchKeys":["Companion","object Companion","dev.teogor.winds.api.model.Version.Companion"]},{"name":"object Default : Scm","description":"dev.teogor.winds.api.Scm.Default","location":"api/dev.teogor.winds.api/-scm/-default/index.html","searchKeys":["Default","object Default : Scm","dev.teogor.winds.api.Scm.Default"]},{"name":"object Default : TicketSystem","description":"dev.teogor.winds.api.TicketSystem.Default","location":"api/dev.teogor.winds.api/-ticket-system/-default/index.html","searchKeys":["Default","object Default : TicketSystem","dev.teogor.winds.api.TicketSystem.Default"]},{"name":"object Doc : Distribution","description":"dev.teogor.winds.api.Distribution.Doc","location":"api/dev.teogor.winds.api/-distribution/-doc/index.html","searchKeys":["Doc","object Doc : Distribution","dev.teogor.winds.api.Distribution.Doc"]},{"name":"object Emojis","description":"dev.teogor.winds.api.util.Emojis","location":"api/dev.teogor.winds.api.util/-emojis/index.html","searchKeys":["Emojis","object Emojis","dev.teogor.winds.api.util.Emojis"]},{"name":"object None : License","description":"dev.teogor.winds.api.License.None","location":"api/dev.teogor.winds.api/-license/-none/index.html","searchKeys":["None","object None : License","dev.teogor.winds.api.License.None"]},{"name":"object Repo : Distribution","description":"dev.teogor.winds.api.Distribution.Repo","location":"api/dev.teogor.winds.api/-distribution/-repo/index.html","searchKeys":["Repo","object Repo : Distribution","dev.teogor.winds.api.Distribution.Repo"]},{"name":"object Source : Distribution","description":"dev.teogor.winds.api.Distribution.Source","location":"api/dev.teogor.winds.api/-distribution/-source/index.html","searchKeys":["Source","object Source : Distribution","dev.teogor.winds.api.Distribution.Source"]},{"name":"open class ModuleMetadataException(message: String) : RuntimeException","description":"dev.teogor.winds.api.util.ModuleMetadataException","location":"api/dev.teogor.winds.api.util/-module-metadata-exception/index.html","searchKeys":["ModuleMetadataException","open class ModuleMetadataException(message: String) : RuntimeException","dev.teogor.winds.api.util.ModuleMetadataException"]},{"name":"open fun hasVersionControl(): Boolean","description":"dev.teogor.winds.api.Scm.hasVersionControl","location":"api/dev.teogor.winds.api/-scm/has-version-control.html","searchKeys":["hasVersionControl","open fun hasVersionControl(): Boolean","dev.teogor.winds.api.Scm.hasVersionControl"]},{"name":"open fun isContributor(): Boolean","description":"dev.teogor.winds.api.Person.isContributor","location":"api/dev.teogor.winds.api/-person/is-contributor.html","searchKeys":["isContributor","open fun isContributor(): Boolean","dev.teogor.winds.api.Person.isContributor"]},{"name":"open fun isDeveloper(): Boolean","description":"dev.teogor.winds.api.Person.isDeveloper","location":"api/dev.teogor.winds.api/-person/is-developer.html","searchKeys":["isDeveloper","open fun isDeveloper(): Boolean","dev.teogor.winds.api.Person.isDeveloper"]},{"name":"open infix fun isEnabled(feature: WindsFeature): Boolean","description":"dev.teogor.winds.api.Winds.isEnabled","location":"api/dev.teogor.winds.api/-winds/is-enabled.html","searchKeys":["isEnabled","open infix fun isEnabled(feature: WindsFeature): Boolean","dev.teogor.winds.api.Winds.isEnabled"]},{"name":"open operator override fun compareTo(other: Version): Int","description":"dev.teogor.winds.api.model.Version.compareTo","location":"api/dev.teogor.winds.api.model/-version/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: Version): Int","dev.teogor.winds.api.model.Version.compareTo"]},{"name":"open override fun toString(): String","description":"dev.teogor.winds.api.model.Path.toString","location":"api/dev.teogor.winds.api.model/-path/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.teogor.winds.api.model.Path.toString"]},{"name":"open override fun toString(): String","description":"dev.teogor.winds.api.model.Version.toString","location":"api/dev.teogor.winds.api.model/-version/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.teogor.winds.api.model.Version.toString"]},{"name":"open override val abbreviation: String","description":"dev.teogor.winds.api.Distribution.Binaries.abbreviation","location":"api/dev.teogor.winds.api/-distribution/-binaries/abbreviation.html","searchKeys":["abbreviation","open override val abbreviation: String","dev.teogor.winds.api.Distribution.Binaries.abbreviation"]},{"name":"open override val abbreviation: String","description":"dev.teogor.winds.api.Distribution.Doc.abbreviation","location":"api/dev.teogor.winds.api/-distribution/-doc/abbreviation.html","searchKeys":["abbreviation","open override val abbreviation: String","dev.teogor.winds.api.Distribution.Doc.abbreviation"]},{"name":"open override val abbreviation: String","description":"dev.teogor.winds.api.Distribution.Repo.abbreviation","location":"api/dev.teogor.winds.api/-distribution/-repo/abbreviation.html","searchKeys":["abbreviation","open override val abbreviation: String","dev.teogor.winds.api.Distribution.Repo.abbreviation"]},{"name":"open override val abbreviation: String","description":"dev.teogor.winds.api.Distribution.Source.abbreviation","location":"api/dev.teogor.winds.api/-distribution/-source/abbreviation.html","searchKeys":["abbreviation","open override val abbreviation: String","dev.teogor.winds.api.Distribution.Source.abbreviation"]},{"name":"open override val connection: String","description":"dev.teogor.winds.api.Scm.Bitbucket.connection","location":"api/dev.teogor.winds.api/-scm/-bitbucket/connection.html","searchKeys":["connection","open override val connection: String","dev.teogor.winds.api.Scm.Bitbucket.connection"]},{"name":"open override val connection: String","description":"dev.teogor.winds.api.Scm.Custom.connection","location":"api/dev.teogor.winds.api/-scm/-custom/connection.html","searchKeys":["connection","open override val connection: String","dev.teogor.winds.api.Scm.Custom.connection"]},{"name":"open override val connection: String","description":"dev.teogor.winds.api.Scm.GitHub.connection","location":"api/dev.teogor.winds.api/-scm/-git-hub/connection.html","searchKeys":["connection","open override val connection: String","dev.teogor.winds.api.Scm.GitHub.connection"]},{"name":"open override val connection: String","description":"dev.teogor.winds.api.Scm.GitLab.connection","location":"api/dev.teogor.winds.api/-scm/-git-lab/connection.html","searchKeys":["connection","open override val connection: String","dev.teogor.winds.api.Scm.GitLab.connection"]},{"name":"open override val connection: String","description":"dev.teogor.winds.api.Scm.Local.connection","location":"api/dev.teogor.winds.api/-scm/-local/connection.html","searchKeys":["connection","open override val connection: String","dev.teogor.winds.api.Scm.Local.connection"]},{"name":"open override val date: Long","description":"dev.teogor.winds.api.model.BillOfMaterialsRecord.date","location":"api/dev.teogor.winds.api.model/-bill-of-materials-record/date.html","searchKeys":["date","open override val date: Long","dev.teogor.winds.api.model.BillOfMaterialsRecord.date"]},{"name":"open override val date: Long","description":"dev.teogor.winds.api.model.ModuleDependencyRecord.date","location":"api/dev.teogor.winds.api.model/-module-dependency-record/date.html","searchKeys":["date","open override val date: Long","dev.teogor.winds.api.model.ModuleDependencyRecord.date"]},{"name":"open override val developerConnection: String","description":"dev.teogor.winds.api.Scm.Bitbucket.developerConnection","location":"api/dev.teogor.winds.api/-scm/-bitbucket/developer-connection.html","searchKeys":["developerConnection","open override val developerConnection: String","dev.teogor.winds.api.Scm.Bitbucket.developerConnection"]},{"name":"open override val developerConnection: String","description":"dev.teogor.winds.api.Scm.Custom.developerConnection","location":"api/dev.teogor.winds.api/-scm/-custom/developer-connection.html","searchKeys":["developerConnection","open override val developerConnection: String","dev.teogor.winds.api.Scm.Custom.developerConnection"]},{"name":"open override val developerConnection: String","description":"dev.teogor.winds.api.Scm.GitHub.developerConnection","location":"api/dev.teogor.winds.api/-scm/-git-hub/developer-connection.html","searchKeys":["developerConnection","open override val developerConnection: String","dev.teogor.winds.api.Scm.GitHub.developerConnection"]},{"name":"open override val developerConnection: String","description":"dev.teogor.winds.api.Scm.GitLab.developerConnection","location":"api/dev.teogor.winds.api/-scm/-git-lab/developer-connection.html","searchKeys":["developerConnection","open override val developerConnection: String","dev.teogor.winds.api.Scm.GitLab.developerConnection"]},{"name":"open override val developerConnection: String","description":"dev.teogor.winds.api.Scm.Local.developerConnection","location":"api/dev.teogor.winds.api/-scm/-local/developer-connection.html","searchKeys":["developerConnection","open override val developerConnection: String","dev.teogor.winds.api.Scm.Local.developerConnection"]},{"name":"open override val distribution: Distribution","description":"dev.teogor.winds.api.License.None.distribution","location":"api/dev.teogor.winds.api/-license/-none/distribution.html","searchKeys":["distribution","open override val distribution: Distribution","dev.teogor.winds.api.License.None.distribution"]},{"name":"open override val name: String","description":"dev.teogor.winds.api.Distribution.Binaries.name","location":"api/dev.teogor.winds.api/-distribution/-binaries/name.html","searchKeys":["name","open override val name: String","dev.teogor.winds.api.Distribution.Binaries.name"]},{"name":"open override val name: String","description":"dev.teogor.winds.api.Distribution.Doc.name","location":"api/dev.teogor.winds.api/-distribution/-doc/name.html","searchKeys":["name","open override val name: String","dev.teogor.winds.api.Distribution.Doc.name"]},{"name":"open override val name: String","description":"dev.teogor.winds.api.Distribution.Repo.name","location":"api/dev.teogor.winds.api/-distribution/-repo/name.html","searchKeys":["name","open override val name: String","dev.teogor.winds.api.Distribution.Repo.name"]},{"name":"open override val name: String","description":"dev.teogor.winds.api.Distribution.Source.name","location":"api/dev.teogor.winds.api/-distribution/-source/name.html","searchKeys":["name","open override val name: String","dev.teogor.winds.api.Distribution.Source.name"]},{"name":"open override val name: String","description":"dev.teogor.winds.api.License.Apache2.name","location":"api/dev.teogor.winds.api/-license/-apache2/name.html","searchKeys":["name","open override val name: String","dev.teogor.winds.api.License.Apache2.name"]},{"name":"open override val name: String","description":"dev.teogor.winds.api.License.Custom.name","location":"api/dev.teogor.winds.api/-license/-custom/name.html","searchKeys":["name","open override val name: String","dev.teogor.winds.api.License.Custom.name"]},{"name":"open override val name: String","description":"dev.teogor.winds.api.License.GPLv3.name","location":"api/dev.teogor.winds.api/-license/-g-p-lv3/name.html","searchKeys":["name","open override val name: String","dev.teogor.winds.api.License.GPLv3.name"]},{"name":"open override val name: String","description":"dev.teogor.winds.api.License.MIT.name","location":"api/dev.teogor.winds.api/-license/-m-i-t/name.html","searchKeys":["name","open override val name: String","dev.teogor.winds.api.License.MIT.name"]},{"name":"open override val name: String","description":"dev.teogor.winds.api.License.None.name","location":"api/dev.teogor.winds.api/-license/-none/name.html","searchKeys":["name","open override val name: String","dev.teogor.winds.api.License.None.name"]},{"name":"open override val repositoryUrl: String","description":"dev.teogor.winds.api.Scm.Bitbucket.repositoryUrl","location":"api/dev.teogor.winds.api/-scm/-bitbucket/repository-url.html","searchKeys":["repositoryUrl","open override val repositoryUrl: String","dev.teogor.winds.api.Scm.Bitbucket.repositoryUrl"]},{"name":"open override val repositoryUrl: String","description":"dev.teogor.winds.api.Scm.Custom.repositoryUrl","location":"api/dev.teogor.winds.api/-scm/-custom/repository-url.html","searchKeys":["repositoryUrl","open override val repositoryUrl: String","dev.teogor.winds.api.Scm.Custom.repositoryUrl"]},{"name":"open override val repositoryUrl: String","description":"dev.teogor.winds.api.Scm.GitHub.repositoryUrl","location":"api/dev.teogor.winds.api/-scm/-git-hub/repository-url.html","searchKeys":["repositoryUrl","open override val repositoryUrl: String","dev.teogor.winds.api.Scm.GitHub.repositoryUrl"]},{"name":"open override val repositoryUrl: String","description":"dev.teogor.winds.api.Scm.GitLab.repositoryUrl","location":"api/dev.teogor.winds.api/-scm/-git-lab/repository-url.html","searchKeys":["repositoryUrl","open override val repositoryUrl: String","dev.teogor.winds.api.Scm.GitLab.repositoryUrl"]},{"name":"open override val repositoryUrl: String","description":"dev.teogor.winds.api.Scm.Local.repositoryUrl","location":"api/dev.teogor.winds.api/-scm/-local/repository-url.html","searchKeys":["repositoryUrl","open override val repositoryUrl: String","dev.teogor.winds.api.Scm.Local.repositoryUrl"]},{"name":"open override val system: String","description":"dev.teogor.winds.api.TicketSystem.Bugzilla.system","location":"api/dev.teogor.winds.api/-ticket-system/-bugzilla/system.html","searchKeys":["system","open override val system: String","dev.teogor.winds.api.TicketSystem.Bugzilla.system"]},{"name":"open override val system: String","description":"dev.teogor.winds.api.TicketSystem.GitHub.system","location":"api/dev.teogor.winds.api/-ticket-system/-git-hub/system.html","searchKeys":["system","open override val system: String","dev.teogor.winds.api.TicketSystem.GitHub.system"]},{"name":"open override val system: String","description":"dev.teogor.winds.api.TicketSystem.GitLab.system","location":"api/dev.teogor.winds.api/-ticket-system/-git-lab/system.html","searchKeys":["system","open override val system: String","dev.teogor.winds.api.TicketSystem.GitLab.system"]},{"name":"open override val system: String","description":"dev.teogor.winds.api.TicketSystem.Jira.system","location":"api/dev.teogor.winds.api/-ticket-system/-jira/system.html","searchKeys":["system","open override val system: String","dev.teogor.winds.api.TicketSystem.Jira.system"]},{"name":"open override val system: String","description":"dev.teogor.winds.api.TicketSystem.Redmine.system","location":"api/dev.teogor.winds.api/-ticket-system/-redmine/system.html","searchKeys":["system","open override val system: String","dev.teogor.winds.api.TicketSystem.Redmine.system"]},{"name":"open override val url: String","description":"dev.teogor.winds.api.License.Apache2.url","location":"api/dev.teogor.winds.api/-license/-apache2/url.html","searchKeys":["url","open override val url: String","dev.teogor.winds.api.License.Apache2.url"]},{"name":"open override val url: String","description":"dev.teogor.winds.api.License.Custom.url","location":"api/dev.teogor.winds.api/-license/-custom/url.html","searchKeys":["url","open override val url: String","dev.teogor.winds.api.License.Custom.url"]},{"name":"open override val url: String","description":"dev.teogor.winds.api.License.GPLv3.url","location":"api/dev.teogor.winds.api/-license/-g-p-lv3/url.html","searchKeys":["url","open override val url: String","dev.teogor.winds.api.License.GPLv3.url"]},{"name":"open override val url: String","description":"dev.teogor.winds.api.License.MIT.url","location":"api/dev.teogor.winds.api/-license/-m-i-t/url.html","searchKeys":["url","open override val url: String","dev.teogor.winds.api.License.MIT.url"]},{"name":"open override val url: String","description":"dev.teogor.winds.api.License.None.url","location":"api/dev.teogor.winds.api/-license/-none/url.html","searchKeys":["url","open override val url: String","dev.teogor.winds.api.License.None.url"]},{"name":"open override val url: String","description":"dev.teogor.winds.api.TicketSystem.Bugzilla.url","location":"api/dev.teogor.winds.api/-ticket-system/-bugzilla/url.html","searchKeys":["url","open override val url: String","dev.teogor.winds.api.TicketSystem.Bugzilla.url"]},{"name":"open override val url: String","description":"dev.teogor.winds.api.TicketSystem.GitHub.url","location":"api/dev.teogor.winds.api/-ticket-system/-git-hub/url.html","searchKeys":["url","open override val url: String","dev.teogor.winds.api.TicketSystem.GitHub.url"]},{"name":"open override val url: String","description":"dev.teogor.winds.api.TicketSystem.GitLab.url","location":"api/dev.teogor.winds.api/-ticket-system/-git-lab/url.html","searchKeys":["url","open override val url: String","dev.teogor.winds.api.TicketSystem.GitLab.url"]},{"name":"open override val url: String","description":"dev.teogor.winds.api.TicketSystem.Jira.url","location":"api/dev.teogor.winds.api/-ticket-system/-jira/url.html","searchKeys":["url","open override val url: String","dev.teogor.winds.api.TicketSystem.Jira.url"]},{"name":"open override val url: String","description":"dev.teogor.winds.api.TicketSystem.Redmine.url","location":"api/dev.teogor.winds.api/-ticket-system/-redmine/url.html","searchKeys":["url","open override val url: String","dev.teogor.winds.api.TicketSystem.Redmine.url"]},{"name":"open override val version: Version","description":"dev.teogor.winds.api.model.BillOfMaterialsRecord.version","location":"api/dev.teogor.winds.api.model/-bill-of-materials-record/version.html","searchKeys":["version","open override val version: Version","dev.teogor.winds.api.model.BillOfMaterialsRecord.version"]},{"name":"open override val version: Version","description":"dev.teogor.winds.api.model.ModuleDependencyRecord.version","location":"api/dev.teogor.winds.api.model/-module-dependency-record/version.html","searchKeys":["version","open override val version: Version","dev.teogor.winds.api.model.ModuleDependencyRecord.version"]},{"name":"open override var comments: String?","description":"dev.teogor.winds.api.License.Apache2.comments","location":"api/dev.teogor.winds.api/-license/-apache2/comments.html","searchKeys":["comments","open override var comments: String?","dev.teogor.winds.api.License.Apache2.comments"]},{"name":"open override var comments: String?","description":"dev.teogor.winds.api.License.Custom.comments","location":"api/dev.teogor.winds.api/-license/-custom/comments.html","searchKeys":["comments","open override var comments: String?","dev.teogor.winds.api.License.Custom.comments"]},{"name":"open override var comments: String?","description":"dev.teogor.winds.api.License.GPLv3.comments","location":"api/dev.teogor.winds.api/-license/-g-p-lv3/comments.html","searchKeys":["comments","open override var comments: String?","dev.teogor.winds.api.License.GPLv3.comments"]},{"name":"open override var comments: String?","description":"dev.teogor.winds.api.License.MIT.comments","location":"api/dev.teogor.winds.api/-license/-m-i-t/comments.html","searchKeys":["comments","open override var comments: String?","dev.teogor.winds.api.License.MIT.comments"]},{"name":"open override var comments: String?","description":"dev.teogor.winds.api.License.None.comments","location":"api/dev.teogor.winds.api/-license/-none/comments.html","searchKeys":["comments","open override var comments: String?","dev.teogor.winds.api.License.None.comments"]},{"name":"open override var connection: String","description":"dev.teogor.winds.api.Scm.CustomExplicit.connection","location":"api/dev.teogor.winds.api/-scm/-custom-explicit/connection.html","searchKeys":["connection","open override var connection: String","dev.teogor.winds.api.Scm.CustomExplicit.connection"]},{"name":"open override var connection: String","description":"dev.teogor.winds.api.Scm.Default.connection","location":"api/dev.teogor.winds.api/-scm/-default/connection.html","searchKeys":["connection","open override var connection: String","dev.teogor.winds.api.Scm.Default.connection"]},{"name":"open override var developerConnection: String","description":"dev.teogor.winds.api.Scm.CustomExplicit.developerConnection","location":"api/dev.teogor.winds.api/-scm/-custom-explicit/developer-connection.html","searchKeys":["developerConnection","open override var developerConnection: String","dev.teogor.winds.api.Scm.CustomExplicit.developerConnection"]},{"name":"open override var developerConnection: String","description":"dev.teogor.winds.api.Scm.Default.developerConnection","location":"api/dev.teogor.winds.api/-scm/-default/developer-connection.html","searchKeys":["developerConnection","open override var developerConnection: String","dev.teogor.winds.api.Scm.Default.developerConnection"]},{"name":"open override var distribution: Distribution","description":"dev.teogor.winds.api.License.Apache2.distribution","location":"api/dev.teogor.winds.api/-license/-apache2/distribution.html","searchKeys":["distribution","open override var distribution: Distribution","dev.teogor.winds.api.License.Apache2.distribution"]},{"name":"open override var distribution: Distribution","description":"dev.teogor.winds.api.License.Custom.distribution","location":"api/dev.teogor.winds.api/-license/-custom/distribution.html","searchKeys":["distribution","open override var distribution: Distribution","dev.teogor.winds.api.License.Custom.distribution"]},{"name":"open override var distribution: Distribution","description":"dev.teogor.winds.api.License.GPLv3.distribution","location":"api/dev.teogor.winds.api/-license/-g-p-lv3/distribution.html","searchKeys":["distribution","open override var distribution: Distribution","dev.teogor.winds.api.License.GPLv3.distribution"]},{"name":"open override var distribution: Distribution","description":"dev.teogor.winds.api.License.MIT.distribution","location":"api/dev.teogor.winds.api/-license/-m-i-t/distribution.html","searchKeys":["distribution","open override var distribution: Distribution","dev.teogor.winds.api.License.MIT.distribution"]},{"name":"open override var email: String","description":"dev.teogor.winds.api.Person.Contributor.email","location":"api/dev.teogor.winds.api/-person/-contributor/email.html","searchKeys":["email","open override var email: String","dev.teogor.winds.api.Person.Contributor.email"]},{"name":"open override var email: String","description":"dev.teogor.winds.api.Person.Developer.email","location":"api/dev.teogor.winds.api/-person/-developer/email.html","searchKeys":["email","open override var email: String","dev.teogor.winds.api.Person.Developer.email"]},{"name":"open override var email: String","description":"dev.teogor.winds.api.Person.DeveloperContributor.email","location":"api/dev.teogor.winds.api/-person/-developer-contributor/email.html","searchKeys":["email","open override var email: String","dev.teogor.winds.api.Person.DeveloperContributor.email"]},{"name":"open override var name: String","description":"dev.teogor.winds.api.Person.Contributor.name","location":"api/dev.teogor.winds.api/-person/-contributor/name.html","searchKeys":["name","open override var name: String","dev.teogor.winds.api.Person.Contributor.name"]},{"name":"open override var name: String","description":"dev.teogor.winds.api.Person.Developer.name","location":"api/dev.teogor.winds.api/-person/-developer/name.html","searchKeys":["name","open override var name: String","dev.teogor.winds.api.Person.Developer.name"]},{"name":"open override var name: String","description":"dev.teogor.winds.api.Person.DeveloperContributor.name","location":"api/dev.teogor.winds.api/-person/-developer-contributor/name.html","searchKeys":["name","open override var name: String","dev.teogor.winds.api.Person.DeveloperContributor.name"]},{"name":"open override var organization: String","description":"dev.teogor.winds.api.Person.Contributor.organization","location":"api/dev.teogor.winds.api/-person/-contributor/organization.html","searchKeys":["organization","open override var organization: String","dev.teogor.winds.api.Person.Contributor.organization"]},{"name":"open override var organization: String","description":"dev.teogor.winds.api.Person.Developer.organization","location":"api/dev.teogor.winds.api/-person/-developer/organization.html","searchKeys":["organization","open override var organization: String","dev.teogor.winds.api.Person.Developer.organization"]},{"name":"open override var organization: String","description":"dev.teogor.winds.api.Person.DeveloperContributor.organization","location":"api/dev.teogor.winds.api/-person/-developer-contributor/organization.html","searchKeys":["organization","open override var organization: String","dev.teogor.winds.api.Person.DeveloperContributor.organization"]},{"name":"open override var organizationUrl: String","description":"dev.teogor.winds.api.Person.Contributor.organizationUrl","location":"api/dev.teogor.winds.api/-person/-contributor/organization-url.html","searchKeys":["organizationUrl","open override var organizationUrl: String","dev.teogor.winds.api.Person.Contributor.organizationUrl"]},{"name":"open override var organizationUrl: String","description":"dev.teogor.winds.api.Person.Developer.organizationUrl","location":"api/dev.teogor.winds.api/-person/-developer/organization-url.html","searchKeys":["organizationUrl","open override var organizationUrl: String","dev.teogor.winds.api.Person.Developer.organizationUrl"]},{"name":"open override var organizationUrl: String","description":"dev.teogor.winds.api.Person.DeveloperContributor.organizationUrl","location":"api/dev.teogor.winds.api/-person/-developer-contributor/organization-url.html","searchKeys":["organizationUrl","open override var organizationUrl: String","dev.teogor.winds.api.Person.DeveloperContributor.organizationUrl"]},{"name":"open override var owner: String","description":"dev.teogor.winds.api.Scm.Bitbucket.owner","location":"api/dev.teogor.winds.api/-scm/-bitbucket/owner.html","searchKeys":["owner","open override var owner: String","dev.teogor.winds.api.Scm.Bitbucket.owner"]},{"name":"open override var owner: String","description":"dev.teogor.winds.api.Scm.Custom.owner","location":"api/dev.teogor.winds.api/-scm/-custom/owner.html","searchKeys":["owner","open override var owner: String","dev.teogor.winds.api.Scm.Custom.owner"]},{"name":"open override var owner: String","description":"dev.teogor.winds.api.Scm.CustomExplicit.owner","location":"api/dev.teogor.winds.api/-scm/-custom-explicit/owner.html","searchKeys":["owner","open override var owner: String","dev.teogor.winds.api.Scm.CustomExplicit.owner"]},{"name":"open override var owner: String","description":"dev.teogor.winds.api.Scm.Default.owner","location":"api/dev.teogor.winds.api/-scm/-default/owner.html","searchKeys":["owner","open override var owner: String","dev.teogor.winds.api.Scm.Default.owner"]},{"name":"open override var owner: String","description":"dev.teogor.winds.api.Scm.GitHub.owner","location":"api/dev.teogor.winds.api/-scm/-git-hub/owner.html","searchKeys":["owner","open override var owner: String","dev.teogor.winds.api.Scm.GitHub.owner"]},{"name":"open override var owner: String","description":"dev.teogor.winds.api.Scm.GitLab.owner","location":"api/dev.teogor.winds.api/-scm/-git-lab/owner.html","searchKeys":["owner","open override var owner: String","dev.teogor.winds.api.Scm.GitLab.owner"]},{"name":"open override var owner: String","description":"dev.teogor.winds.api.Scm.Local.owner","location":"api/dev.teogor.winds.api/-scm/-local/owner.html","searchKeys":["owner","open override var owner: String","dev.teogor.winds.api.Scm.Local.owner"]},{"name":"open override var properties: Map<String, String>","description":"dev.teogor.winds.api.Person.Contributor.properties","location":"api/dev.teogor.winds.api/-person/-contributor/properties.html","searchKeys":["properties","open override var properties: Map<String, String>","dev.teogor.winds.api.Person.Contributor.properties"]},{"name":"open override var properties: Map<String, String>","description":"dev.teogor.winds.api.Person.Developer.properties","location":"api/dev.teogor.winds.api/-person/-developer/properties.html","searchKeys":["properties","open override var properties: Map<String, String>","dev.teogor.winds.api.Person.Developer.properties"]},{"name":"open override var properties: Map<String, String>","description":"dev.teogor.winds.api.Person.DeveloperContributor.properties","location":"api/dev.teogor.winds.api/-person/-developer-contributor/properties.html","searchKeys":["properties","open override var properties: Map<String, String>","dev.teogor.winds.api.Person.DeveloperContributor.properties"]},{"name":"open override var repository: String","description":"dev.teogor.winds.api.Scm.Bitbucket.repository","location":"api/dev.teogor.winds.api/-scm/-bitbucket/repository.html","searchKeys":["repository","open override var repository: String","dev.teogor.winds.api.Scm.Bitbucket.repository"]},{"name":"open override var repository: String","description":"dev.teogor.winds.api.Scm.Custom.repository","location":"api/dev.teogor.winds.api/-scm/-custom/repository.html","searchKeys":["repository","open override var repository: String","dev.teogor.winds.api.Scm.Custom.repository"]},{"name":"open override var repository: String","description":"dev.teogor.winds.api.Scm.CustomExplicit.repository","location":"api/dev.teogor.winds.api/-scm/-custom-explicit/repository.html","searchKeys":["repository","open override var repository: String","dev.teogor.winds.api.Scm.CustomExplicit.repository"]},{"name":"open override var repository: String","description":"dev.teogor.winds.api.Scm.Default.repository","location":"api/dev.teogor.winds.api/-scm/-default/repository.html","searchKeys":["repository","open override var repository: String","dev.teogor.winds.api.Scm.Default.repository"]},{"name":"open override var repository: String","description":"dev.teogor.winds.api.Scm.GitHub.repository","location":"api/dev.teogor.winds.api/-scm/-git-hub/repository.html","searchKeys":["repository","open override var repository: String","dev.teogor.winds.api.Scm.GitHub.repository"]},{"name":"open override var repository: String","description":"dev.teogor.winds.api.Scm.GitLab.repository","location":"api/dev.teogor.winds.api/-scm/-git-lab/repository.html","searchKeys":["repository","open override var repository: String","dev.teogor.winds.api.Scm.GitLab.repository"]},{"name":"open override var repository: String","description":"dev.teogor.winds.api.Scm.Local.repository","location":"api/dev.teogor.winds.api/-scm/-local/repository.html","searchKeys":["repository","open override var repository: String","dev.teogor.winds.api.Scm.Local.repository"]},{"name":"open override var repositoryUrl: String","description":"dev.teogor.winds.api.Scm.CustomExplicit.repositoryUrl","location":"api/dev.teogor.winds.api/-scm/-custom-explicit/repository-url.html","searchKeys":["repositoryUrl","open override var repositoryUrl: String","dev.teogor.winds.api.Scm.CustomExplicit.repositoryUrl"]},{"name":"open override var repositoryUrl: String","description":"dev.teogor.winds.api.Scm.Default.repositoryUrl","location":"api/dev.teogor.winds.api/-scm/-default/repository-url.html","searchKeys":["repositoryUrl","open override var repositoryUrl: String","dev.teogor.winds.api.Scm.Default.repositoryUrl"]},{"name":"open override var roles: List<String>","description":"dev.teogor.winds.api.Person.Contributor.roles","location":"api/dev.teogor.winds.api/-person/-contributor/roles.html","searchKeys":["roles","open override var roles: List<String>","dev.teogor.winds.api.Person.Contributor.roles"]},{"name":"open override var roles: List<String>","description":"dev.teogor.winds.api.Person.Developer.roles","location":"api/dev.teogor.winds.api/-person/-developer/roles.html","searchKeys":["roles","open override var roles: List<String>","dev.teogor.winds.api.Person.Developer.roles"]},{"name":"open override var roles: List<String>","description":"dev.teogor.winds.api.Person.DeveloperContributor.roles","location":"api/dev.teogor.winds.api/-person/-developer-contributor/roles.html","searchKeys":["roles","open override var roles: List<String>","dev.teogor.winds.api.Person.DeveloperContributor.roles"]},{"name":"open override var system: String","description":"dev.teogor.winds.api.TicketSystem.Default.system","location":"api/dev.teogor.winds.api/-ticket-system/-default/system.html","searchKeys":["system","open override var system: String","dev.teogor.winds.api.TicketSystem.Default.system"]},{"name":"open override var timezone: String","description":"dev.teogor.winds.api.Person.Contributor.timezone","location":"api/dev.teogor.winds.api/-person/-contributor/timezone.html","searchKeys":["timezone","open override var timezone: String","dev.teogor.winds.api.Person.Contributor.timezone"]},{"name":"open override var timezone: String","description":"dev.teogor.winds.api.Person.Developer.timezone","location":"api/dev.teogor.winds.api/-person/-developer/timezone.html","searchKeys":["timezone","open override var timezone: String","dev.teogor.winds.api.Person.Developer.timezone"]},{"name":"open override var timezone: String","description":"dev.teogor.winds.api.Person.DeveloperContributor.timezone","location":"api/dev.teogor.winds.api/-person/-developer-contributor/timezone.html","searchKeys":["timezone","open override var timezone: String","dev.teogor.winds.api.Person.DeveloperContributor.timezone"]},{"name":"open override var url: String","description":"dev.teogor.winds.api.Person.Contributor.url","location":"api/dev.teogor.winds.api/-person/-contributor/url.html","searchKeys":["url","open override var url: String","dev.teogor.winds.api.Person.Contributor.url"]},{"name":"open override var url: String","description":"dev.teogor.winds.api.Person.Developer.url","location":"api/dev.teogor.winds.api/-person/-developer/url.html","searchKeys":["url","open override var url: String","dev.teogor.winds.api.Person.Developer.url"]},{"name":"open override var url: String","description":"dev.teogor.winds.api.Person.DeveloperContributor.url","location":"api/dev.teogor.winds.api/-person/-developer-contributor/url.html","searchKeys":["url","open override var url: String","dev.teogor.winds.api.Person.DeveloperContributor.url"]},{"name":"open override var url: String","description":"dev.teogor.winds.api.TicketSystem.Default.url","location":"api/dev.teogor.winds.api/-ticket-system/-default/url.html","searchKeys":["url","open override var url: String","dev.teogor.winds.api.TicketSystem.Default.url"]},{"name":"open val date: Long","description":"dev.teogor.winds.api.model.VersionedDependencyRecord.date","location":"api/dev.teogor.winds.api.model/-versioned-dependency-record/date.html","searchKeys":["date","open val date: Long","dev.teogor.winds.api.model.VersionedDependencyRecord.date"]},{"name":"open val version: Version","description":"dev.teogor.winds.api.model.VersionedDependencyRecord.version","location":"api/dev.teogor.winds.api.model/-versioned-dependency-record/version.html","searchKeys":["version","open val version: Version","dev.teogor.winds.api.model.VersionedDependencyRecord.version"]},{"name":"sealed interface DependencyDefinition","description":"dev.teogor.winds.api.model.DependencyDefinition","location":"api/dev.teogor.winds.api.model/-dependency-definition/index.html","searchKeys":["DependencyDefinition","sealed interface DependencyDefinition","dev.teogor.winds.api.model.DependencyDefinition"]},{"name":"sealed interface Distribution","description":"dev.teogor.winds.api.Distribution","location":"api/dev.teogor.winds.api/-distribution/index.html","searchKeys":["Distribution","sealed interface Distribution","dev.teogor.winds.api.Distribution"]},{"name":"sealed interface License","description":"dev.teogor.winds.api.License","location":"api/dev.teogor.winds.api/-license/index.html","searchKeys":["License","sealed interface License","dev.teogor.winds.api.License"]},{"name":"sealed interface Person","description":"dev.teogor.winds.api.Person","location":"api/dev.teogor.winds.api/-person/index.html","searchKeys":["Person","sealed interface Person","dev.teogor.winds.api.Person"]},{"name":"sealed interface Scm","description":"dev.teogor.winds.api.Scm","location":"api/dev.teogor.winds.api/-scm/index.html","searchKeys":["Scm","sealed interface Scm","dev.teogor.winds.api.Scm"]},{"name":"sealed interface TicketSystem","description":"dev.teogor.winds.api.TicketSystem","location":"api/dev.teogor.winds.api/-ticket-system/index.html","searchKeys":["TicketSystem","sealed interface TicketSystem","dev.teogor.winds.api.TicketSystem"]},{"name":"typealias Emoji = String","description":"dev.teogor.winds.api.util.Emoji","location":"api/dev.teogor.winds.api.util/-emoji/index.html","searchKeys":["Emoji","typealias Emoji = String","dev.teogor.winds.api.util.Emoji"]},{"name":"val absolutePath: String","description":"dev.teogor.winds.api.model.Path.absolutePath","location":"api/dev.teogor.winds.api.model/-path/absolute-path.html","searchKeys":["absolutePath","val absolutePath: String","dev.teogor.winds.api.model.Path.absolutePath"]},{"name":"val artifact: ArtifactDescriptor","description":"dev.teogor.winds.api.model.ModuleDescriptor.artifact","location":"api/dev.teogor.winds.api.model/-module-descriptor/artifact.html","searchKeys":["artifact","val artifact: ArtifactDescriptor","dev.teogor.winds.api.model.ModuleDescriptor.artifact"]},{"name":"val artifact: String","description":"dev.teogor.winds.api.model.Dependency.artifact","location":"api/dev.teogor.winds.api.model/-dependency/artifact.html","searchKeys":["artifact","val artifact: String","dev.teogor.winds.api.model.Dependency.artifact"]},{"name":"val artifactId: String","description":"dev.teogor.winds.api.ArtifactDescriptor.artifactId","location":"api/dev.teogor.winds.api/-artifact-descriptor/artifact-id.html","searchKeys":["artifactId","val artifactId: String","dev.teogor.winds.api.ArtifactDescriptor.artifactId"]},{"name":"val artifactId: String","description":"dev.teogor.winds.api.model.ModuleMetadataDefault.artifactId","location":"api/dev.teogor.winds.api.model/-module-metadata-default/artifact-id.html","searchKeys":["artifactId","val artifactId: String","dev.teogor.winds.api.model.ModuleMetadataDefault.artifactId"]},{"name":"val artifactNames: List<String>","description":"dev.teogor.winds.api.ArtifactDescriptor.artifactNames","location":"api/dev.teogor.winds.api/-artifact-descriptor/artifact-names.html","searchKeys":["artifactNames","val artifactNames: List<String>","dev.teogor.winds.api.ArtifactDescriptor.artifactNames"]},{"name":"val artifacts: List<ArtifactDescriptor>","description":"dev.teogor.winds.api.ArtifactDescriptor.artifacts","location":"api/dev.teogor.winds.api/-artifact-descriptor/artifacts.html","searchKeys":["artifacts","val artifacts: List<ArtifactDescriptor>","dev.teogor.winds.api.ArtifactDescriptor.artifacts"]},{"name":"val canBePublished: Boolean","description":"dev.teogor.winds.api.model.ModuleMetadataDefault.canBePublished","location":"api/dev.teogor.winds.api.model/-module-metadata-default/can-be-published.html","searchKeys":["canBePublished","val canBePublished: Boolean","dev.teogor.winds.api.model.ModuleMetadataDefault.canBePublished"]},{"name":"val completeName: String","description":"dev.teogor.winds.api.ArtifactDescriptor.completeName","location":"api/dev.teogor.winds.api/-artifact-descriptor/complete-name.html","searchKeys":["completeName","val completeName: String","dev.teogor.winds.api.ArtifactDescriptor.completeName"]},{"name":"val completeName: String","description":"dev.teogor.winds.api.model.ModuleDescriptor.completeName","location":"api/dev.teogor.winds.api.model/-module-descriptor/complete-name.html","searchKeys":["completeName","val completeName: String","dev.teogor.winds.api.model.ModuleDescriptor.completeName"]},{"name":"val completeName: String","description":"dev.teogor.winds.api.model.ModuleMetadataDefault.completeName","location":"api/dev.teogor.winds.api.model/-module-metadata-default/complete-name.html","searchKeys":["completeName","val completeName: String","dev.teogor.winds.api.model.ModuleMetadataDefault.completeName"]},{"name":"val coordinates: String","description":"dev.teogor.winds.api.ArtifactDescriptor.coordinates","location":"api/dev.teogor.winds.api/-artifact-descriptor/coordinates.html","searchKeys":["coordinates","val coordinates: String","dev.teogor.winds.api.ArtifactDescriptor.coordinates"]},{"name":"val date: Long","description":"dev.teogor.winds.api.model.DependencyBundle.date","location":"api/dev.teogor.winds.api.model/-dependency-bundle/date.html","searchKeys":["date","val date: Long","dev.teogor.winds.api.model.DependencyBundle.date"]},{"name":"val date: Long","description":"dev.teogor.winds.api.model.ModuleDependency.date","location":"api/dev.teogor.winds.api.model/-module-dependency/date.html","searchKeys":["date","val date: Long","dev.teogor.winds.api.model.ModuleDependency.date"]},{"name":"val dateFormatted: String","description":"dev.teogor.winds.api.model.VersionedDependencyRecord.dateFormatted","location":"api/dev.teogor.winds.api.model/-versioned-dependency-record/date-formatted.html","searchKeys":["dateFormatted","val dateFormatted: String","dev.teogor.winds.api.model.VersionedDependencyRecord.dateFormatted"]},{"name":"val dependencies: List<ArtifactDescriptor>","description":"dev.teogor.winds.api.model.ModuleDescriptor.dependencies","location":"api/dev.teogor.winds.api.model/-module-descriptor/dependencies.html","searchKeys":["dependencies","val dependencies: List<ArtifactDescriptor>","dev.teogor.winds.api.model.ModuleDescriptor.dependencies"]},{"name":"val description: String?","description":"dev.teogor.winds.api.model.ModuleDescriptor.description","location":"api/dev.teogor.winds.api.model/-module-descriptor/description.html","searchKeys":["description","val description: String?","dev.teogor.winds.api.model.ModuleDescriptor.description"]},{"name":"val documentationBuilder: DocumentationBuilder","description":"dev.teogor.winds.api.model.ModuleDescriptor.documentationBuilder","location":"api/dev.teogor.winds.api.model/-module-descriptor/documentation-builder.html","searchKeys":["documentationBuilder","val documentationBuilder: DocumentationBuilder","dev.teogor.winds.api.model.ModuleDescriptor.documentationBuilder"]},{"name":"val entries: EnumEntries<ArtifactIdFormat>","description":"dev.teogor.winds.api.ArtifactIdFormat.entries","location":"api/dev.teogor.winds.api/-artifact-id-format/entries.html","searchKeys":["entries","val entries: EnumEntries<ArtifactIdFormat>","dev.teogor.winds.api.ArtifactIdFormat.entries"]},{"name":"val entries: EnumEntries<DependencyType>","description":"dev.teogor.winds.api.model.DependencyType.entries","location":"api/dev.teogor.winds.api.model/-dependency-type/entries.html","searchKeys":["entries","val entries: EnumEntries<DependencyType>","dev.teogor.winds.api.model.DependencyType.entries"]},{"name":"val entries: EnumEntries<NameFormat>","description":"dev.teogor.winds.api.NameFormat.entries","location":"api/dev.teogor.winds.api/-name-format/entries.html","searchKeys":["entries","val entries: EnumEntries<NameFormat>","dev.teogor.winds.api.NameFormat.entries"]},{"name":"val entries: EnumEntries<ReleaseStatus>","description":"dev.teogor.winds.api.ReleaseStatus.entries","location":"api/dev.teogor.winds.api/-release-status/entries.html","searchKeys":["entries","val entries: EnumEntries<ReleaseStatus>","dev.teogor.winds.api.ReleaseStatus.entries"]},{"name":"val entries: EnumEntries<SonatypeHost>","description":"dev.teogor.winds.api.SonatypeHost.entries","location":"api/dev.teogor.winds.api/-sonatype-host/entries.html","searchKeys":["entries","val entries: EnumEntries<SonatypeHost>","dev.teogor.winds.api.SonatypeHost.entries"]},{"name":"val entries: EnumEntries<WindsFeature>","description":"dev.teogor.winds.api.model.WindsFeature.entries","location":"api/dev.teogor.winds.api.model/-winds-feature/entries.html","searchKeys":["entries","val entries: EnumEntries<WindsFeature>","dev.teogor.winds.api.model.WindsFeature.entries"]},{"name":"val group: String","description":"dev.teogor.winds.api.model.Dependency.group","location":"api/dev.teogor.winds.api.model/-dependency/group.html","searchKeys":["group","val group: String","dev.teogor.winds.api.model.Dependency.group"]},{"name":"val isAlphaRelease: Boolean","description":"dev.teogor.winds.api.model.Version.isAlphaRelease","location":"api/dev.teogor.winds.api.model/-version/is-alpha-release.html","searchKeys":["isAlphaRelease","val isAlphaRelease: Boolean","dev.teogor.winds.api.model.Version.isAlphaRelease"]},{"name":"val isBetaRelease: Boolean","description":"dev.teogor.winds.api.model.Version.isBetaRelease","location":"api/dev.teogor.winds.api.model/-version/is-beta-release.html","searchKeys":["isBetaRelease","val isBetaRelease: Boolean","dev.teogor.winds.api.model.Version.isBetaRelease"]},{"name":"val isBom: Boolean","description":"dev.teogor.winds.api.model.ModuleDescriptor.isBom","location":"api/dev.teogor.winds.api.model/-module-descriptor/is-bom.html","searchKeys":["isBom","val isBom: Boolean","dev.teogor.winds.api.model.ModuleDescriptor.isBom"]},{"name":"val isCentralPortal: Boolean","description":"dev.teogor.winds.api.SonatypeHost.isCentralPortal","location":"api/dev.teogor.winds.api/-sonatype-host/is-central-portal.html","searchKeys":["isCentralPortal","val isCentralPortal: Boolean","dev.teogor.winds.api.SonatypeHost.isCentralPortal"]},{"name":"val isPlugin: Boolean","description":"dev.teogor.winds.api.model.ModuleDescriptor.isPlugin","location":"api/dev.teogor.winds.api.model/-module-descriptor/is-plugin.html","searchKeys":["isPlugin","val isPlugin: Boolean","dev.teogor.winds.api.model.ModuleDescriptor.isPlugin"]},{"name":"val major: Int","description":"dev.teogor.winds.api.model.Version.major","location":"api/dev.teogor.winds.api.model/-version/major.html","searchKeys":["major","val major: Int","dev.teogor.winds.api.model.Version.major"]},{"name":"val minor: Int","description":"dev.teogor.winds.api.model.Version.minor","location":"api/dev.teogor.winds.api.model/-version/minor.html","searchKeys":["minor","val minor: Int","dev.teogor.winds.api.model.Version.minor"]},{"name":"val module: String","description":"dev.teogor.winds.api.ArtifactDescriptor.module","location":"api/dev.teogor.winds.api/-artifact-descriptor/module.html","searchKeys":["module","val module: String","dev.teogor.winds.api.ArtifactDescriptor.module"]},{"name":"val module: String","description":"dev.teogor.winds.api.model.DependencyBundle.module","location":"api/dev.teogor.winds.api.model/-dependency-bundle/module.html","searchKeys":["module","val module: String","dev.teogor.winds.api.model.DependencyBundle.module"]},{"name":"val module: String","description":"dev.teogor.winds.api.model.ModuleDependency.module","location":"api/dev.teogor.winds.api.model/-module-dependency/module.html","searchKeys":["module","val module: String","dev.teogor.winds.api.model.ModuleDependency.module"]},{"name":"val module: String","description":"dev.teogor.winds.api.model.ModuleDependencyRecord.module","location":"api/dev.teogor.winds.api.model/-module-dependency-record/module.html","searchKeys":["module","val module: String","dev.teogor.winds.api.model.ModuleDependencyRecord.module"]},{"name":"val modulePath: String","description":"dev.teogor.winds.api.model.LocalProjectDependency.modulePath","location":"api/dev.teogor.winds.api.model/-local-project-dependency/module-path.html","searchKeys":["modulePath","val modulePath: String","dev.teogor.winds.api.model.LocalProjectDependency.modulePath"]},{"name":"val name: String","description":"dev.teogor.winds.api.model.ModuleDescriptor.name","location":"api/dev.teogor.winds.api.model/-module-descriptor/name.html","searchKeys":["name","val name: String","dev.teogor.winds.api.model.ModuleDescriptor.name"]},{"name":"val name: String","description":"dev.teogor.winds.api.model.ModuleMetadataDefault.name","location":"api/dev.teogor.winds.api.model/-module-metadata-default/name.html","searchKeys":["name","val name: String","dev.teogor.winds.api.model.ModuleMetadataDefault.name"]},{"name":"val patch: Int","description":"dev.teogor.winds.api.model.Version.patch","location":"api/dev.teogor.winds.api.model/-version/patch.html","searchKeys":["patch","val patch: Int","dev.teogor.winds.api.model.Version.patch"]},{"name":"val path: Path","description":"dev.teogor.winds.api.model.ModuleDescriptor.path","location":"api/dev.teogor.winds.api.model/-module-descriptor/path.html","searchKeys":["path","val path: Path","dev.teogor.winds.api.model.ModuleDescriptor.path"]},{"name":"val projectName: String","description":"dev.teogor.winds.api.model.LocalProjectDependency.projectName","location":"api/dev.teogor.winds.api.model/-local-project-dependency/project-name.html","searchKeys":["projectName","val projectName: String","dev.teogor.winds.api.model.LocalProjectDependency.projectName"]},{"name":"val publish: Boolean","description":"dev.teogor.winds.api.model.ModuleDescriptor.publish","location":"api/dev.teogor.winds.api.model/-module-descriptor/publish.html","searchKeys":["publish","val publish: Boolean","dev.teogor.winds.api.model.ModuleDescriptor.publish"]},{"name":"val rootUrl: String","description":"dev.teogor.winds.api.SonatypeHost.rootUrl","location":"api/dev.teogor.winds.api/-sonatype-host/root-url.html","searchKeys":["rootUrl","val rootUrl: String","dev.teogor.winds.api.SonatypeHost.rootUrl"]},{"name":"val scm: Scm?","description":"dev.teogor.winds.api.model.ModuleDescriptor.scm","location":"api/dev.teogor.winds.api.model/-module-descriptor/scm.html","searchKeys":["scm","val scm: Scm?","dev.teogor.winds.api.model.ModuleDescriptor.scm"]},{"name":"val ticketSystem: TicketSystem?","description":"dev.teogor.winds.api.model.ModuleDescriptor.ticketSystem","location":"api/dev.teogor.winds.api.model/-module-descriptor/ticket-system.html","searchKeys":["ticketSystem","val ticketSystem: TicketSystem?","dev.teogor.winds.api.model.ModuleDescriptor.ticketSystem"]},{"name":"val value: String","description":"dev.teogor.winds.api.model.Path.value","location":"api/dev.teogor.winds.api.model/-path/value.html","searchKeys":["value","val value: String","dev.teogor.winds.api.model.Path.value"]},{"name":"val version: String","description":"dev.teogor.winds.api.model.Dependency.version","location":"api/dev.teogor.winds.api.model/-dependency/version.html","searchKeys":["version","val version: String","dev.teogor.winds.api.model.Dependency.version"]},{"name":"val version: Version","description":"dev.teogor.winds.api.model.DependencyBundle.version","location":"api/dev.teogor.winds.api.model/-dependency-bundle/version.html","searchKeys":["version","val version: Version","dev.teogor.winds.api.model.DependencyBundle.version"]},{"name":"val version: Version","description":"dev.teogor.winds.api.model.ModuleDependency.version","location":"api/dev.teogor.winds.api.model/-module-dependency/version.html","searchKeys":["version","val version: Version","dev.teogor.winds.api.model.ModuleDependency.version"]},{"name":"val version: Version","description":"dev.teogor.winds.api.model.ModuleMetadataDefault.version","location":"api/dev.teogor.winds.api.model/-module-metadata-default/version.html","searchKeys":["version","val version: Version","dev.teogor.winds.api.model.ModuleMetadataDefault.version"]},{"name":"val windsChangelogYml: String","description":"dev.teogor.winds.api.model.ModuleDescriptor.windsChangelogYml","location":"api/dev.teogor.winds.api.model/-module-descriptor/winds-changelog-yml.html","searchKeys":["windsChangelogYml","val windsChangelogYml: String","dev.teogor.winds.api.model.ModuleDescriptor.windsChangelogYml"]},{"name":"var acceptedModules: List<String>","description":"dev.teogor.winds.api.BomOptions.acceptedModules","location":"api/dev.teogor.winds.api/-bom-options/accepted-modules.html","searchKeys":["acceptedModules","var acceptedModules: List<String>","dev.teogor.winds.api.BomOptions.acceptedModules"]},{"name":"var acceptedPaths: List<String>","description":"dev.teogor.winds.api.BomOptions.acceptedPaths","location":"api/dev.teogor.winds.api/-bom-options/accepted-paths.html","searchKeys":["acceptedPaths","var acceptedPaths: List<String>","dev.teogor.winds.api.BomOptions.acceptedPaths"]},{"name":"var additionalIncludes: List<String>","description":"dev.teogor.winds.api.DokkaOptions.additionalIncludes","location":"api/dev.teogor.winds.api/-dokka-options/additional-includes.html","searchKeys":["additionalIncludes","var additionalIncludes: List<String>","dev.teogor.winds.api.DokkaOptions.additionalIncludes"]},{"name":"var artifactIdFormat: ArtifactIdFormat","description":"dev.teogor.winds.api.ArtifactDescriptor.artifactIdFormat","location":"api/dev.teogor.winds.api/-artifact-descriptor/artifact-id-format.html","searchKeys":["artifactIdFormat","var artifactIdFormat: ArtifactIdFormat","dev.teogor.winds.api.ArtifactDescriptor.artifactIdFormat"]},{"name":"var baseUrl: String","description":"dev.teogor.winds.api.TicketSystem.Redmine.baseUrl","location":"api/dev.teogor.winds.api/-ticket-system/-redmine/base-url.html","searchKeys":["baseUrl","var baseUrl: String","dev.teogor.winds.api.TicketSystem.Redmine.baseUrl"]},{"name":"var baselineVersion: String","description":"dev.teogor.winds.api.BinaryCompatibility.baselineVersion","location":"api/dev.teogor.winds.api/-binary-compatibility/baseline-version.html","searchKeys":["baselineVersion","var baselineVersion: String","dev.teogor.winds.api.BinaryCompatibility.baselineVersion"]},{"name":"var component: String","description":"dev.teogor.winds.api.TicketSystem.Bugzilla.component","location":"api/dev.teogor.winds.api/-ticket-system/-bugzilla/component.html","searchKeys":["component","var component: String","dev.teogor.winds.api.TicketSystem.Bugzilla.component"]},{"name":"var dependencies: List<ModuleDependency>","description":"dev.teogor.winds.api.model.DependencyBundle.dependencies","location":"api/dev.teogor.winds.api.model/-dependency-bundle/dependencies.html","searchKeys":["dependencies","var dependencies: List<ModuleDependency>","dev.teogor.winds.api.model.DependencyBundle.dependencies"]},{"name":"var domain: String","description":"dev.teogor.winds.api.Scm.Custom.domain","location":"api/dev.teogor.winds.api/-scm/-custom/domain.html","searchKeys":["domain","var domain: String","dev.teogor.winds.api.Scm.Custom.domain"]},{"name":"var enabled: Boolean","description":"dev.teogor.winds.api.BinaryCompatibility.enabled","location":"api/dev.teogor.winds.api/-binary-compatibility/enabled.html","searchKeys":["enabled","var enabled: Boolean","dev.teogor.winds.api.BinaryCompatibility.enabled"]},{"name":"var enabled: Boolean","description":"dev.teogor.winds.api.DokkaOptions.enabled","location":"api/dev.teogor.winds.api/-dokka-options/enabled.html","searchKeys":["enabled","var enabled: Boolean","dev.teogor.winds.api.DokkaOptions.enabled"]},{"name":"var enabled: Boolean","description":"dev.teogor.winds.api.SpotlessOptions.enabled","location":"api/dev.teogor.winds.api/-spotless-options/enabled.html","searchKeys":["enabled","var enabled: Boolean","dev.teogor.winds.api.SpotlessOptions.enabled"]},{"name":"var excludeFiles: List<String>","description":"dev.teogor.winds.api.SpotlessOptions.excludeFiles","location":"api/dev.teogor.winds.api/-spotless-options/exclude-files.html","searchKeys":["excludeFiles","var excludeFiles: List<String>","dev.teogor.winds.api.SpotlessOptions.excludeFiles"]},{"name":"var excludedScopes: List<String>","description":"dev.teogor.winds.api.BomOptions.excludedScopes","location":"api/dev.teogor.winds.api/-bom-options/excluded-scopes.html","searchKeys":["excludedScopes","var excludedScopes: List<String>","dev.teogor.winds.api.BomOptions.excludedScopes"]},{"name":"var failOnIncompatibleChanges: Boolean","description":"dev.teogor.winds.api.BinaryCompatibility.failOnIncompatibleChanges","location":"api/dev.teogor.winds.api/-binary-compatibility/fail-on-incompatible-changes.html","searchKeys":["failOnIncompatibleChanges","var failOnIncompatibleChanges: Boolean","dev.teogor.winds.api.BinaryCompatibility.failOnIncompatibleChanges"]},{"name":"var flag: ReleaseStatus","description":"dev.teogor.winds.api.model.Version.flag","location":"api/dev.teogor.winds.api.model/-version/flag.html","searchKeys":["flag","var flag: ReleaseStatus","dev.teogor.winds.api.model.Version.flag"]},{"name":"var format: String","description":"dev.teogor.winds.api.SpotlessOptions.format","location":"api/dev.teogor.winds.api/-spotless-options/format.html","searchKeys":["format","var format: String","dev.teogor.winds.api.SpotlessOptions.format"]},{"name":"var group: String","description":"dev.teogor.winds.api.ArtifactDescriptor.group","location":"api/dev.teogor.winds.api/-artifact-descriptor/group.html","searchKeys":["group","var group: String","dev.teogor.winds.api.ArtifactDescriptor.group"]},{"name":"var group: String","description":"dev.teogor.winds.api.TicketSystem.GitLab.group","location":"api/dev.teogor.winds.api/-ticket-system/-git-lab/group.html","searchKeys":["group","var group: String","dev.teogor.winds.api.TicketSystem.GitLab.group"]},{"name":"var groupName: String?","description":"dev.teogor.winds.api.Scm.GitLab.groupName","location":"api/dev.teogor.winds.api/-scm/-git-lab/group-name.html","searchKeys":["groupName","var groupName: String?","dev.teogor.winds.api.Scm.GitLab.groupName"]},{"name":"var id: String","description":"dev.teogor.winds.api.Person.Developer.id","location":"api/dev.teogor.winds.api/-person/-developer/id.html","searchKeys":["id","var id: String","dev.teogor.winds.api.Person.Developer.id"]},{"name":"var id: String","description":"dev.teogor.winds.api.Person.DeveloperContributor.id","location":"api/dev.teogor.winds.api/-person/-developer-contributor/id.html","searchKeys":["id","var id: String","dev.teogor.winds.api.Person.DeveloperContributor.id"]},{"name":"var includeFiles: List<String>","description":"dev.teogor.winds.api.SpotlessOptions.includeFiles","location":"api/dev.teogor.winds.api/-spotless-options/include-files.html","searchKeys":["includeFiles","var includeFiles: List<String>","dev.teogor.winds.api.SpotlessOptions.includeFiles"]},{"name":"var isDeprecated: Boolean","description":"dev.teogor.winds.api.model.Version.isDeprecated","location":"api/dev.teogor.winds.api.model/-version/is-deprecated.html","searchKeys":["isDeprecated","var isDeprecated: Boolean","dev.teogor.winds.api.model.Version.isDeprecated"]},{"name":"var major: Int","description":"dev.teogor.winds.api.model.Version.VersionBuilder.major","location":"api/dev.teogor.winds.api.model/-version/-version-builder/major.html","searchKeys":["major","var major: Int","dev.teogor.winds.api.model.Version.VersionBuilder.major"]},{"name":"var minor: Int","description":"dev.teogor.winds.api.model.Version.VersionBuilder.minor","location":"api/dev.teogor.winds.api.model/-version/-version-builder/minor.html","searchKeys":["minor","var minor: Int","dev.teogor.winds.api.model.Version.VersionBuilder.minor"]},{"name":"var name: String","description":"dev.teogor.winds.api.ArtifactDescriptor.name","location":"api/dev.teogor.winds.api/-artifact-descriptor/name.html","searchKeys":["name","var name: String","dev.teogor.winds.api.ArtifactDescriptor.name"]},{"name":"var nameFormat: NameFormat","description":"dev.teogor.winds.api.ArtifactDescriptor.nameFormat","location":"api/dev.teogor.winds.api/-artifact-descriptor/name-format.html","searchKeys":["nameFormat","var nameFormat: NameFormat","dev.teogor.winds.api.ArtifactDescriptor.nameFormat"]},{"name":"var outputDirectory: String","description":"dev.teogor.winds.api.DokkaOptions.outputDirectory","location":"api/dev.teogor.winds.api/-dokka-options/output-directory.html","searchKeys":["outputDirectory","var outputDirectory: String","dev.teogor.winds.api.DokkaOptions.outputDirectory"]},{"name":"var owner: String","description":"dev.teogor.winds.api.TicketSystem.GitHub.owner","location":"api/dev.teogor.winds.api/-ticket-system/-git-hub/owner.html","searchKeys":["owner","var owner: String","dev.teogor.winds.api.TicketSystem.GitHub.owner"]},{"name":"var patch: Int","description":"dev.teogor.winds.api.model.Version.VersionBuilder.patch","location":"api/dev.teogor.winds.api.model/-version/-version-builder/patch.html","searchKeys":["patch","var patch: Int","dev.teogor.winds.api.model.Version.VersionBuilder.patch"]},{"name":"var path: String","description":"dev.teogor.winds.api.Scm.Local.path","location":"api/dev.teogor.winds.api/-scm/-local/path.html","searchKeys":["path","var path: String","dev.teogor.winds.api.Scm.Local.path"]},{"name":"var product: String","description":"dev.teogor.winds.api.TicketSystem.Bugzilla.product","location":"api/dev.teogor.winds.api/-ticket-system/-bugzilla/product.html","searchKeys":["product","var product: String","dev.teogor.winds.api.TicketSystem.Bugzilla.product"]},{"name":"var project: String","description":"dev.teogor.winds.api.TicketSystem.GitLab.project","location":"api/dev.teogor.winds.api/-ticket-system/-git-lab/project.html","searchKeys":["project","var project: String","dev.teogor.winds.api.TicketSystem.GitLab.project"]},{"name":"var projectId: String","description":"dev.teogor.winds.api.TicketSystem.Redmine.projectId","location":"api/dev.teogor.winds.api/-ticket-system/-redmine/project-id.html","searchKeys":["projectId","var projectId: String","dev.teogor.winds.api.TicketSystem.Redmine.projectId"]},{"name":"var projectKey: String","description":"dev.teogor.winds.api.TicketSystem.Jira.projectKey","location":"api/dev.teogor.winds.api/-ticket-system/-jira/project-key.html","searchKeys":["projectKey","var projectKey: String","dev.teogor.winds.api.TicketSystem.Jira.projectKey"]},{"name":"var repository: String","description":"dev.teogor.winds.api.TicketSystem.GitHub.repository","location":"api/dev.teogor.winds.api/-ticket-system/-git-hub/repository.html","searchKeys":["repository","var repository: String","dev.teogor.winds.api.TicketSystem.GitHub.repository"]},{"name":"var serverUrl: String","description":"dev.teogor.winds.api.TicketSystem.Bugzilla.serverUrl","location":"api/dev.teogor.winds.api/-ticket-system/-bugzilla/server-url.html","searchKeys":["serverUrl","var serverUrl: String","dev.teogor.winds.api.TicketSystem.Bugzilla.serverUrl"]},{"name":"var serverUrl: String","description":"dev.teogor.winds.api.TicketSystem.Jira.serverUrl","location":"api/dev.teogor.winds.api/-ticket-system/-jira/server-url.html","searchKeys":["serverUrl","var serverUrl: String","dev.teogor.winds.api.TicketSystem.Jira.serverUrl"]},{"name":"var sourceDirectories: List<String>","description":"dev.teogor.winds.api.DokkaOptions.sourceDirectories","location":"api/dev.teogor.winds.api/-dokka-options/source-directories.html","searchKeys":["sourceDirectories","var sourceDirectories: List<String>","dev.teogor.winds.api.DokkaOptions.sourceDirectories"]},{"name":"var version: Version","description":"dev.teogor.winds.api.ArtifactDescriptor.version","location":"api/dev.teogor.winds.api/-artifact-descriptor/version.html","searchKeys":["version","var version: Version","dev.teogor.winds.api.ArtifactDescriptor.version"]},{"name":"var workspaceName: String?","description":"dev.teogor.winds.api.Scm.Bitbucket.workspaceName","location":"api/dev.teogor.winds.api/-scm/-bitbucket/workspace-name.html","searchKeys":["workspaceName","var workspaceName: String?","dev.teogor.winds.api.Scm.Bitbucket.workspaceName"]}]